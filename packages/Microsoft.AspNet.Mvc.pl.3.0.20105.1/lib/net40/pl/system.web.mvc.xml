<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Reprezentuje atrybut określający, na które zlecenia HTTP będzie odpowiadać metoda akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" />, używając listy zleceń HTTP, na które będzie odpowiadać metoda akcji.</summary>
      <param name="verbs">Zlecenia HTTP, na które będzie odpowiadać metoda akcji.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="verbs" /> ma wartość null lub zerową długość.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" />, używając zleceń HTTP, na które będzie odpowiadać metoda akcji.</summary>
      <param name="verbs">Zlecenia HTTP, na które będzie odpowiadać metoda akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ustala, czy określone informacje o metodzie są prawidłowe dla określonego kontekstu kontrolera.</summary>
      <returns>true, jeśli informacje o metodzie są prawidłowe; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext " /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Pobiera lub ustawia listę zleceń HTTP, na które będzie odpowiadać metoda akcji.</summary>
      <returns>Lista zleceń HTTP, na które będzie odpowiadać metoda akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Dostarcza informacje o metodzie akcji, takie jak jej nazwa, kontroler, parametry, atrybuty i filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Pobiera nazwę metody akcji.</summary>
      <returns>Nazwa metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Pobiera deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wykonuje metodę akcji, używając określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Wynik wykonania metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, określonych według typu.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe określonego typu.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attritubeType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Zwraca filtry skojarzone z tą metodą akcji.</summary>
      <returns>Filtry skojarzone z tą metodą akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Zwraca parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Zwraca selektory metod akcji.</summary>
      <returns>Selektory metod akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Ustala, czy dla danego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień określonego typu atrybutu.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano typ <paramref name="attributeType" />; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attritubeType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Pobiera unikatowy identyfikator deskryptora akcji, używając inicjowania z opóźnieniem.</summary>
      <returns>Unikatowy identyfikator.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Zapewnia kontekst dla metody ActionExecuted klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor metody akcji.</param>
      <param name="canceled">true, jeśli akcja została anulowana; w przeciwnym wypadku .</param>
      <param name="exception">Obiekt wyjątku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="actionDescriptor" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ten obiekt <see cref="T:System.Web.Mvc.ActionExecutedContext" /> został anulowany.</summary>
      <returns>true, jeśli kontekst został anulowany; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Pobiera lub ustawia wyjątek, który wystąpił (o ile wystąpił) podczas wykonywania metody akcji.</summary>
      <returns>Pobiera wyjątek, który wystąpił podczas wykonywania metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy dany wyjątek jest obsługiwany.</summary>
      <returns>true, jeśli wyjątek został obsłużony; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Pobiera lub ustawia wynik zwracany przez metodę akcji.</summary>
      <returns>Wynik zwracany przez metodę akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Zapewnia kontekst dla metody ActionExecuting klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionExecutingContext" />, używając określonego kontekstu kontrolera, deskryptora akcji i parametrów metody akcji.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="actionParameters">Parametry metody akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="ActionParameters" /> lub <paramref name="actionDescriptor" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Pobiera lub ustawia deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Pobiera lub ustawia parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Pobiera lub ustawia wynik zwracany przez metodę akcji.</summary>
      <returns>Wynik zwracany przez metodę akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Reprezentuje klasę podstawową dla wszystkich atrybutów filtru akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Metoda wywoływana przez platformę MVC po wykonaniu metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Metoda wywoływana przez platformę MVC przed wykonaniem metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Metoda wywoływana przez platformę MVC po wykonaniu wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przez platformę MVC przed wykonaniem wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Reprezentuje atrybut wpływający na wybór metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ustala, czy wybór metody akcji jest prawidłowy dla określonego kontekstu kontrolera.</summary>
      <returns>true, jeśli wybór metody akcji jest prawidłowy dla określonego kontekstu kontrolera; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Reprezentuje atrybut używany dla nazwy akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionNameAttribute" />.</summary>
      <param name="name">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Ustala, czy nazwa akcji jest prawidłowa w określonym kontekście kontrolera.</summary>
      <returns>true, jeśli nazwa akcji jest prawidłowa w określonym kontekście kontrolera; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Pobiera lub ustawia nazwę akcji.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Reprezentuje atrybut wpływający na wybór metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Ustala, czy nazwa akcji jest prawidłowa dla określonego kontekstu kontrolera.</summary>
      <returns>true, jeśli nazwa akcji jest prawidłowa dla określonego kontekstu kontrolera; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Hermetyzuje wynik metody akcji i służy do wykonywania operacji na poziomie platformy w imieniu tej metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Reprezentuje delegata zawierającego logikę wyboru metody akcji.</summary>
      <returns>true, jeśli metoda akcji została pomyślnie wybrana; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Bieżący kontekst żądania HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Implementuje interfejs <see cref="T:System.Web.Mvc.IMetadataAware" /> do obsługi dodatkowych metadanych. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name"></member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value"></member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Reprezentuje obsługę renderowania kodu HTML w widoku w scenariuszach, w których jest wykorzystywana technologia Ajax.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper" />, używając określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <exception cref="T:System.ArgumentNullException">Jeden lub oba parametry mają wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper" />, używając określonego kontekstu widoku, kontenera danych widoku i kolekcji tras.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja tras URL.</param>
      <exception cref="T:System.ArgumentNullException">Jeden lub więcej parametrów ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Pobiera lub ustawia ścieżkę główną lokalizacji do użycia w plikach skryptów globalizacji.</summary>
      <returns>Lokalizacja folderu, w którym są przechowywane pliki skryptów globalizacji. Lokalizacja domyślna to ~/Scripts/Globalization.</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Serializuje określony komunikat i zwraca wynikowy ciąg w formacie JSON.</summary>
      <returns>Komunikat zserializowany jako ciąg w formacie JSON.</returns>
      <param name="message">Komunikat do serializacji.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Pobiera kolekcję tras URL dla aplikacji.</summary>
      <returns>Kolekcja tras dla aplikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Pobiera informacje kontekstu dotyczące widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Pobiera bieżący słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Pobiera kontener danych widoku.</summary>
      <returns>Kontener danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Reprezentuje obsługę renderowania kodu HTML w silnie typizowanym widoku w scenariuszach, w których jest wykorzystywana technologia Ajax.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper`1" />, używając określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AjaxHelper`1" />, używając określonego kontekstu widoku, kontenera danych widoku i kolekcji tras URL.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja tras URL.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Pobiera silnie typizowaną wersję słownika danych widoku.</summary>
      <returns>Silnie typizowany słownik danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Reprezentuje klasę, która rozszerza klasę <see cref="T:System.Web.HttpRequestBase" />, dodając możliwość ustalenia, czy żądanie HTTP jest żądaniem AJAX.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)"></member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>Allows a request to include HTML markup during model binding by skipping request validation for the property. (It is strongly recommended that your application explicitly check all models where you disable request validation in order to prevent script exploits.)</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.AllowHtmlAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>This method supports the ASP.NET MVC validation infrastructure and is not intended to be used directly from your code.</summary>
      <param name="metadata">The model metadata.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Zapewnia sposób zarejestrowania jednego lub większej liczby obszarów w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AreaRegistration" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Pobiera nazwę obszaru do zarejestrowania.</summary>
      <returns>Nazwa obszaru do zarejestrowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Rejestruje wszystkie obszary w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Rejestruje wszystkie obszary w aplikacji ASP.NET MVC, używając określonych informacji zdefiniowanych przez użytkownika.</summary>
      <param name="state">Obiekt zawierający zdefiniowane przez użytkownika informacje, które mają być przekazane do obszaru.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Rejestruje wszystkie obszary w aplikacji ASP.NET MVC, używając określonych informacji kontekstu obszaru.</summary>
      <param name="context">Hermetyzuje informacje wymagane do zarejestrowania obszaru.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Hermetyzuje informacje wymagane do zarejestrowania obszaru w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AreaRegistrationContext" />, używając określonej nazwy obszaru i kolekcji tras.</summary>
      <param name="areaName">Nazwa obszaru do zarejestrowania.</param>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AreaRegistrationContext" />, używając określonej nazwy obszaru, kolekcji tras i danych zdefiniowanych przez użytkownika.</summary>
      <param name="areaName">Nazwa obszaru do zarejestrowania.</param>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="state">Obiekt zawierający zdefiniowane przez użytkownika informacje, które mają być przekazane do obszaru.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Pobiera nazwę obszaru do zarejestrowania.</summary>
      <returns>Nazwa obszaru do zarejestrowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, używając określonych domyślnych wartości trasy.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, używając określonych domyślnych wartości trasy i ograniczeń.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających prawidłowe wartości parametru URL.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, używając określonych domyślnych wartości trasy, ograniczeń i przestrzeni nazw.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających prawidłowe wartości parametru URL.</param>
      <param name="namespaces">Wyliczalny zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, używając określonych domyślnych wartości trasy i przestrzeni nazw.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="namespaces">Wyliczalny zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Mapuje określoną trasę URL i kojarzy ją z obszarem określonym przez właściwość <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, używając określonych przestrzeni nazw.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="name">Nazwa trasy.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="namespaces">Wyliczalny zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Pobiera przestrzenie nazw dla aplikacji.</summary>
      <returns>Wyliczalny zestaw przestrzeni nazw dla aplikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Pobiera kolekcję zdefiniowanych tras dla aplikacji.</summary>
      <returns>Kolekcja zdefiniowanych tras dla aplikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Pobiera obiekt zawierający zdefiniowane przez użytkownika informacje, które mają być przekazane do obszaru.</summary>
      <returns>Obiekt zawierający zdefiniowane przez użytkownika informacje, które mają być przekazane do obszaru.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Zapewnia klasę abstrakcyjną do zaimplementowania dostawcy metadanych.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Konstruktor wywoływany z konstruktorów w klasie pochodnej w celu zainicjowania klasy <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)"></member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera listę atrybutów.</summary>
      <returns>Lista atrybutów.</returns>
      <param name="containerType">Typ kontenera.</param>
      <param name="propertyDescriptor">Deskryptor właściwości.</param>
      <param name="attributes">Kontener atrybutu.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Zwraca listę właściwości modelu.</summary>
      <returns>Lista właściwości modelu.</returns>
      <param name="container">Kontener modelu.</param>
      <param name="containerType">Typ kontenera.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)"></member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)"></member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)"></member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Zwraca deskryptor typu z określonego typu.</summary>
      <returns>Deskryptor typu.</returns>
      <param name="type">Typ.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Zapewnia klasę abstrakcyjną dla klas, które implementują dostawcę sprawdzania poprawności.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Konstruktor wywoływany z konstruktorów w klasach pochodnych w celu zainicjowania klasy <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Pobiera deskryptor typu dla określonego typu.</summary>
      <returns>Deskryptor typu dla określonego typu.</returns>
      <param name="type">Typ dostawcy sprawdzania poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera moduły sprawdzania poprawności dla modelu, używając metadanych i kontekstu kontrolera.</summary>
      <returns>Moduły sprawdzania poprawności dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera moduły sprawdzania poprawności dla modelu, używając metadanych, kontekstu kontrolera i listy atrybutów.</summary>
      <returns>Moduły sprawdzania poprawności dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attributes">Lista atrybutów.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Zapewnia klasę podstawową dla kontrolerów asynchronicznych.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AsyncController.AsyncManager">
      <summary>Pobiera wystąpienie menedżera asynchronicznego.</summary>
      <returns>Wystąpienie menedżera asynchronicznego.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu zainicjowania przetwarzania żądania asynchronicznego.</summary>
      <returns>Stan operacji asynchronicznej.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET podczas inicjowania przetwarzania żądania asynchronicznego.</summary>
      <returns>Stan operacji asynchronicznej.</returns>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.CreateActionInvoker">
      <summary>Tworzy źródło wywołania akcji.</summary>
      <returns>Źródło wywołania akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.EndExecute(System.IAsyncResult)">
      <summary>Anuluje wykonywanie asynchronicznej metody akcji.</summary>
      <param name="asyncResult">Stan wyniku asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.EndExecuteCore(System.IAsyncResult)">
      <summary>Metoda wywoływana przez program ASP.NET po zakończeniu bieżącej akcji asynchronicznej.</summary>
      <param name="asyncResult">Stan wyniku asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu rozpoczęcia wykonywania asynchronicznej metody akcji.</summary>
      <returns>Stan operacji asynchronicznej.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego. Ten parametr może przyjmować wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Anuluje wykonywanie przez program ASP.NET asynchronicznej metody akcji przy końcu wykonywania asynchronicznej metody akcji.</summary>
      <param name="asyncResult">Stan wyniku asynchronicznego.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Reprezentuje atrybut służący do ustawiania wartości limitu czasu (w milisekundach) dla metody asynchronicznej.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
      <param name="duration">Wartość limitu czasu w milisekundach.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Pobiera wartość limitu czasu w milisekundach.</summary>
      <returns>Limit czasu w milisekundach.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Metoda wywoływana przez program ASP.NET przed wykonaniem asynchronicznej metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Hermetyzuje informacje wymagane do użycia atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizationContext" />, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst, w jakim jest wykonywany wynik. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizationContext" />, używając określonego kontekstu kontrolera i deskryptora akcji.</summary>
      <param name="controllerContext">Kontekst, w jakim jest wykonywany wynik. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="actionDescriptor">Obiekt dostarczający informacje o metodzie akcji, takie jak jej nazwa, kontroler, parametry, atrybuty i filtry.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Zapewnia informacje o metodzie akcji oznaczonej atrybutem <see cref="T:System.Web.Mvc.AuthorizeAttribute" />, takie jak jej nazwa, kontroler, parametry, atrybuty i filtry.</summary>
      <returns>Deskryptor akcji dla metody akcji oznaczonej atrybutem <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Pobiera lub ustawia wynik zwracany przez metodę akcji.</summary>
      <returns>Wynik zwracany przez metodę akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Reprezentuje atrybut służący do ograniczania dostępu wywołujących do metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>W przypadku zastąpienia zapewnia punkt wejścia dla niestandardowego sprawdzania autoryzacji.</summary>
      <returns>true, jeśli użytkownik jest autoryzowany; w przeciwnym wypadku false.</returns>
      <param name="httpContext">Kontekst HTTP, który hermetyzuje wszystkie informacje właściwe dla protokołu HTTP dotyczące pojedynczego żądania HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Przetwarza żądania HTTP, dla których nie powiodła się autoryzacja.</summary>
      <param name="filterContext">Hermetyzuje informacje dotyczące używania atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />. Obiekt <paramref name="filterContext" /> zawiera kontroler, kontekst HTTP, kontekst żądania, wynik akcji i dane trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana podczas autoryzacji żądań przetworzenia.</summary>
      <param name="filterContext">Kontekst filtru, który hermetyzuje informacje dotyczące używania atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Metoda wywoływana podczas autoryzacji żądań modułu buforującego.</summary>
      <returns>Odwołanie do stanu sprawdzania poprawności.</returns>
      <param name="httpContext">Kontekst HTTP, który hermetyzuje wszystkie informacje właściwe dla protokołu HTTP dotyczące pojedynczego żądania HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Pobiera lub ustawia role użytkowników.</summary>
      <returns>Role użytkowników.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Pobiera unikatowy identyfikator tego atrybutu.</summary>
      <returns>Unikatowy identyfikator tego atrybutu.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Pobiera lub ustawia autoryzowanych użytkowników.</summary>
      <returns>Autoryzowani użytkownicy.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Reprezentuje atrybut używany w celu dostarczenia szczegółowych informacji o tym, jak ma przebiegać wiązanie modelu z parametrem.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BindAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Pobiera lub ustawia rozdzielaną przecinkami listę nazw właściwości, dla których wiązanie jest niedozwolone.</summary>
      <returns>Lista wykluczania.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Pobiera lub ustawia rozdzielaną przecinkami listę nazw właściwości, dla których jest dozwolone wiązanie.</summary>
      <returns>Lista dołączania.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Ustala, czy określona właściwość jest dozwolona.</summary>
      <returns>true, jeśli określona właściwość jest dozwolona; w przeciwnym wypadku false.</returns>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Pobiera lub ustawia prefiks używany, gdy adiustacja jest renderowana na potrzeby powiązania z argumentem akcji lub właściwością modelu.</summary>
      <returns>Prefiks do użycia.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Reprezentuje klasę podstawową dla widoków kompilowanych przez klasę BuildManager przed ich zrenderowaniem przez aparat widoków.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerCompiledView" />, używając określonego kontekstu kontrolera i ścieżki widoku.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerCompiledView" />, używając określonego kontekstu kontrolera, ścieżki widoku i aktywatora strony widoku.</summary>
      <param name="controllerContext">Informacje kontekstu dotyczące bieżącego kontrolera. Te informacje obejmują kontekst HTTP, kontekst żądania, dane trasy, kontekst widoku akcji nadrzędnej itp.</param>
      <param name="viewPath">Ścieżka do widoku, który będzie renderowany.</param>
      <param name="viewPageActivator">Obiekt odpowiedzialny za dynamiczne konstruowanie strony widoku w czasie wykonywania. </param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="viewPath" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Renderuje określony kontekst widoku, używając określonego obiektu składnika zapisywania.</summary>
      <param name="viewContext">Informacje związane z renderowaniem widoku, takie jak dane widoku, dane tymczasowe i kontekst formularza.</param>
      <param name="writer">Obiekt składnika zapisywania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="viewContext" /> ma wartość null.</exception>
      <exception cref="T:SInvalidOperationException">Nie można utworzyć wystąpienia typu widoku.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>W przypadku zastąpienia w klasie pochodnej renderuje określony kontekst widoku, używając określonego obiektu składnika zapisywania i wystąpienia obiektu.</summary>
      <param name="viewContext">Informacje związane z renderowaniem widoku, takie jak dane widoku, dane tymczasowe i kontekst formularza.</param>
      <param name="writer">Obiekt składnika zapisywania.</param>
      <param name="instance">Obiekt zawierający dodatkowe informacje, których można użyć w widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Pobiera lub ustawia ścieżkę widoku.</summary>
      <returns>Ścieżka widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Zapewnia klasę podstawową dla aparatów widoków.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />, używając określonego aktywatora strony widoku.</summary>
      <param name="viewPageActivator">Aktywator strony widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Pobiera wartość wskazującą, czy plik istnieje w określonym wirtualnym systemie plików (ścieżce).</summary>
      <returns>true, jeśli plik istnieje w wirtualnym systemie plików; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Pobiera aktywatora strony widoku.</summary>
      <returns>Aktywator strony widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>Mapuje żądanie przeglądarki na tablicę bajtową.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model, używając określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Obiekt danych wiązania.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Reprezentuje atrybut używany w celu wskazania, że metoda akcji powinna być wywoływana tylko jako akcja podrzędna.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana w przypadku, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Obiekt, który hermetyzuje informacje wymagane do autoryzacji dostępu do akcji podrzędnej.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>Represents a value provider for values from child actions.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> class.</summary>
      <param name="controllerContext">The controller context.</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>Retrieves a value object using the specified key.</summary>
      <returns>The value object for the specified key.</returns>
      <param name="key">The key.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>Represents a factory for creating value provider objects for child actions.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Returns a <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> object for the specified controller context.</summary>
      <returns>A <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> object.</returns>
      <param name="controllerContext">The controller context.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Zwraca moduły sprawdzania poprawności modelu typu danych po stronie klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Zwraca moduły sprawdzania poprawności modelu typu danych po stronie klienta.</summary>
      <returns>Moduły sprawdzania poprawności modelu typu danych po stronie klienta.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Zapewnia atrybut, który porównuje dwie właściwości modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CompareAttribute" />.</summary>
      <param name="otherProperty">Właściwość do porównania z bieżącą właściwością.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Stosuje formatowanie do komunikatu o błędzie na podstawie pola danych, w którym wystąpił błąd porównania.</summary>
      <returns>Sformatowany komunikat o błędzie.</returns>
      <param name="name">Nazwa pola danych, które spowodowało błąd sprawdzania poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formatuje właściwość na potrzeby sprawdzania poprawności po stronie klienta, dołączając gwiazdkę (*) i kropkę.</summary>
      <returns>Ciąg „*” jest dołączany do właściwości.</returns>
      <param name="property">Właściwość.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę reguł sprawdzania poprawności wartości porównania po stronie klienta dla właściwości, używając określonych metadanych modelu i kontekstu kontrolera.</summary>
      <returns>Lista reguł sprawdzania poprawności wartości porównania po stronie klienta.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Ustala, czy określony obiekt jest równy obiektowi porównywanemu.</summary>
      <returns>null, jeśli wartość właściwości porównywanej jest równa wartości parametru; w przeciwnym wypadku wynik sprawdzania poprawności, który zawiera komunikat o błędzie wskazujący, że porównanie nie powiodło się.</returns>
      <param name="value">Wartość obiektu do porównania.</param>
      <param name="validationContext">Kontekst sprawdzania poprawności.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Pobiera właściwość do porównania z bieżącą właściwością.</summary>
      <returns>Właściwość do porównania z bieżącą właściwością.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Reprezentuje zdefiniowany przez użytkownika typ zawartości, który jest wynikiem metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ContentResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Pobiera lub ustawia zawartość.</summary>
      <returns>Zawartość.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Pobiera lub ustawia kodowanie zawartości.</summary>
      <returns>Kodowanie zawartości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Pobiera lub ustawia typ zawartości.</summary>
      <returns>Typ zawartości.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Zapewnia metody odpowiadające na żądania HTTP skierowane do witryny sieci Web ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Pobiera źródło wywołania akcji dla kontrolera.</summary>
      <returns>Źródło wywołania akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Pobiera lub ustawia obiekt wiążący.</summary>
      <returns>Obiekt wiążący.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Tworzy obiekt wyniku zawartości, używając ciągu.</summary>
      <returns>Wystąpienie wyniku zawartości.</returns>
      <param name="content">Zawartość, która ma być zapisana w odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Tworzy obiekt wyniku zawartości, używając ciągu i typu zawartości. </summary>
      <returns>Wystąpienie wyniku zawartości.</returns>
      <param name="content">Zawartość, która ma być zapisana w odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Tworzy obiekt wyniku zawartości, używając ciągu, typu zawartości i kodowania zawartości.</summary>
      <returns>Wystąpienie wyniku zawartości.</returns>
      <param name="content">Zawartość, która ma być zapisana w odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="contentEncoding">Kodowanie zawartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Tworzy źródło wywołania akcji.</summary>
      <returns>Źródło wywołania akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Tworzy dostawcę danych tymczasowych.</summary>
      <returns>Dostawca danych tymczasowych.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane i opcjonalnie zasoby zarządzane.</summary>
      <param name="disposing">true, aby zwolnić zarówno zasoby zarządzane, jak i niezarządzane; false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Wywołuje akcję w bieżącym kontekście kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.FileContentResult" />, używając zawartości pliku i typu pliku.</summary>
      <returns>Obiekt wyniku zawartości pliku.</returns>
      <param name="fileContents">Zawartość binarna, która ma być wysłana do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.FileContentResult" />, używając zawartości pliku, typu zawartości i nazwy pliku docelowego.</summary>
      <returns>Obiekt wyniku zawartości pliku.</returns>
      <param name="fileContents">Zawartość binarna, która ma być wysłana do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="fileDownloadName">Nazwa pliku do użycia w oknie dialogowym pobierania pliku, które jest wyświetlane w przeglądarce.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.FileStreamResult" />, używając obiektu <see cref="T:System.IO.Stream" /> i typu zawartości.  </summary>
      <returns>Obiekt wyniku zawartości pliku.</returns>
      <param name="fileStream">Strumień, który ma być wysłany do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.FileStreamResult" />, używając obiektu <see cref="T:System.IO.Stream" />, typu zawartości i nazwy pliku docelowego. </summary>
      <returns>Obiekt wyniku strumienia plików.</returns>
      <param name="fileStream">Strumień, który ma być wysłany do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="fileDownloadName">Nazwa pliku do użycia w oknie dialogowym pobierania pliku, które jest wyświetlane w przeglądarce.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.FilePathResult" />, używając nazwy pliku i typu zawartości.</summary>
      <returns>Obiekt wyniku strumienia plików.</returns>
      <param name="fileName">Ścieżka pliku, która ma być wysłana do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.FilePathResult" />, używając nazwy pliku, typu zawartości i nazwy pliku do pobrania.</summary>
      <returns>Obiekt wyniku strumienia plików.</returns>
      <param name="fileName">Ścieżka pliku, która ma być wysłana do odpowiedzi.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="fileDownloadName">Nazwa pliku do użycia w oknie dialogowym pobierania pliku, które jest wyświetlane w przeglądarce.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Metoda wywoływana, jeśli żądanie odpowiada danemu kontrolerowi, ale w kontrolerze nie znaleziono żadnej metody o określonej nazwie akcji.</summary>
      <param name="actionName">Nazwa próbowanej akcji.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Pobiera informacje właściwe dla protokołu HTTP dotyczące pojedynczego żądania HTTP.</summary>
      <returns>Kontekst HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound"></member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicjuje dane, które mogą być niedostępne podczas wywoływania konstruktora.</summary>
      <param name="requestContext">Kontekst HTTP i dane trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.JavaScriptResult" />, który zapisuje skrypt w odpowiedzi.</returns>
      <param name="script">Kod JavaScript do uruchomienia na kliencie.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON).</summary>
      <returns>Obiekt wyniku JSON, który serializuje określony obiekt do formatu JSON. Obiekt wyniku przygotowany przez tę metodę jest zapisywany w odpowiedzi przez platformę ASP.NET MVC podczas wykonywania obiektu.</returns>
      <param name="data">Wykres obiektu JavaScript do serializacji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON).</summary>
      <returns>Obiekt wyniku JSON, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Wykres obiektu JavaScript do serializacji.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON).</summary>
      <returns>Obiekt wyniku JSON, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Wykres obiektu JavaScript do serializacji.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="contentEncoding">Kodowanie zawartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON), używając typu zawartości, kodowania zawartości i zachowania żądania JSON.</summary>
      <returns>Obiekt wyniku, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Wykres obiektu JavaScript do serializacji.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="contentEncoding">Kodowanie zawartości.</param>
      <param name="behavior">Zachowanie żądania JSON. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON), używając określonego typu zawartości i zachowania żądania JSON.</summary>
      <returns>Obiekt wyniku, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Wykres obiektu JavaScript do serializacji.</param>
      <param name="contentType">Typ zawartości (typ MIME).</param>
      <param name="behavior">Zachowanie żądania JSON.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.JsonResult" />, który serializuje określony obiekt do formatu JavaScript Object Notation (JSON), używając określonego zachowania żądania JSON.</summary>
      <returns>Obiekt wyniku, który serializuje określony obiekt do formatu JSON.</returns>
      <param name="data">Wykres obiektu JavaScript do serializacji.</param>
      <param name="behavior">Typ zawartości (typ MIME).</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Pobiera obiekt słownika stanu modelu zawierający stan modelu i sprawdzania poprawności wiązania modelu.</summary>
      <returns>Słownik stanu modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Metoda wywoływana po wywołaniu metody akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Metoda wywoływana przed wywołaniem metody akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana, gdy następuje autoryzacja.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Metoda wywoływana, gdy w akcji występuje nieobsługiwany wyjątek.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Metoda wywoływana po wykonaniu wyniku akcji zwróconego przez metodę akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i wyniku akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem wyniku akcji zwróconego przez metodę akcji.</summary>
      <param name="filterContext">Informacje o bieżącym żądaniu i wyniku akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy.</summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy, używając określonego modelu. </summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
      <param name="model">Model renderowany przez widok częściowy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy, używając określonej nazwy widoku. </summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
      <param name="viewName">Nazwa widoku renderowanego w odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.PartialViewResult" />, który renderuje widok częściowy, używając określonej nazwy widoku i modelu. </summary>
      <returns>Obiekt wyniku widoku częściowego.</returns>
      <param name="viewName">Nazwa widoku renderowanego w odpowiedzi.</param>
      <param name="model">Model renderowany przez widok częściowy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.RedirectResult" />, który dokonuje przekierowania pod określony adres URL.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="url">Adres URL, pod który ma nastąpić przekierowanie.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> o ustawionej wartości true.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> o ustawionej wartości true.</returns>
      <param name="url">Adres URL, pod który ma nastąpić przekierowanie.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji i wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Parametry trasy. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji i nazwy kontrolera.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Parametry trasy. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji, nazwy kontrolera i słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej akcji, używając nazwy akcji i słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> o ustawionej wartości true, używając określonej nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> o ustawionej wartości true.</returns>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Przekierowuje do określonej trasy, używając określonych wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeValues">Parametry trasy. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Przekierowuje do określonej trasy, używając nazwy trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Przekierowuje do określonej trasy, używając nazwy trasy i wartości trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Parametry trasy. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej trasy, używając nazwy trasy i słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Przekierowuje do określonej trasy, używając słownika trasy.</summary>
      <returns>Obiekt wyniku przekierowania do trasy.</returns>
      <param name="routeValues">Parametry trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Zwraca wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> o ustawionej wartości true, używając określonej nazwy trasy i wartości trasy.</summary>
      <returns>Wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" /> z właściwością <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> o ustawionej wartości true.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)"></member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Pobiera obiekt <see cref="T:System.Web.HttpRequestBase" /> dla bieżącego żądania HTTP.</summary>
      <returns>Obiekt żądania.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Pobiera obiekt <see cref="T:System.Web.HttpResponseBase" /> dla bieżącej odpowiedzi HTTP.</summary>
      <returns>Obiekt odpowiedzi.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Pobiera dane trasy dla bieżącego żądania.</summary>
      <returns>Dane trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Pobiera obiekt <see cref="T:System.Web.HttpServerUtilityBase" /> zapewniający metody używane podczas przetwarzania żądania sieci Web.</summary>
      <returns>Obiekt serwera HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Pobiera obiekt <see cref="T:System.Web.HttpSessionStateBase" /> dla bieżącego żądania HTTP.</summary>
      <returns>Obiekt stanu sesji HTTP dla bieżącego żądania HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" />.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" />.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)" />.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" />.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Definiuje obiekt dostawcy danych tymczasowych używany do przechowywania danych dla następnego żądania.</summary>
      <returns>Dostawca danych tymczasowych.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera i prefiksu.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu i uwzględnionych właściwości.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu, listy właściwości do wykluczenia i listy właściwości do uwzględnienia.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="excludeProperties">Lista właściwości, które mają być jawnie wykluczone z aktualizacji. Te właściwości są wykluczane, nawet jeśli znajdują się na liście parametru <paramref name="includeProperties" />.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu, listy właściwości do wykluczenia i listy właściwości do uwzględnienia.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="excludeProperties">Lista właściwości, które mają być jawnie wykluczone z aktualizacji. Te właściwości są wykluczane, nawet jeśli znajdują się na liście parametru <paramref name="includeProperties" />.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu i uwzględnionych właściwości.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości i prefiksu.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera i uwzględnionych właściwości.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="model" /> lub właściwość <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości i listy właściwości do uwzględnienia.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości.</summary>
      <returns>true, jeśli aktualizacja powiodła się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu.</summary>
      <returns>true, jeśli sprawdzenie poprawności modelu powiodło się; w przeciwnym wypadku false.</returns>
      <param name="model">Wystąpienie modelu, którego poprawność ma zostać sprawdzona.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu, używając prefiksu HTML.</summary>
      <returns>true, jeśli sprawdzenie poprawności modelu powiodło się; w przeciwnym wypadku false.</returns>
      <param name="model">Model, którego poprawność ma zostać sprawdzona.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy modeli.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
      <exception cref="T:System.InvalidOperationException">Model, który nie został pomyślnie zaktualizowany.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera i prefiksu.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu i uwzględnionych właściwości.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości kontrolera, prefiksu, listy właściwości do wykluczenia i listy właściwości do uwzględnienia.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="excludeProperties">Lista właściwości, które mają być jawnie wykluczone z aktualizacji. Te właściwości są wykluczane, nawet jeśli znajdują się na liście <paramref name="includeProperties" />.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu, listy właściwości do wykluczenia i listy właściwości do uwzględnienia.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="excludeProperties">Lista właściwości, które mają być jawnie wykluczone z aktualizacji. Te właściwości są wykluczane, nawet jeśli znajdują się na liście parametru <paramref name="includeProperties" />.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu i listy właściwości do uwzględnienia.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości i prefiksu.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy wartości.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z bieżącego dostawcy wartości obiektu kontrolera.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości, prefiksu i listy właściwości do uwzględnienia.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="includeProperties">Lista właściwości modelu do zaktualizowania.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualizuje określone wystąpienie modelu, używając wartości z dostawcy wartości.</summary>
      <param name="model">Wystąpienie modelu do zaktualizowania.</param>
      <param name="valueProvider">Słownik wartości używanych do zaktualizowania modelu.</param>
      <typeparam name="TModel">Typ obiektu modelu.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Pobiera obiekt pomocnika URL używany do generowania adresów URL przy użyciu routingu.</summary>
      <returns>Obiekt pomocnika URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Pobiera informacje o zabezpieczeniach użytkownika dla bieżącego żądania HTTP.</summary>
      <returns>Informacje o zabezpieczeniach użytkownika dla bieżącego żądania HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu.</summary>
      <param name="model">Model, którego poprawność ma zostać sprawdzona.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Sprawdza poprawność określonego wystąpienia modelu, używając prefiksu HTML.</summary>
      <param name="model">Model, którego poprawność ma zostać sprawdzona.</param>
      <param name="prefix">Prefiks używany podczas wyszukiwania wartości w dostawcy modeli.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok w odpowiedzi.</summary>
      <returns>Wynik widoku, który renderuje widok w odpowiedzi.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok w odpowiedzi, używając modelu.</summary>
      <returns>Wynik widoku.</returns>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok, używając nazwy widoku.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Nazwa widoku renderowanego w odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok w odpowiedzi, używając nazwy widoku i modelu.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Nazwa widoku renderowanego w odpowiedzi.</param>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok w odpowiedzi, używając nazwy widoku i nazwy strony wzorcowej.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Nazwa widoku renderowanego w odpowiedzi.</param>
      <param name="masterName">Nazwa strony wzorcowej lub szablonu do użycia podczas renderowania widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje widok, używając nazwy widoku, nazwy strony wzorcowej i modelu.</summary>
      <returns>Wynik widoku.</returns>
      <param name="viewName">Nazwa widoku renderowanego w odpowiedzi.</param>
      <param name="masterName">Nazwa strony wzorcowej lub szablonu do użycia podczas renderowania widoku.</param>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje określony obiekt <see cref="T:System.Web.Mvc.IView" />.</summary>
      <returns>Wynik widoku.</returns>
      <param name="view">Widok, który jest renderowany w odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Tworzy obiekt <see cref="T:System.Web.Mvc.ViewResult" />, który renderuje określony obiekt <see cref="T:System.Web.Mvc.IView" />.</summary>
      <returns>Wynik widoku.</returns>
      <param name="view">Widok, który jest renderowany w odpowiedzi.</param>
      <param name="model">Model renderowany przez widok.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Reprezentuje klasę odpowiedzialną za wywoływanie metod akcji kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerActionInvoker" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Pobiera lub ustawia obiekty wiążące modelu skojarzone z akcją.</summary>
      <returns>Obiekty wiążące modelu skojarzone z akcją.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Tworzy wynik akcji.</summary>
      <returns>Obiekt wyniku akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="actionReturnValue">Wartość zwracana akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Znajduje informacje o metodzie akcji.</summary>
      <returns>Informacje o metodzie akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Pobiera informacje o kontrolerze, używając określonego kontekstu kontrolera.</summary>
      <returns>Informacje o kontrolerze.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera informacje o filtrach akcji.</summary>
      <returns>Informacje o filtrach akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Pobiera wartość określonego parametru metody akcji.</summary>
      <returns>Wartość parametru metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameterDescriptor">Deskryptor parametru.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera wartości parametrów metody akcji.</summary>
      <returns>Wartości parametrów metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Wywołuje określoną akcję, używając określonego kontekstu kontrolera.</summary>
      <returns>Wynik wykonania akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji do wywołania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Wątek został przerwany podczas wywoływania akcji.</exception>
      <exception cref="T:System.Exception">Wystąpił nieokreślony błąd podczas wywoływania akcji.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wywołuje określoną metodę akcji, używając określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Wynik wykonania metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wywołuje określoną metodę akcji, używając określonych parametrów, kontekstu kontrolera i filtrów akcji.</summary>
      <returns>Kontekst dla metody ActionExecuted klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry akcji.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Wywołuje określony wynik akcji, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionResult">Wynik akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Wywołuje określony wynik akcji, używając określonych filtrów akcji i kontekstu kontrolera.</summary>
      <returns>Kontekst dla metody ResultExecuted klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry akcji.</param>
      <param name="actionResult">Wynik akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Wywołuje określone filtry autoryzacji, używając określonego deskryptora akcji i kontekstu kontrolera.</summary>
      <returns>Kontekst dla obiektu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry autoryzacji.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Wywołuje określone filtry wyjątków, używając określonego wyjątku i kontekstu kontrolera.</summary>
      <returns>Kontekst dla obiektu <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry wyjątków.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Reprezentuje klasę podstawową dla wszystkich kontrolerów MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Pobiera lub ustawia kontekst kontrolera.</summary>
      <returns>Kontekst kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Wykonuje żądanie.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicjuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Pobiera lub ustawia słownik danych tymczasowych.</summary>
      <returns>Słownik danych tymczasowych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Pobiera lub ustawia wartość wskazującą, czy dla danego żądania jest włączone sprawdzanie poprawności żądania.</summary>
      <returns>true, jeśli dla danego żądania jest włączone sprawdzanie poprawności żądania; w przeciwnym wypadku false. Wartość domyślna to true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Pobiera lub ustawia dostawcę wartości dla kontrolera.</summary>
      <returns>Dostawca wartości dla kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag"></member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Pobiera lub ustawia słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Reprezentuje klasę odpowiedzialną za dynamiczne konstruowanie kontrolera.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Pobiera bieżący obiekt konstruktora kontrolera.</summary>
      <returns>Bieżący obiekt konstruktora kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Pobiera domyślne przestrzenie nazw.</summary>
      <returns>Domyślne przestrzenie nazw.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Pobiera skojarzoną fabrykę kontrolerów.</summary>
      <returns>Fabryka kontrolerów.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Ustawia fabrykę kontrolerów, używając określonego typu.</summary>
      <param name="controllerFactoryType">Typ fabryki kontrolerów.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerFactoryType" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Fabryki kontrolerów nie można przypisać z typu w parametrze <paramref name="controllerFactoryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas ustawiania fabryki kontrolerów.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Ustawia określoną fabrykę kontrolerów.</summary>
      <param name="controllerFactory">Fabryka kontrolerów.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerFactory" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Hermetyzuje informacje dotyczące żądania HTTP, które odpowiada określonym wystąpieniom obiektów <see cref="T:System.Web.Routing.RouteBase" /> i <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" />, używając określonego kontekstu HTTP, danych trasy URL i kontrolera.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="routeData">Dane trasy.</param>
      <param name="controller">Kontroler.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" />, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerContext" />, używając określonego kontekstu żądania i kontrolera.</summary>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controller">Kontroler.</param>
      <exception cref="T:System.ArgumentNullException">Jeden lub oba parametry mają wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Pobiera lub ustawia kontroler.</summary>
      <returns>Kontroler.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Pobiera lub ustawia kontekst HTTP.</summary>
      <returns>Kontekst HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Pobiera wartość wskazującą, czy skojarzona metoda akcji jest akcją podrzędną.</summary>
      <returns>true, jeśli skojarzona metoda akcji jest akcja podrzędną; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Pobiera obiekt zawierający informacje kontekstu widoku dla nadrzędnej metody akcji.</summary>
      <returns>Obiekt zawierający informacje kontekstu widoku dla nadrzędnej metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Pobiera lub ustawia kontekst żądania.</summary>
      <returns>Kontekst żądania.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Pobiera lub ustawia dane trasy URL.</summary>
      <returns>Dane trasy URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Hermetyzuje informacje opisujące kontroler, takie jak jego nazwa, typ i akcje.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Pobiera nazwę kontrolera.</summary>
      <returns>Nazwa kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Pobiera typ kontrolera.</summary>
      <returns>Typ kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Znajduje metodę akcji, używając określonej nazwy i kontekstu kontrolera.</summary>
      <returns>Informacje o metodzie akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Pobiera listę deskryptorów metod akcji w kontrolerze.</summary>
      <returns>Lista deskryptorów metod akcji w kontrolerze.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Pobiera atrybuty niestandardowe zdefiniowane dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Pobiera atrybuty niestandardowe określonego typu zdefiniowane dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null (Nothing w języku Visual Basic).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Pobiera wartość wskazującą, czy dla danego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień określonego atrybutu niestandardowego.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano typ <paramref name="attributeType" />; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null (Nothing w języku Visual Basic).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>W przypadku zaimplementowania w klasie pochodnej pobiera unikatowy identyfikator deskryptora kontrolera, używając inicjowania z opóźnieniem.</summary>
      <returns>Unikatowy identyfikator.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Dodaje kontroler do wystąpienia obiektu <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Zwraca kolekcję filtrów wystąpień kontrolerów.</summary>
      <returns>Kolekcja filtrów wystąpień kontrolerów.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Reprezentuje atrybut wywołujący niestandardowy obiekt wiążący modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Pobiera skojarzony obiekt wiążący modelu.</summary>
      <returns>Odwołanie do obiektu, który implementuje interfejs <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Zapewnia kontener dla wspólnych metadanych klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> i klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> dla modelu danych.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
      <param name="provider">Dostawca metadanych modelu adnotacji danych.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu do modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
      <param name="displayColumnAttribute">Atrybut kolumny wyświetlanej.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Zwraca prosty tekst dla danych modelu.</summary>
      <returns>Prosty tekst dla danych modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Implementuje domyślnego dostawcę metadanych modelu dla platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Pobiera metadane dla określonej właściwości.</summary>
      <returns>Metadane właściwości.</returns>
      <param name="attributes">Atrybuty.</param>
      <param name="containerType">Typ kontenera.</param>
      <param name="modelAccessor">Metoda dostępu do modelu.</param>
      <param name="modelType">Typ modelu.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Reprezentuje metodę, która tworzy wystąpienie obiektu <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Zapewnia moduł sprawdzania poprawności modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadane dla modelu.</param>
      <param name="context">Kontekst kontrolera dla modelu.</param>
      <param name="attribute">Atrybut sprawdzania poprawności dla modelu.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Pobiera atrybut sprawdzania poprawności dla modułu sprawdzania poprawności modelu.</summary>
      <returns>Atrybut sprawdzania poprawności dla modułu sprawdzania poprawności modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Pobiera komunikat o błędzie sprawdzania poprawności.</summary>
      <returns>Komunikat o błędzie sprawdzania poprawności.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Pobiera kolekcję reguł sprawdzania poprawności po stronie klienta.</summary>
      <returns>Kolekcja reguł sprawdzania poprawności po stronie klienta.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Pobiera wartość wskazującą, czy jest wymagane sprawdzanie poprawności modelu.</summary>
      <returns>true, jeśli jest wymagane sprawdzanie poprawności modelu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Zwraca listę komunikatów o błędach sprawdzania poprawności dla modelu.</summary>
      <returns>Lista komunikatów o błędach sprawdzania poprawności dla modelu lub pusta lista, jeśli nie wystąpiły żadne błędy.</returns>
      <param name="container">Kontener dla modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Zapewnia modułu sprawdzania poprawności modelu dla określonego typu sprawdzania poprawności.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadane dla modelu.</param>
      <param name="context">Kontekst kontrolera dla modelu.</param>
      <param name="attribute">Atrybut sprawdzania poprawności dla modelu.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Pobiera atrybut sprawdzania poprawności z modułu sprawdzania poprawności modelu.</summary>
      <returns>Atrybut sprawdzania poprawności z modułu sprawdzania poprawności modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Implementuje domyślnego dostawcę sprawdzania poprawności dla platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Pobiera lub ustawia wartość wskazującą, czy są wymagane typy wartości niedopuszczające wartości null.</summary>
      <returns>true, jeśli są wymagane typy wartości niedopuszczające wartości null; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Pobiera listę modułów sprawdzania poprawności.</summary>
      <returns>Lista modułów sprawdzania poprawności.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
      <param name="attributes">Lista atrybutów sprawdzania poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Rejestruje fabrykę adapterów w celu zapewniania sprawdzania poprawności po stronie klienta.</summary>
      <param name="attributeType">Typ atrybutu sprawdzania poprawności.</param>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Rejestruje fabrykę adapterów dla dostawcy sprawdzania poprawności.</summary>
      <param name="attributeType">Typ atrybutu.</param>
      <param name="factory">Fabryka, która będzie używana do tworzenia obiektu <see cref="T:System.Web.Mvc.ModelValidator" /> dla określonego atrybutu.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Rejestruje adapter domyślny.</summary>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Rejestruje domyślną fabrykę adapterów.</summary>
      <param name="factory">Fabryka, która będzie używana do tworzenia obiektu <see cref="T:System.Web.Mvc.ModelValidator" /> dla adaptera domyślnego.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Rejestruje fabrykę adapterów w celu zapewniania domyślnego sprawdzania poprawności obiektów.</summary>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Rejestruje fabrykę adapterów dla domyślnego dostawcy sprawdzania poprawności obiektów.</summary>
      <param name="factory">Fabryka.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Rejestruje fabrykę adapterów w celu zapewniania sprawdzania poprawności obiektów.</summary>
      <param name="modelType">Typ modelu.</param>
      <param name="adapterType">Typ adaptera.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Rejestruje fabrykę adapterów dla dostawcy sprawdzania poprawności obiektów.</summary>
      <param name="modelType">Typ modelu.</param>
      <param name="factory">Fabryka.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Zapewnia fabrykę dla modułów sprawdzania poprawności opartych na interfejsie <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Zapewnia kontener dla modułu sprawdzania poprawności modelu informacji o błędach.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę modułów sprawdzania poprawności modelu informacji o błędach.</summary>
      <returns>Lista modułów sprawdzania poprawności modelu informacji o błędach.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Reprezentuje fabrykę kontrolerów, która jest zarejestrowana domyślnie.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultControllerFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultControllerFactory" />, używając aktywatora kontrolera.</summary>
      <param name="controllerActivator">Obiekt, który implementuje interfejs aktywatora kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Tworzy określony kontroler, używając określonego kontekstu żądania.</summary>
      <returns>Kontroler.</returns>
      <param name="requestContext">Kontekst żądania HTTP, który obejmuje kontekst HTTP i dane trasy.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="controllerName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Pobiera wystąpienie kontrolera dla określonego kontekstu żądania i typu kontrolera.</summary>
      <returns>Wystąpienie kontrolera.</returns>
      <param name="requestContext">Kontekst żądania HTTP, który obejmuje kontekst HTTP i dane trasy.</param>
      <param name="controllerType">Typ kontrolera.</param>
      <exception cref="T:System.Web.HttpException">Parametr <paramref name="controllerType" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Nie można przypisać parametru <paramref name="controllerType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można utworzyć wystąpienia klasy <paramref name="controllerType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Pobiera zachowanie sesji kontrolera.</summary>
      <returns>Zachowanie sesji kontrolera.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Pobiera typ kontrolera dla określonej nazwy i kontekstu żądania.</summary>
      <returns>Typ kontrolera.</returns>
      <param name="requestContext">Kontekst żądania HTTP, który obejmuje kontekst HTTP i dane trasy.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Zwalnia określony kontroler.</summary>
      <param name="controller">Kontroler do zwolnienia.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. Ta metoda wywołuje metodę <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />.</summary>
      <returns>Zachowanie sesji kontrolera.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>Mapuje żądanie przeglądarki na obiekt danych. Ta klasa zapewnia konkretną implementację obiektu wiążącego modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultModelBinder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Pobiera lub ustawia obiekty wiążące modelu dla aplikacji.</summary>
      <returns>Obiekty wiążące modelu dla aplikacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model, używając określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Obiekt powiązany.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext " /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Wiąże określoną właściwość, używając określonego kontekstu kontrolera i kontekstu wiązania oraz określonego deskryptora właściwości.</summary>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje właściwość do powiązania. Deskryptor zapewnia takie informacje jak typ składnika, typ właściwości i wartość właściwości. Ponadto zapewnia metody pobierania lub ustawiania wartości właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Tworzy określony typ modelu, używając określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Obiekt danych określonego typu.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="modelType">Typ obiektu modelu do zwrócenia.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Tworzy indeks (podindeks) na podstawie kategorii składników, które stanowią większy indeks, gdzie określona wartość indeksu jest liczbą całkowitą.</summary>
      <returns>Nazwa podindeksu.</returns>
      <param name="prefix">Prefiks podindeksu.</param>
      <param name="index">Wartość indeksu.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Tworzy indeks (podindeks) na podstawie kategorii składników, które stanowią większy indeks, gdzie określona wartość indeksu jest ciągiem.</summary>
      <returns>Nazwa podindeksu.</returns>
      <param name="prefix">Prefiks podindeksu.</param>
      <param name="index">Wartość indeksu.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Tworzy nazwę właściwości podrzędnej, używając określonego prefiksu i nazwy właściwości.</summary>
      <returns>Nazwa właściwości podrzędnej.</returns>
      <param name="prefix">Prefiks właściwości podrzędnej.</param>
      <param name="propertyName">Nazwa właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Zwraca zestaw właściwości pasujących do ograniczeń filtru właściwości wprowadzonych przez określony parametr <paramref name="binding context" />.</summary>
      <returns>Wyliczalny zestaw deskryptorów właściwości.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Zwraca właściwości modelu, używając określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Kolekcja deskryptorów właściwości.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Zwraca wartość właściwości, używając określonego kontekstu kontrolera, kontekstu wiązania, deskryptora właściwości i obiektu wiążącego właściwości.</summary>
      <returns>Obiekt reprezentujący wartość właściwości.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Deskryptor właściwości, do której ma zostać uzyskany dostęp. Deskryptor zapewnia takie informacje jak typ składnika, typ właściwości i wartość właściwości. Ponadto zapewnia metody pobierania lub ustawiania wartości właściwości.</param>
      <param name="propertyBinder">Obiekt zapewniający sposób powiązania właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Zwraca obiekt deskryptora dla typu określonego przez jego kontekst kontrolera i kontekst wiązania.</summary>
      <returns>Obiekt deskryptora typu niestandardowego.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Ustala, czy model danych jest prawidłowy dla określonego kontekstu wiązania.</summary>
      <returns>true, jeśli model jest prawidłowy; w przeciwnym wypadku false.</returns>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="bindingContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Metoda wywoływana w przypadku zaktualizowania modelu.</summary>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Metoda wywoływana podczas aktualizowania modelu.</summary>
      <returns>true, jeśli model jest aktualizowany; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Metoda wywoływana w przypadku sprawdzenia poprawności określonej właściwości.</summary>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje właściwość, której poprawność ma zostać sprawdzona. Deskryptor zapewnia takie informacje jak typ składnika, typ właściwości i wartość właściwości. Ponadto zapewnia metody pobierania lub ustawiania wartości właściwości.</param>
      <param name="value">Wartość do ustawienia dla właściwości.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Metoda wywoływana podczas sprawdzania poprawności określonej właściwości.</summary>
      <returns>true, jeśli jest sprawdzana poprawność właściwości; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje właściwość, której poprawność jest w danej chwili sprawdzana. Deskryptor zapewnia takie informacje jak typ składnika, typ właściwości i wartość właściwości. Ponadto zapewnia metody pobierania lub ustawiania wartości właściwości.</param>
      <param name="value">Wartość do ustawienia dla właściwości.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Pobiera lub ustawia nazwę pliku zasobów (klucza klasy) zawierającego zlokalizowane wartości ciągów.</summary>
      <returns>Nazwa pliku zasobów (klucza klasy).</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Ustawia określoną właściwość, używając określonego kontekstu kontrolera, kontekstu wiązania i wartości właściwości.</summary>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
      <param name="propertyDescriptor">Opisuje właściwość do ustawienia. Deskryptor zapewnia takie informacje jak typ składnika, typ właściwości i wartość właściwości. Ponadto zapewnia metody pobierania lub ustawiania wartości właściwości.</param>
      <param name="value">Wartość do ustawienia dla właściwości.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Reprezentuje pamięć podręczną lokalizacji widoków.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />, używając określonego okresu buforowania.</summary>
      <param name="timeSpan">Okres buforowania.</param>
      <exception cref="T:System.InvalidOperationException">Dla atrybutu Ticks parametru <paramref name="timeSpan" /> jest ustawiona wartość ujemna.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Pobiera domyślną lokalizację widoku, używając określonego kontekstu HTTP i klucza pamięci podręcznej.</summary>
      <returns>Domyślna lokalizacja widoku.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Wstawia widok w określonej ścieżce wirtualnej, używając określonego kontekstu HTTP, klucza pamięci podręcznej i ścieżki wirtualnej.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpContext" /> ma wartość null.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Tworzy pustą pamięć podręczną lokalizacji widoków.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Pobiera lub ustawia okres buforowania.</summary>
      <returns>Okres buforowania.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Zapewnia punkt rejestracji dla mechanizmów rozpoznawania zależności, które implementują interfejs <see cref="T:System.Web.Mvc.IDependencyResolver" /> lub interfejs IServiceLocator z biblioteki Common Service Locator.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DependencyResolver" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Pobiera implementację mechanizmu rozpoznawania zależności.</summary>
      <returns>Implementacja mechanizmu rozpoznawania zależności.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika.</summary>
      <returns>Implementacja mechanizmu rozpoznawania zależności.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})"></member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika.</summary>
      <param name="commonServiceLocator">Wspólny lokalizator usług.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika.</summary>
      <param name="resolver">Obiekt, który implementuje mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})"></member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Zapewnia punkt rejestracji dla mechanizmów rozpoznawania zależności, używając wspólnego lokalizatora usług podczas korzystania z interfejsu lokalizatora usług.</summary>
      <param name="commonServiceLocator">Wspólny lokalizator usług.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Zapewnia punkt rejestracji dla mechanizmów rozpoznawania zależności, używając określonego interfejsu mechanizmu rozpoznawania zależności.</summary>
      <param name="resolver">Mechanizm rozpoznawania zależności.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Zapewnia bezpieczną implementację metod <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> i <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Rozpoznaje jedną zarejestrowaną usługę, która obsługuje tworzenie obiektów dowolnych.</summary>
      <returns>Żądana usługa lub obiekt.</returns>
      <param name="resolver">Wystąpienie mechanizmu rozpoznawania zależności rozszerzanego przez tę metodę.</param>
      <typeparam name="TService">Typ żądanej usługi lub obiektu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Rozpoznaje wiele zarejestrowanych usług.</summary>
      <returns>Żądane usługi.</returns>
      <param name="resolver">Wystąpienie mechanizmu rozpoznawania zależności rozszerzanego przez tę metodę.</param>
      <typeparam name="TService">Typ żądanych usług.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Reprezentuje klasę podstawową dla dostawców wartości, których wartości pochodzą z kolekcji implementującej interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />.</summary>
      <param name="dictionary">Pary nazwa/wartość używane do inicjowania dostawcy wartości.</param>
      <param name="culture">Informacje o określonej kulturze, takie jak nazwa kultury, system zapisywania i używany kalendarz.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Ustala, czy kolekcja zawiera określony prefiks.</summary>
      <returns>true, jeśli kolekcja zawiera określony prefiks; w przeciwnym wypadku false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="prefix" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Zwraca obiekt wartości, używając określonego klucza i kontekstu kontrolera.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Zapewnia pustego dostawcę metadanych dla modeli danych, które nie wymagają metadanych.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)"></member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Zapewnia pustego dostawcę sprawdzania poprawności dla modeli, które nie wymagają modułu sprawdzania poprawności.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera pusty moduł sprawdzania poprawności modelu.</summary>
      <returns>Pusty moduł sprawdzania poprawności modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Reprezentuje wynik, który nie wykonuje żadnej operacji, jak w przypadku metody akcji kontrolera, która niczego nie zwraca.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.EmptyResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Wykonuje określony kontekst wyniku.</summary>
      <param name="context">Kontekst wyniku.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Zapewnia kontekst dla korzystania z klasy <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ExceptionContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ExceptionContext" /> dla określonego wyjątku, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="exception">Wyjątek.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony.</summary>
      <returns>true, jeśli wyjątek został obsłużony; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Pobiera lub ustawia wynik akcji.</summary>
      <returns>Wynik akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Zapewnia klasę pomocników na potrzeby pobrania nazwy modelu z wyrażenia.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Pobiera nazwę modelu z wyrażenia lambda.</summary>
      <returns>Nazwa modelu.</returns>
      <param name="expression">Wyrażenie.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Pobiera nazwę modelu z wyrażenia ciągu.</summary>
      <returns>Nazwa modelu.</returns>
      <param name="expression">Wyrażenie.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Zapewnia kontener dla metadanych sprawdzania poprawności pól po stronie klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FieldValidationMetadata" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Pobiera lub ustawia nazwę pola danych.</summary>
      <returns>Nazwa pola danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Pobiera lub ustawia wartość wskazującą, czy zawartość komunikatu dotyczącego sprawdzania poprawności powinna zostać zastąpiona błędem sprawdzania poprawności po stronie klienta.</summary>
      <returns>true, jeśli zawartość komunikatu dotyczącego sprawdzania poprawności powinna zostać zastąpiona błędem sprawdzania poprawności po stronie klienta; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Pobiera lub ustawia identyfikator komunikatu modułu sprawdzania poprawności.</summary>
      <returns>Identyfikator komunikatu dotyczącego sprawdzania poprawności.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Pobiera reguły sprawdzania poprawności po stronie klienta.</summary>
      <returns>Reguły sprawdzania poprawności po stronie klienta.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Wysyła zawartość pliku binarnego do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FileContentResult" />, używając określonej zawartości pliku i typu zawartości.</summary>
      <param name="fileContents">Tablica bajtowa, która ma być wysłana do odpowiedzi.</param>
      <param name="contentType">Typ zawartości do użycia dla odpowiedzi.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="fileContents" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>Zawartość binarna, która ma być wysłana do odpowiedzi.</summary>
      <returns>Zawartość pliku.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje zawartość pliku w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Wysyła zawartość pliku do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilePathResult" />, używając określonej nazwy pliku i typu zawartości.</summary>
      <param name="fileName">Nazwa pliku, która ma być wysłana do odpowiedzi.</param>
      <param name="contentType">Typ zawartości odpowiedzi.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fileName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Pobiera lub ustawia ścieżkę pliku wysyłanego do odpowiedzi.</summary>
      <returns>Ścieżka pliku wysyłanego do odpowiedzi.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje plik w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Reprezentuje klasę podstawową używaną w celu wysłania zawartości pliku binarnego do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FileResult" />.</summary>
      <param name="contentType">Typ zawartości.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="contentType" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Pobiera typ zawartości do użycia dla odpowiedzi.</summary>
      <returns>Typ zawartości.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Pobiera lub ustawia nagłówek dyspozycji zawartości, tak aby okno dialogowe pobierania pliku było wyświetlane w przeglądarce z określoną nazwą pliku.</summary>
      <returns>Nazwa pliku.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje plik w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Wysyła zawartość binarną do odpowiedzi, używając wystąpienia obiektu <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FileStreamResult" />.</summary>
      <param name="fileStream">Strumień, który ma być wysłany do odpowiedzi.</param>
      <param name="contentType">Typ zawartości do użycia dla odpowiedzi.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="fileStream" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Pobiera strumień, który zostanie wysłany do odpowiedzi.</summary>
      <returns>Strumień plików.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Zapisuje plik w odpowiedzi.</summary>
      <param name="response">Odpowiedź.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Reprezentuje metadane zawierające odwołanie do implementacji jednego lub wielu interfejsów filtru, kolejności filtru i zakresu filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Filter" />.</summary>
      <param name="instance">Wystąpienie.</param>
      <param name="scope">Zakres.</param>
      <param name="order">Kolejność.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Reprezentuje stałą używaną w celu określenia domyślnej kolejności filtrów.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Pobiera wystąpienie tej klasy.</summary>
      <returns>Wystąpienie tej klasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Pobiera kolejność, w jakiej jest stosowany filtr.</summary>
      <returns>Kolejność, w jakiej jest stosowany filtr.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Pobiera kolejność zakresu filtru.</summary>
      <returns>Kolejność zakresu filtru.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Reprezentuje klasę podstawową dla atrybutów filtru akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Pobiera lub ustawia wartość wskazującą, czy można określić więcej niż jedno wystąpienie atrybutu filtru.</summary>
      <returns>true, jeśli można określić więcej niż jedno wystąpienie atrybutu filtru; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Pobiera lub ustawia kolejność, w jakiej są wykonywane filtry akcji.</summary>
      <returns>Kolejność, w jakiej są wykonywane filtry akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Definiuje dostawcę filtrów dla atrybutów filtrów.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)"></member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera kolekcję niestandardowych atrybutów akcji.</summary>
      <returns>Kolekcja niestandardowych atrybutów akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Pobiera kolekcję atrybutów kontrolera.</summary>
      <returns>Kolekcja atrybutów kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Agreguje filtry ze wszystkich dostawców filtrów w jedną kolekcję.</summary>
      <returns>Filtry kolekcji ze wszystkich dostawców filtrów.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Hermetyzuje informacje o dostępnych filtrach akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterInfo" />, używając określonej kolekcji filtrów.</summary>
      <param name="filters">Kolekcja filtrów.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Pobiera wszystkie filtry akcji w aplikacji.</summary>
      <returns>Filtry akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Pobiera wszystkie filtry autoryzacji w aplikacji.</summary>
      <returns>Filtry autoryzacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Pobiera wszystkie filtry wyjątków w aplikacji.</summary>
      <returns>Filtry wyjątków.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Pobiera wszystkie filtry wyników w aplikacji.</summary>
      <returns>Filtry wyników.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Reprezentuje kolekcję dostawców filtrów dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FilterProviderCollection" />, używając kolekcji dostawców filtrów.</summary>
      <param name="providers">Kolekcja dostawców filtrów.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Zwraca kolekcję dostawców filtrów.</summary>
      <returns>Kolekcja dostawców filtrów.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Zapewnia punkt rejestracji dla filtrów.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Zapewnia punkt rejestracji dla filtrów.</summary>
      <returns>Kolekcja filtrów.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Definiuje wartości określające kolejność, w jakiej filtry ASP.NET MVC są uruchamiane w ramach tego samego typu filtru i kolejności filtru.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Określa pierwszy.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Określa kolejność przed wartością <see cref="F:System.Web.Mvc.FilterScope.Controller" /> i po wartości <see cref="F:System.Web.Mvc.FilterScope.First" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Określa kolejność przed wartością <see cref="F:System.Web.Mvc.FilterScope.Action" /> i po wartości <see cref="F:System.Web.Mvc.FilterScope.Global" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Określa kolejność przed wartością <see cref="F:System.Web.Mvc.FilterScope.Last" /> i po wartości <see cref="F:System.Web.Mvc.FilterScope.Controller" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Określa ostatni.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Zawiera dostawców wartości formularza dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
      <param name="collection">Kolekcja.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="collection" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Pobiera określonego dostawcę wartości.</summary>
      <returns>Dostawca wartości.</returns>
      <param name="name">Nazwa dostawcy wartości do pobrania.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Pobiera wartość wskazującą, czy dostawca wartości zawiera wpis o danym prefiksie.</summary>
      <returns>true, jeśli dostawca wartości zawiera wpis o danym prefiksie; w przeciwnym wypadku false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Pobiera wartość z dostawcy wartości, używając określonego klucza.</summary>
      <returns>Wartość od dostawcy wartości.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Zwraca słownik zawierający dostawców wartości.</summary>
      <returns>Słownik dostawców wartości.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Hermetyzuje informacje wymagane do sprawdzenia poprawności i przetworzenia danych wejściowych z formularza HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormContext" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Pobiera moduły sprawdzania poprawności pól dla formularza.</summary>
      <returns>Słownik modułów sprawdzania poprawności pól dla formularza.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Pobiera lub ustawia identyfikator formularza.</summary>
      <returns>Identyfikator formularza.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Zwraca obiekt zserializowany, który zawiera identyfikator formularza oraz wartości sprawdzania poprawności pól dla formularza.</summary>
      <returns>Obiekt zserializowany, który zawiera identyfikator formularza oraz wartości sprawdzania poprawności pól dla formularza.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Zwraca wartość sprawdzania poprawności dla określonego pola tekstowego.</summary>
      <returns>Wartość, za pomocą której ma zostać sprawdzona poprawność danych wejściowych pola.</returns>
      <param name="fieldName">Nazwa pola, dla którego ma zostać pobrana wartość sprawdzania poprawności.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fieldName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Zwraca wartość sprawdzania poprawności dla określonego pola tekstowego oraz wartość wskazującą, co zrobić, jeśli wartość sprawdzania poprawności nie zostanie znaleziona.</summary>
      <returns>Wartość, za pomocą której ma zostać sprawdzona poprawność danych wejściowych pola.</returns>
      <param name="fieldName">Nazwa pola, dla którego ma zostać pobrana wartość sprawdzania poprawności.</param>
      <param name="createIfNotFound">true, aby utworzyć wartość sprawdzania poprawności w razie, gdy nie zostanie znaleziona; w przeciwnym wypadku false.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="fieldName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Zwraca wartość wskazującą, czy określone pole zostało zrenderowane w formularzu.</summary>
      <returns>true, jeśli pole zostało zrenderowane; w przeciwnym wypadku false.</returns>
      <param name="fieldName">Nazwa pola.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Zapisuje wartość wskazującą, czy określone pole zostało zrenderowane w formularzu.</summary>
      <param name="fieldName">Nazwa pola.</param>
      <param name="value">true, aby określić, że pole zostało zrenderowane w formularzu; w przeciwnym wypadku false.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Ustala, czy błędy sprawdzania poprawności po stronie klienta powinny być dynamicznie dodawane do podsumowania sprawdzania poprawności.</summary>
      <returns>true, jeśli błędy sprawdzania poprawności po stronie klienta powinny być dodawane do podsumowania sprawdzania poprawności; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Pobiera lub ustawia identyfikator podsumowania sprawdzania poprawności.</summary>
      <returns>Identyfikator podsumowania sprawdzania poprawności.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Wylicza typy żądań HTTP dla formularza.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Określa żądanie GET.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Określa żądanie POST.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Reprezentuje dostawcę wartości dla wartości formularza zawartych w obiekcie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormValueProvider" />.</summary>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Reprezentuje klasę odpowiedzialną za tworzenie nowego wystąpienia obiektu dostawcy wartości formularza.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.FormValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości formularza dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości formularza.</returns>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Reprezentuje klasę zawierającą wszystkie filtry globalne.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.GlobalFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Dodaje określony filtr do kolekcji filtrów globalnych.</summary>
      <param name="filter">Filtr.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Dodaje określony filtr do kolekcji filtrów globalnych, używając określonej kolejności uruchamiania filtrów.</summary>
      <param name="filter">Filtr.</param>
      <param name="order">Kolejność uruchamiania filtrów.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Usuwa wszystkie filtry z kolekcji filtrów globalnych.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Ustala, czy filtr należy do kolekcji filtrów globalnych.</summary>
      <returns>true, jeśli filtr określony przez parametr <paramref name="filter" /> został znaleziony w kolekcji filtrów globalnych; w przeciwnym wypadku false.</returns>
      <param name="filter">Filtr.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Pobiera liczbę filtrów w kolekcji filtrów globalnych.</summary>
      <returns>Liczba filtrów w kolekcji filtrów globalnych.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Zwraca moduł wyliczający, który wykonuje iterację w kolekcji filtrów globalnych.</summary>
      <returns>Moduł wyliczający, który wykonuje iterację w kolekcji filtrów globalnych.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Usuwa wszystkie filtry pasujące do określonego filtru.</summary>
      <param name="filter">Filtr do usunięcia.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika. </summary>
      <returns>Moduł wyliczający, który wykonuje iterację w kolekcji filtrów globalnych.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Ten interfejs API obsługuje infrastrukturę ASP.NET MVC i nie powinien być używany bezpośrednio z poziomu kodu użytkownika.</summary>
      <returns>Moduł wyliczający, który wykonuje iterację w kolekcji filtrów globalnych.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Reprezentuje kolekcję filtrów globalnych.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Pobiera lub ustawia kolekcję filtrów globalnych.</summary>
      <returns>Kolekcja filtrów globalnych.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Reprezentuje atrybut służący do obsługi wyjątku spowodowanego przez metodę akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Pobiera lub ustawia typ wyjątku.</summary>
      <returns>Typ wyjątku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Pobiera lub ustawia widok główny na potrzeby wyświetlania informacji o wyjątku.</summary>
      <returns>Widok główny.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Metoda wywoływana, gdy występuje wyjątek.</summary>
      <param name="filterContext">Kontekst filtru akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Pobiera unikatowy identyfikator tego atrybutu.</summary>
      <returns>Unikatowy identyfikator tego atrybutu.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Pobiera lub ustawia widok strony na potrzeby wyświetlania informacji o wyjątku.</summary>
      <returns>Widok strony.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Hermetyzuje informacje dotyczące obsługi błędu spowodowanego przez metodę akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HandleErrorInfo" />.</summary>
      <param name="exception">Wyjątek.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="controllerName" /> lub <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Pobiera lub ustawia nazwę akcji, która była wykonywana, gdy wystąpił wyjątek.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Pobiera lub ustawia nazwę kontrolera zawierającego metodę akcji, która spowodowała wyjątek.</summary>
      <returns>Nazwa kontrolera.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Reprezentuje atrybut używany w celu wskazania, czy wartość właściwości lub pola powinna być renderowana jako ukryty element input.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HiddenInputAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ma być wyświetlana wartość ukrytego elementu input.</summary>
      <returns>true, jeśli wartość ma być wyświetlana; w przeciwnym wypadku false.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Reprezentuje obsługę renderowania formantów HTML w widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper" />, używając określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="viewContext" /> lub <paramref name="viewDataContainer" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper" />, używając określonego kontekstu widoku, kontenera danych widoku i kolekcji tras.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja tras.</param>
      <exception cref="T:System.ArgumentNullException">Jeden lub więcej parametrów ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Zastępuje znaki podkreślenia znakami kreski dla zgodności z formatem HTML5.</summary>
      <returns>Atrybuty HTML ze znakami podkreślenia zastąpionymi znakami kreski.</returns>
      <param name="htmlAttributes">Atrybuty HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Generuje ukryte pole formularza (token zapobiegający fałszerstwu), którego poprawność jest sprawdzana przy przesyłaniu formularza.</summary>
      <returns>Wygenerowane pole formularza (token zapobiegający fałszerstwu).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Generuje ukryte pole formularza (token zapobiegający fałszerstwu), którego poprawność jest sprawdzana przy przesyłaniu formularza. Wartość pola jest generowana przy użyciu określonej wartości salt.</summary>
      <returns>Wygenerowane pole formularza (token zapobiegający fałszerstwu).</returns>
      <param name="salt">Wartość salt, która może być dowolnym ciągiem niepustym.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Generuje ukryte pole formularza (token zapobiegający fałszerstwu), którego poprawność jest sprawdzana przy przesyłaniu formularza. Wartość pola jest generowana przy użyciu określonej wartości salt, domeny i ścieżki.</summary>
      <returns>Wygenerowane pole formularza (token zapobiegający fałszerstwu).</returns>
      <param name="salt">Wartość salt, która może być dowolnym ciągiem niepustym.</param>
      <param name="domain">Domena aplikacji.</param>
      <param name="path">Ścieżka wirtualna.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Konwertuje określony obiekt atrybutu na ciąg zakodowany w formacie HTML.</summary>
      <returns>Ciąg zakodowany w formacie HTML. Jeśli parametr ma wartość null lub jest pusty, ta metoda zwraca pusty ciąg.</returns>
      <param name="value">Obiekt do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Konwertuje określony ciąg atrybutu na ciąg zakodowany w formacie HTML.</summary>
      <returns>Ciąg zakodowany w formacie HTML. Jeśli parametr ma wartość null lub jest pusty, ta metoda zwraca pusty ciąg.</returns>
      <param name="value">Ciąg do zakodowania.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Pobiera lub ustawia sprawdzanie poprawności po stronie klienta.</summary>
      <returns>true, jeśli jest włączone sprawdzanie poprawności po stronie klienta; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Włącza sprawdzanie poprawności danych wejściowych, które jest przeprowadzane przy użyciu skryptu klienta w przeglądarce.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <param name="enabled">true, aby włączyć sprawdzanie poprawności po stronie klienta; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Włącza dyskretny JavaScript.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <param name="enabled">true, aby włączyć dyskretny JavaScript; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Konwertuje określoną wartość określonego obiektu na ciąg zakodowany w formacie HTML.</summary>
      <returns>Ciąg zakodowany w formacie HTML.</returns>
      <param name="value">Obiekt do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Konwertuje określony ciąg na ciąg zakodowany w formacie HTML.</summary>
      <returns>Ciąg zakodowany w formacie HTML.</returns>
      <param name="value">Ciąg do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Tworzy identyfikator elementu HTML, używając określonej nazwy elementu.</summary>
      <returns>Identyfikator elementu HTML.</returns>
      <param name="name">Nazwa elementu HTML.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="name" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Tworzy identyfikator elementu HTML, używając określonej nazwy elementu i ciągu, który zastępuje kropki w nazwie.</summary>
      <returns>Identyfikator elementu HTML.</returns>
      <param name="name">Nazwa elementu HTML.</param>
      <param name="idAttributeDotReplacement">Ciąg zastępujący kropki (.) w parametrze <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="name" /> lub <paramref name="idAttributeDotReplacement" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a) połączony z określoną metodą akcji i umożliwia użytkownikowi określenie protokołu komunikacyjnego, nazwy hosta oraz fragmentu adresu URL.</summary>
      <returns>Element HTML połączony z określoną metodą akcji.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras URL.</param>
      <param name="linkText">Podpis tekstowy, który ma być wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół komunikacyjny, taki jak HTTP lub HTTPS. Jeśli ten parametr ma wartość null, jako protokół domyślnie jest ustawiany protokół HTTP.</param>
      <param name="hostName">Nazwa hosta.</param>
      <param name="fragment">Identyfikator fragmentu.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a) połączony z określoną metodą akcji.</summary>
      <returns>Element HTML połączony z określoną metodą akcji.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras URL.</param>
      <param name="linkText">Podpis tekstowy, który ma być wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a) połączony z określoną trasą URL i umożliwia użytkownikowi określenie protokołu komunikacyjnego, nazwy hosta oraz fragmentu adresu URL.</summary>
      <returns>Element HTML połączony z określoną trasą URL.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras URL.</param>
      <param name="linkText">Podpis tekstowy, który ma być wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="protocol">Protokół komunikacyjny, taki jak HTTP lub HTTPS. Jeśli ten parametr ma wartość null, jako protokół domyślnie jest ustawiany protokół HTTP.</param>
      <param name="hostName">Nazwa hosta.</param>
      <param name="fragment">Identyfikator fragmentu.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generuje element kotwicy HTML (element a) połączony z określoną trasą URL.</summary>
      <returns>Element HTML połączony z określoną trasą URL.</returns>
      <param name="requestContext">Kontekst żądania HTTP.</param>
      <param name="routeCollection">Kolekcja tras URL.</param>
      <param name="linkText">Podpis tekstowy, który ma być wyświetlany dla łącza.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Zwraca metodę HTTP obsługującą dane wejściowe formularza (metodę GET lub POST) jako ciąg.</summary>
      <returns>Ciąg metody formularza, „get” lub „post”.</returns>
      <param name="method">Metoda HTTP obsługująca formularz.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Zwraca typ formantu danych wejściowych HTML jako ciąg.</summary>
      <returns>Ciąg typu danych wejściowych („checkbox”, „hidden”, „password”, „radio” lub „text”).</returns>
      <param name="inputType">Wyliczany typ danych wejściowych.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Pobiera kolekcję atrybutów sprawdzania poprawności dyskretnego JavaScript, używając określonego atrybutu HTML name.</summary>
      <returns>Kolekcja atrybutów sprawdzania poprawności dyskretnego JavaScript.</returns>
      <param name="name">Atrybut HTML name.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Pobiera kolekcję atrybutów sprawdzania poprawności dyskretnego JavaScript, używając określonego atrybutu HTML name i metadanych modelu.</summary>
      <returns>Kolekcja atrybutów sprawdzania poprawności dyskretnego JavaScript.</returns>
      <param name="name">Atrybut HTML name.</param>
      <param name="metadata">Metadane modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Zwraca ukryty element input określający metodę zastępującą dla określonej metody transferu danych HTTP użytej przez klienta.</summary>
      <returns>Metoda zastępująca, która używa metody transferu danych HTTP użytej przez klienta.</returns>
      <param name="httpMethod">Metoda transferu danych HTTP użyta przez klienta (DELETE, HEAD lub PUT).</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="httpVerb" /> nie ma wartości PUT, DELETE ani HEAD.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Zwraca ukryty element input określający metodę zastępującą dla określonego zlecenia, które reprezentuje metodę transferu danych HTTP użytą przez klienta.</summary>
      <returns>Metoda zastępująca, która używa zlecenia reprezentującego metodę transferu danych HTTP użytą przez klienta.</returns>
      <param name="httpVerb">Zlecenie, które reprezentuje metodę transferu danych HTTP użytą przez klienta.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="httpVerb" /> nie ma wartości PUT, DELETE ani HEAD.</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Pobiera lub ustawia znak zastępujący kropki w atrybucie ID elementu.</summary>
      <returns>Znak zastępujący kropki w atrybucie ID elementu.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)"></member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Pobiera lub ustawia kolekcję tras dla aplikacji.</summary>
      <returns>Kolekcja tras dla aplikacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Pobiera lub ustawia dyskretny JavaScript.</summary>
      <returns>true, jeśli jest włączony dyskretny JavaScript; w przeciwnym wypadku false.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>Nazwa klasy CSS używana do określania stylu pola tekstowego w przypadku wystąpienia błędu sprawdzania poprawności.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Nazwa klasy CSS używana do określania stylu pola tekstowego w przypadku prawidłowych danych wejściowych.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>Nazwa klasy CSS używana do określania stylu komunikatu o błędzie w przypadku wystąpienia błędu sprawdzania poprawności.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Nazwa klasy CSS używana do określania stylu komunikatu dotyczącego sprawdzania poprawności w przypadku prawidłowych danych wejściowych.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>Nazwa klasy CSS używana do określania stylu komunikatów o błędach podsumowania sprawdzania poprawności.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>Nazwa klasy CSS używana do określania stylu podsumowania sprawdzania poprawności w przypadku prawidłowych danych wejściowych.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Pobiera lub ustawia informacje kontekstu dotyczące widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Pobiera bieżący słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Pobiera lub ustawia kontener danych widoku.</summary>
      <returns>Kontener danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Reprezentuje obsługę renderowania formantów HTML w silnie typizowanym widoku.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper`1" />, używając określonego kontekstu widoku i kontenera danych widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HtmlHelper`1" />, używając określonego kontekstu widoku, kontenera danych widoku i kolekcji tras.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="viewDataContainer">Kontener danych widoku.</param>
      <param name="routeCollection">Kolekcja tras.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Pobiera silnie typizowany słownik danych widoku.</summary>
      <returns>Silnie typizowany słownik danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Reprezentuje atrybut służący do ograniczania metody akcji, tak aby metoda ta obsługiwała tylko żądania HTTP DELETE.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ustala, czy żądanie jest prawidłowym żądaniem HTTP DELETE.</summary>
      <returns>true, jeśli żądanie jest prawidłowe; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="methodInfo">Hermetyzuje informacje o metodzie, takie jak jej typ, typ zwracany i argumenty.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Reprezentuje dostawcę wartości do używania z wartościami pochodzącymi z kolekcji plików HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />.</summary>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Reprezentuje klasę odpowiedzialną za tworzenie nowego wystąpienia obiektu dostawcy wartości kolekcji plików HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Dostawca wartości kolekcji plików HTTP.</returns>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące żądania HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Reprezentuje atrybut służący do ograniczania metody akcji, tak aby metoda ta obsługiwała tylko żądania HTTP GET.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpGetAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ustala, czy żądanie jest prawidłowym żądaniem HTTP GET.</summary>
      <returns>true, jeśli żądanie jest prawidłowe; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="methodInfo">Hermetyzuje informacje o metodzie, takie jak jej typ, typ zwracany i argumenty.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Definiuje obiekt używany w celu wskazania, że żądany zasób nie został znaleziony.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpNotFoundResult" />, używając opisu stanu.</summary>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Reprezentuje atrybut służący do ograniczania metody akcji, tak aby metoda ta obsługiwała tylko żądania HTTP POST.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpPostAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ustala, czy żądanie jest prawidłowym żądaniem HTTP POST.</summary>
      <returns>true, jeśli żądanie jest prawidłowe; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="methodInfo">Hermetyzuje informacje o metodzie, takie jak jej typ, typ zwracany i argumenty.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Wiąże model z ogłoszonym plikiem.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model.</summary>
      <returns>Wartość powiązana.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
      <exception cref="T:System.ArgumentNullException">Jeden lub oba parametry mają wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Reprezentuje atrybut służący do ograniczania metody akcji, tak aby metoda ta obsługiwała tylko żądania HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpPutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ustala, czy żądanie jest prawidłowym żądaniem HTTP PUT.</summary>
      <returns>true, jeśli żądanie jest prawidłowe; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="methodInfo">Hermetyzuje informacje o metodzie, takie jak jej typ, typ zwracany i argumenty.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Rozszerza klasę <see cref="T:System.Web.HttpRequestBase" /> zawierającą wartości HTTP, które zostały wysłane przez klienta podczas żądania sieci Web.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Pobiera zamiennik metody transferu danych HTTP użyty przez klienta.</summary>
      <returns>Zamiennik metody transferu danych HTTP użyty przez klienta.</returns>
      <param name="request">Obiekt zawierający wartości HTTP, które zostały wysłane przez klienta podczas żądania sieci Web.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="request" /> ma wartość null.</exception>
      <exception cref="T:System.NotImplementedException">Zamiennik metody transferu danych HTTP nie został zaimplementowany.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Zapewnia sposób zwrócenia wyniku akcji z określonym kodem i opisem stanu odpowiedzi HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />, używając kodu stanu.</summary>
      <param name="statusCode">Kod stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />, używając kodu stanu i opisu stanu.</summary>
      <param name="statusCode">Kod stanu.</param>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Pobiera kod stanu HTTP.</summary>
      <returns>Kod stanu HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Pobiera opis stanu HTTP.</summary>
      <returns>Opis stanu HTTP.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Reprezentuje wynik nieautoryzowanego żądania HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />, używając opisu stanu.</summary>
      <param name="statusDescription">Opis stanu.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Wylicza zlecenia HTTP.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Pobiera informacje lub jednostkę określoną przez identyfikator URI żądania.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Ogłasza nową jednostkę jako dodatek do identyfikatora URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Zastępuje jednostkę określoną przez identyfikator URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Żąda usunięcia określonego identyfikatora URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Pobiera nagłówki komunikatów dla informacji lub jednostki określonej przez identyfikator URI żądania.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Definiuje metody używane w filtrze akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Metoda wywoływana po wykonaniu metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem metody akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Definiuje kontrakt dla źródła wywołania akcji, które jest używane do wywoływania akcji w odpowiedzi na żądanie HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Wywołuje określoną akcję, używając określonego kontekstu kontrolera.</summary>
      <returns>true, jeśli akcja została znaleziona; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Definiuje metody wymagane przez filtr autoryzacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana w przypadku, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Zapewnia platformie sprawdzania poprawności ASP.NET MVC sposób wykrywania w czasie wykonywania, czy moduł sprawdzania poprawności obsługuje sprawdzanie poprawności po stronie klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>W przypadku zaimplementowania w klasie zwraca reguły sprawdzania poprawności po stronie klienta dla tej klasy.</summary>
      <returns>Reguły sprawdzania poprawności po stronie klienta dla tego modułu sprawdzania poprawności.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Definiuje metody wymagane przez kontroler.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Zapewnia szczegółową kontrolę nad sposobem tworzenia wystąpień kontrolerów za pomocą iniekcji zależności.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>W przypadku zaimplementowania w klasie tworzy kontroler.</summary>
      <returns>Utworzony kontroler.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Definiuje metody wymagane przez fabrykę kontrolerów.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Tworzy określony kontroler, używając określonego kontekstu żądania.</summary>
      <returns>Kontroler.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Pobiera zachowanie sesji kontrolera.</summary>
      <returns>Zachowanie sesji kontrolera.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="controllerName">Nazwa kontrolera, którego zachowanie sesji ma zostać pobrane.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Zwalnia określony kontroler.</summary>
      <param name="controller">Kontroler.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Definiuje metody, które upraszczają lokalizowanie usług i rozpoznawanie zależności.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Rozpoznaje jedną zarejestrowaną usługę, która obsługuje tworzenie obiektów dowolnych.</summary>
      <returns>Żądana usługa lub obiekt.</returns>
      <param name="serviceType">Typ żądanej usługi lub obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Rozpoznaje wiele zarejestrowanych usług.</summary>
      <returns>Żądane usługi.</returns>
      <param name="serviceType">Typ żądanych usług.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Definiuje metody wymagane przez filtr wyjątków.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Metoda wywoływana, gdy występuje wyjątek.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Oferuje interfejs do znajdowania filtrów.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Zwraca moduł wyliczający, który zawiera wszystkie wystąpienia interfejsu <see cref="T:System.Web.Mvc.IFilterProvider" /> w lokalizatorze usług.</summary>
      <returns>Moduł wyliczający, który zawiera wszystkie wystąpienia interfejsu <see cref="T:System.Web.Mvc.IFilterProvider" /> w lokalizatorze usług.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Zapewnia interfejs na potrzeby uwidaczniania atrybutów w klasie <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>W przypadku zaimplementowania w klasie dostarcza metadane do procesu tworzenia metadanych modelu.</summary>
      <param name="metadata">Metadane modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Definiuje metody wymagane przez obiekt wiążący modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model z wartością, używając określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Wartość powiązana.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Definiuje metody umożliwiające dynamiczne implementacje wiązania modelu dla klas, które implementują interfejs <see cref="T:System.Web.Mvc.IModelBinder" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Zwraca obiekt wiążący modelu dla określonego typu.</summary>
      <returns>Obiekt wiążący modelu dla określonego typu.</returns>
      <param name="modelType">Typ modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Definiuje elementy członkowskie, które określają kolejność filtrów oraz to, czy jest dozwolonych wiele filtrów.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>W przypadku zaimplementowania w klasie pobiera lub ustawia wartość wskazującą, czy jest dozwolonych wiele filtrów.</summary>
      <returns>true, jeśli jest dozwolonych wiele filtrów; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>W przypadku zaimplementowania w klasie pobiera kolejność filtru.</summary>
      <returns>Kolejność filtru.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Wylicza typy formantów danych wejściowych.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Pole wyboru.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Pole ukryte.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Pole hasła.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Przycisk radiowy.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Pole tekstowe.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Definiuje metody wymagane przez filtr wyników.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Metoda wywoływana po wykonaniu wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Kojarzy trasę z obszarem w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Pobiera nazwę obszaru, z którym ma zostać skojarzona trasa.</summary>
      <returns>Nazwa obszaru, z którym ma zostać skojarzona trasa.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Definiuje kontrakt dla dostawców danych tymczasowych przechowujących dane wyświetlane przy następnym żądaniu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Ładuje dane tymczasowe.</summary>
      <returns>Dane tymczasowe.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje dane tymczasowe.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="values">Wartości.</param>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Reprezentuje interfejs <see cref="T:System.Web.Mvc.IValueProvider" />, który może pominąć sprawdzanie poprawności żądania.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Pobiera wartość obiektu skojarzonego z określonym kluczem.</summary>
      <returns>Wartość obiektu dla określonego klucza.</returns>
      <param name="key">Klucz.</param>
      <param name="skipValidation">true, jeśli sprawdzanie poprawności powinno zostać pominięte; w przeciwnym wypadku false.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Definiuje metody wymagane przez dostawcę wartości na platformie ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Ustala, czy kolekcja zawiera określony prefiks.</summary>
      <returns>true, jeśli kolekcja zawiera określony prefiks; w przeciwnym wypadku false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Pobiera obiekt wartości, używając określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Definiuje metody wymagane przez widok.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Renderuje określony kontekst widoku, używając określonego obiektu składnika zapisywania.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="writer">Obiekt składnika zapisywania.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Definiuje metody wymagane przez słownik danych widoku.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Pobiera lub ustawia słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Definiuje metody wymagane przez aparat widoków.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Znajduje określony widok częściowy, używając określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="useCache">true, aby określić, że aparat widoków zwraca widok zbuforowany, o ile taki widok istnieje; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Znajduje określony widok, używając określonego kontekstu kontrolera.</summary>
      <returns>Widok strony.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewName">Nazwa widoku.</param>
      <param name="masterName">Nazwa wzorca.</param>
      <param name="useCache">true, aby określić, że aparat widoków zwraca widok zbuforowany, o ile taki widok istnieje; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Zwalnia określony widok, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="view">Widok.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Definiuje metody wymagane do buforowania lokalizacji widoków w pamięci.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Pobiera lokalizację widoku, używając określonego kontekstu HTTP i klucza pamięci podręcznej.</summary>
      <returns>Lokalizacja widoku.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Wstawia określoną lokalizację widoku do pamięci podręcznej, używając określonego kontekstu HTTP i klucza pamięci podręcznej.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="key">Klucz pamięci podręcznej.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Zapewnia szczegółową kontrolę nad sposobem tworzenia wystąpień stron widoków za pomocą iniekcji zależności.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <returns>Utworzona strona widoku.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="type">Typ kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Wysyła zawartość JavaScript do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Pobiera lub ustawia skrypt.</summary>
      <returns>Skrypt.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Określa, czy żądania HTTP GET od klienta są dozwolone.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>Żądania HTTP GET od klienta są dozwolone.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>Żądania HTTP GET od klienta są niedozwolone.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Reprezentuje klasę używaną w celu wysłania zawartości w formacie JSON do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.JsonResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Pobiera lub ustawia kodowanie zawartości.</summary>
      <returns>Kodowanie zawartości.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Pobiera lub ustawia typ zawartości.</summary>
      <returns>Typ zawartości.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Pobiera lub ustawia dane.</summary>
      <returns>Dane.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Pobiera lub ustawia wartość wskazującą, czy żądania HTTP GET od klienta są dozwolone.</summary>
      <returns>Wartość określająca, czy żądania HTTP GET od klienta są dozwolone.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Umożliwia metodom akcji wysyłanie i odbieranie tekstu w formacie JSON i wiązanie tekstu JSON z parametrami metod akcji za pomocą modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości JSON dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości JSON dla określonego kontekstu kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Mapuje żądanie przeglądarki na obiekt LINQ <see cref="T:System.Data.Linq.Binary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wiąże model, używając określonego kontekstu kontrolera i kontekstu wiązania.</summary>
      <returns>Obiekt danych wiązania. Jeśli nie można powiązać modelu, ta metoda zwraca wartość null.</returns>
      <param name="controllerContext">Kontekst, w jakim działa kontroler. Informacje kontekstu obejmują kontroler, zawartość HTTP, kontekst żądania i dane trasy.</param>
      <param name="bindingContext">Kontekst, w jakim model jest wiązany. Kontekst obejmuje takie informacje jak obiekt modelu, nazwa modelu, typ modelu, filtr właściwości i dostawca wartości.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Reprezentuje atrybut używany do kojarzenia typu modelu z typem konstruktora modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderAttribute" />.</summary>
      <param name="binderType">Typ obiektu wiążącego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="binderType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Pobiera lub ustawia typ obiektu wiążącego.</summary>
      <returns>Typ obiektu wiążącego.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Pobiera wystąpienie obiektu wiążącego modelu.</summary>
      <returns>Odwołanie do obiektu, który implementuje interfejs <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas tworzenia wystąpienia obiektu wiążącego modelu.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Reprezentuje klasę zawierającą wszystkie obiekty wiążące modelu dla aplikacji, wyświetlane według typów obiektów wiążących.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Dodaje określony element do słownika obiektu wiążącego modelu.</summary>
      <param name="item">Obiekt, który ma zostać dodany do wystąpienia obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Dodaje określony element do słownika obiektu wiążącego modelu, używając określonego klucza.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element o tym samym kluczu już istnieje w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Usuwa wszystkie elementy ze słownika obiektu wiążącego modelu.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Ustala, czy słownik obiektu wiążącego modelu zawiera określoną wartość.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został znaleziony w słowniku obiektu wiążącego modelu; w przeciwnym wypadku false.</returns>
      <param name="item">Obiekt, który ma zostać zlokalizowany w obiekcie <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Ustala, czy słownik obiektu wiążącego modelu zawiera element o danym kluczu.</summary>
      <returns>true, jeśli słownik obiektu wiążącego modelu zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz, który ma zostać zlokalizowany w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Kopiuje elementy słownika obiektu wiążącego modelu do tablicy, począwszy od określonego indeksu.</summary>
      <param name="array">Tablica jednowymiarowa, która jest miejscem docelowym elementów skopiowanych z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />. Indeksowanie tablicy musi zaczynać się od wartości zero.</param>
      <param name="arrayIndex">Zaczynający się od wartości zero indeks w parametrze <paramref name="array" /> określającym, odkąd zaczyna się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> jest mniejszy od 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.-lub- Parametr <paramref name="arrayIndex" /> jest równy długości parametru <paramref name="array" /> lub większy.-lub- Liczba elementów w obiekcie źródłowym <see cref="T:System.Collections.Generic.ICollection`1" /> jest większa niż miejsce dostępne od wartości <paramref name="arrayIndex" /> do końca tablicy docelowej. -lub- Typ <paramref name="T" /> nie może być rzutowany automatycznie na typ tablicy docelowej.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Pobiera liczbę elementów w słowniku obiektu wiążącego modelu.</summary>
      <returns>Liczba elementów w słowniku obiektu wiążącego modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Pobiera lub ustawia domyślny obiekt wiążący modelu.</summary>
      <returns>Domyślny obiekt wiążący modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Pobiera obiekt wiążący modelu dla określonego typu.</summary>
      <returns>Obiekt wiążący modelu.</returns>
      <param name="modelType">Typ modelu do pobrania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Pobiera obiekt wiążący modelu dla określonego typu lub pobiera domyślny obiekt wiążący modelu.</summary>
      <returns>Obiekt wiążący modelu.</returns>
      <param name="modelType">Typ modelu do pobrania.</param>
      <param name="fallbackToDefault">true, aby pobrać domyślny obiekt wiążący modelu.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy słownik obiektu wiążącego modelu jest tylko do odczytu.</summary>
      <returns>true, jeśli słownik obiektu wiążącego modelu jest tylko do odczytu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Pobiera lub ustawia określony klucz w obiekcie, który implementuje interfejs <see cref="T:System.Web.Mvc.IModelBinder" />.</summary>
      <returns>Klucz określonego elementu.</returns>
      <param name="key">Klucz elementu.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze w słowniku obiektu wiążącego modelu.</summary>
      <returns>Kolekcja zawierająca klucze w słowniku obiektu wiążącego modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Usuwa pierwsze wystąpienie określonego elementu ze słownika obiektu wiążącego modelu.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został pomyślnie usunięty ze słownika obiektu wiążącego modelu; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli element określony przez parametr <paramref name="item" /> nie zostanie znaleziony w słowniku obiektu wiążącego modelu.</returns>
      <param name="item">Obiekt, który ma zostać usunięty z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Usuwa element o danym kluczu ze słownika obiektu wiążącego modelu.</summary>
      <returns>true, jeśli element został pomyślnie usunięty; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli klucz określony przez parametr <paramref name="key" /> nie zostanie znaleziony w słowniku obiektu wiążącego modelu.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Pobiera wartość skojarzoną z określonym kluczem.</summary>
      <returns>true, jeśli obiekt, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />, zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Jeśli ta metoda zwraca wartość, jest to wartość skojarzona z określonym kluczem, o ile klucz zostanie znaleziony; w przeciwnym wypadku jest to wartość domyślna typu parametru <paramref name="value" />. Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości w słowniku obiektu wiążącego modelu.</summary>
      <returns>Kolekcja zawierająca wartości w słowniku obiektu wiążącego modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Zapewnia kontener dla dostawców obiektów wiążących modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />, używając listy dostawców obiektów wiążących modelu.</summary>
      <param name="list">Lista dostawców obiektów wiążących modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Zwraca obiekt wiążący modelu mający określony typ.</summary>
      <returns>Obiekt wiążący modelu mający określony typ.</returns>
      <param name="modelType">Typ obiektu wiążącego modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Wstawia dostawcę obiektów wiążących modelu do kolekcji <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Indeks.</param>
      <param name="item">Dostawca obiektów wiążących modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Zastępuje element dostawcy obiektów wiążących modelu w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Indeks.</param>
      <param name="item">Dostawca obiektów wiążących modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Zapewnia kontener dla dostawców obiektów wiążących modelu.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Zapewnia punkt rejestracji dla dostawców obiektów wiążących modelu dla aplikacji, w przypadku których nie jest używana iniekcja zależności.</summary>
      <returns>Kolekcja dostawców obiektów wiążących modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Zapewnia globalny dostęp do obiektów wiążących modelu dla aplikacji.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Pobiera obiekty wiążące modelu dla aplikacji.</summary>
      <returns>Obiekty wiążące modelu dla aplikacji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Zapewnia kontekst, w jakim działa obiekt wiążący modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelBindingContext" />, używając kontekstu wiązania.</summary>
      <param name="bindingContext">Kontekst wiązania.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Pobiera lub ustawia wartość wskazującą, czy dla obiektu wiążącego ma zostać użyty pusty prefiks.</summary>
      <returns>true, jeśli dla obiektu wiążącego ma zostać użyty pusty prefiks; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Pobiera lub ustawia model.</summary>
      <returns>Model.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Pobiera lub ustawia metadane modelu.</summary>
      <returns>Metadane modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Pobiera lub ustawia nazwę modelu.</summary>
      <returns>Nazwa modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Pobiera lub ustawia stan modelu.</summary>
      <returns>Stan modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Pobiera lub ustawia typ modelu.</summary>
      <returns>Typ modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Pobiera lub ustawia filtr właściwości.</summary>
      <returns>Filtr właściwości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Pobiera metadane właściwości.</summary>
      <returns>Metadane właściwości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Pobiera lub ustawia dostawcę wartości.</summary>
      <returns>Dostawca wartości.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>Zapewnia kontener dla wysyłanej do przeglądarki reguły sprawdzania równości.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelClientValidationEqualToRule" />.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
      <param name="other">Wartość modelu używana do porównania równości.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>Zapewnia kontener dla wysyłanej do przeglądarki reguły sprawdzania poprawności zakresu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelClientValidationRangeRule" />.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
      <param name="minValue">Wartość minimalna.</param>
      <param name="maxValue">Wartość maksymalna.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>Zapewnia kontener dla wysyłanej do przeglądarki reguły sprawdzania poprawności wyrażenia regularnego po stronie klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelClientValidationRegexRule" />.</summary>
      <param name="errorMessage">Komunikat o błędzie wyświetlany w przypadku niepomyślnej operacji sprawdzania poprawności wyrażenia regularnego.</param>
      <param name="pattern">Wyrażenie regularne.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>Zapewnia kontener dla wysyłanej do przeglądarki reguły zdalnego sprawdzania poprawności.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelClientValidationRemoteRule" />.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
      <param name="url">Adres URL dla parametrów sprawdzania poprawności.</param>
      <param name="httpMethod">Metoda HTTP dla parametrów sprawdzania poprawności.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>Zapewnia kontener dla reguły sprawdzania poprawności po stronie klienta używanej w przypadku wymaganego pola.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelClientValidationRule" />.</summary>
      <param name="errorMessage">Komunikat o błędzie wyświetlany w przypadku, gdy nie zostanie określona wartość dla wymaganego pola.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>Zapewnia kontener klasy podstawowej dla wysyłanej do przeglądarki reguły sprawdzania poprawności po stronie klienta.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelClientValidationRule" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>Pobiera lub ustawia komunikat o błędzie dotyczący reguły sprawdzania poprawności po stronie klienta.</summary>
      <returns>Komunikat o błędzie dotyczący reguły sprawdzania poprawności po stronie klienta.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>Pobiera listę parametrów sprawdzania poprawności.</summary>
      <returns>Lista parametrów sprawdzania poprawności.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>Pobiera lub ustawia typ sprawdzania poprawności.</summary>
      <returns>Typ sprawdzania poprawności.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>Zapewnia kontener dla wysyłanej do przeglądarki reguły sprawdzania poprawności długości ciągu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelClientValidationStringLengthRule" />.</summary>
      <param name="errorMessage">Komunikat o błędzie sprawdzania poprawności.</param>
      <param name="minimumLength">Minimalna długość ciągu.</param>
      <param name="maximumLength">Maksymalna długość ciągu.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Reprezentuje błąd, który występuje podczas wiązania modelu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelError" />, używając określonego wyjątku.</summary>
      <param name="exception">Wyjątek.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelError" />, używając określonego wyjątku i komunikatu o błędzie.</summary>
      <param name="exception">Wyjątek.</param>
      <param name="errorMessage">Komunikat o błędzie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="exception" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelError" />, używając określonego komunikatu o błędzie.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Pobiera lub ustawia komunikat o błędzie.</summary>
      <returns>Komunikat o błędzie.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Kolekcja wystąpień obiektu <see cref="T:System.Web.Mvc.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Dodaje określony obiekt <see cref="T:System.Exception" /> do kolekcji błędów modelu.</summary>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Dodaje określony komunikat o błędzie do kolekcji błędów modelu.</summary>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Zapewnia kontener dla wspólnych metadanych klasy <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> i klasy <see cref="T:System.Web.Mvc.ModelValidator" /> dla modelu danych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Pobiera słownik zawierający dodatkowe metadane dotyczące modelu.</summary>
      <returns>Słownik zawierający dodatkowe metadane dotyczące modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Pobiera lub ustawia typ kontenera dla modelu.</summary>
      <returns>Typ kontenera dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Pobiera lub ustawia wartość wskazującą, czy puste ciągi, które są odświeżane w formularzach, powinny być konwertowane na wartość null.</summary>
      <returns>true, jeśli puste ciągi, które są odświeżane w formularzach, powinny być konwertowane na wartość null; w przeciwnym wypadku false. Wartość domyślna to true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Pobiera lub ustawia metainformacje o typie danych. </summary>
      <returns>Metainformacje dotyczące typu danych. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Pobiera lub ustawia opis modelu.</summary>
      <returns>Opis modelu. Wartość domyślna to null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Pobiera lub ustawia ciąg formatu wyświetlania dla modelu.</summary>
      <returns>Ciąg formatu wyświetlania dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Pobiera lub ustawia wyświetlaną nazwę modelu.</summary>
      <returns>Wyświetlana nazwa modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Pobiera lub ustawia ciąg formatu edycji modelu.</summary>
      <returns>Ciąg formatu edycji modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <typeparam name="TParameter"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Pobiera metadane z parametru wyrażenia dla modelu.</summary>
      <returns>Metadane dla modelu.</returns>
      <param name="expression">Wyrażenie identyfikujące model.</param>
      <param name="viewData">Słownik danych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Pobiera wyświetlaną nazwę modelu.</summary>
      <returns>Wyświetlana nazwa modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Zwraca prosty opis modelu.</summary>
      <returns>Prosty opis modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę modułów sprawdzania poprawności dla modelu.</summary>
      <returns>Lista modułów sprawdzania poprawności dla modelu.</returns>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Pobiera lub ustawia wartość wskazującą, czy obiekt modelu powinien być renderowany przy użyciu skojarzonych elementów HTML.</summary>
      <returns>true, jeśli skojarzone elementy HTML zawierające obiekt modelu powinny być uwzględniane z tym obiektem; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest typem złożonym.</summary>
      <returns>Wartość wskazująca, czy model jest uważany za typ złożony przez platformę MVC.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Pobiera wartość wskazującą, czy typ dopuszcza wartość null.</summary>
      <returns>true, jeśli typ dopuszcza wartość null; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest tylko do odczytu.</summary>
      <returns>true, jeśli model jest tylko do odczytu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model jest wymagany.</summary>
      <returns>true, jeśli model jest wymagany; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Pobiera wartość modelu.</summary>
      <returns>Wartość modelu. Aby uzyskać więcej informacji o obiekcie <see cref="T:System.Web.Mvc.ModelMetadata" />, zobacz wpis ASP.NET MVC 2 Templates, Part 2: ModelMetadata w blogu Brada Wilsona</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Pobiera typ modelu.</summary>
      <returns>Typ modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Pobiera lub ustawia ciąg, który ma być wyświetlany w przypadku wartości null.</summary>
      <returns>Ciąg, który ma być wyświetlany w przypadku wartości null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Pobiera lub ustawia wartość reprezentującą kolejność bieżących metadanych.</summary>
      <returns>Zwraca obiekt <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Pobiera kolekcję obiektów metadanych modelu opisujących właściwości modelu.</summary>
      <returns>Kolekcja obiektów metadanych modelu opisujących właściwości modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Pobiera nazwę właściwości.</summary>
      <returns>Nazwa właściwości.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Pobiera lub ustawia dostawcę.</summary>
      <returns>Dostawca.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Pobiera lub ustawia krótką wyświetlaną nazwę.</summary>
      <returns>Krótka wyświetlana nazwa.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Pobiera lub ustawia wartość wskazującą, czy właściwość ma być wyświetlana w widokach tylko do odczytu, takich jak listy i widoki szczegółów.</summary>
      <returns>true, jeśli model ma być wyświetlany w widokach tylko do odczytu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Pobiera lub ustawia wartość wskazującą, czy model ma być wyświetlany w widokach edytowalnych.</summary>
      <returns>true, jeśli model ma być wyświetlany w widokach edytowalnych; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Pobiera lub ustawia ciąg wyświetlania uproszczonego dla modelu.</summary>
      <returns>Ciąg wyświetlania uproszczonego dla modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Pobiera lub ustawia wskazówkę sugerującą, jakiego szablonu użyć dla tego modelu.</summary>
      <returns>Wskazówka sugerująca, jakiego szablonu użyć dla tego modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Pobiera lub ustawia wartość, której można użyć jako znaku wodnego.</summary>
      <returns>Znak wodny.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Zapewnia abstrakcyjną klasę podstawową dla niestandardowego dostawcy metadanych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>W przypadku zastąpienia w klasie pochodnej inicjuje nowe wystąpienie obiektu pochodzącego od klasy <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Pobiera obiekt <see cref="T:System.Web.Mvc.ModelMetadata" /> dla poszczególnych właściwości modelu.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.ModelMetadata" /> dla poszczególnych właściwości modelu.</returns>
      <param name="container">Typ kontenera.</param>
      <param name="containerType">Typ kontenera.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)"></member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)"></member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Zapewnia kontener dla bieżącego wystąpienia obiektu <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Pobiera lub ustawia bieżący obiekt <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
      <returns>Bieżący obiekt <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Hermetyzuje stan powiązania modelu z właściwością argumentu metody akcji lub samym argumentem.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ModelErrorCollection" /> zawierający wszelkie błędy, które wystąpiły podczas wiązania modelu.</summary>
      <returns>Błędy.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ValueProviderResult" /> hermetyzujący wartość, która była wiązana podczas wiązania modelu.</summary>
      <returns>Wartość.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Reprezentuje stan próby powiązania ogłoszonego formularza z metodą akcji, w tym informacje sprawdzania poprawności.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelStateDictionary" />, używając wartości skopiowanych z określonego słownika stanu modelu.</summary>
      <param name="dictionary">Słownik stanu modelu.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary " /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Dodaje określony element do słownika stanu modelu.</summary>
      <param name="item">Obiekt, który ma być dodany do słownika stanu modelu.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Dodaje element o danym kluczu i wartości do słownika stanu modelu.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element o danym kluczu już występuje w słowniku stanu modelu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Dodaje określony błąd modelu do kolekcji błędów dla słownika stanu modelu skojarzonego z określonym kluczem.</summary>
      <param name="key">Klucz.</param>
      <param name="exception">Wyjątek.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Dodaje określony komunikat o błędzie do kolekcji błędów dla słownika stanu modelu skojarzonego z określonym kluczem.</summary>
      <param name="key">Klucz.</param>
      <param name="errorMessage">Komunikat o błędzie.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Usuwa wszystkie elementy ze słownika stanu modelu.</summary>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Ustala, czy słownik stanu modelu zawiera określoną wartość.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został znaleziony w słowniku stanu modelu; w przeciwnym wypadku false.</returns>
      <param name="item">Obiekt do zlokalizowania w słowniku stanu modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Ustala, czy słownik stanu modelu zawiera określony klucz.</summary>
      <returns>true, jeśli słownik stanu modelu zawiera określony klucz; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz do zlokalizowania w słowniku stanu modelu. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Kopiuje elementy słownika stanu modelu do tablicy, począwszy od określonego indeksu.</summary>
      <param name="array">Tablica jednowymiarowa, która jest miejscem docelowym elementów skopiowanych z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />. Indeksowanie tablicy musi zaczynać się od wartości zero.</param>
      <param name="arrayIndex">Zaczynający się od wartości zero indeks w parametrze <paramref name="array" /> określającym, odkąd zaczyna się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> jest mniejszy od 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.-lub- Parametr <paramref name="arrayIndex" /> jest równy długości parametru <paramref name="array" /> lub większy.-lub- Liczba elementów w kolekcji źródłowej jest większa niż miejsce dostępne od wartości <paramref name="arrayIndex" /> do końca docelowej wartości <paramref name="array" />.-lub- Typ <paramref name="T" /> nie może być rzutowany automatycznie na typ docelowego parametru <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Pobiera liczbę par klucz/wartość w kolekcji.</summary>
      <returns>Liczba par klucz/wartość w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
      <returns>true, jeśli kolekcja jest tylko do odczytu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Pobiera wartość wskazującą, czy wystąpienie słownika stanu modelu jest prawidłowe.</summary>
      <returns>true, jeśli to wystąpienie jest prawidłowe; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Ustala, czy istnieją jakiekolwiek obiekty <see cref="T:System.Web.Mvc.ModelError" /> skojarzone z określonym kluczem lub nim poprzedzone.</summary>
      <returns>true, jeśli słownik stanu modelu zawiera wartość skojarzoną z określonym kluczem; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</summary>
      <returns>Element stanu modelu.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze w słowniku.</summary>
      <returns>Kolekcja zawierająca klucze słownika stanu modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Kopiuje wartości z określonego obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" /> do tego słownika, zastępując istniejące wartości, jeśli klucze są takie same.</summary>
      <param name="dictionary">Słownik.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Usuwa pierwsze wystąpienie określonego obiektu ze słownika stanu modelu.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został pomyślnie usunięty ze słownika stanu modelu; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli element określony przez parametr <paramref name="item" /> nie zostanie znaleziony w słowniku stanu modelu.</returns>
      <param name="item">Obiekt, który ma być usunięty ze słownika stanu modelu.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Usuwa element o danym kluczu ze słownika stanu modelu.</summary>
      <returns>true, jeśli element został pomyślnie usunięty; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli element określony przez parametr <paramref name="key" /> nie zostanie znaleziony w słowniku stanu modelu.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Słownik stanu modelu jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Ustawia wartość określonego klucza, używając określonego słownika dostawcy wartości.</summary>
      <param name="key">Klucz.</param>
      <param name="value">Wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Próbuje pobrać wartość skojarzoną z określonym kluczem.</summary>
      <returns>true, jeśli obiekt, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />, zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Jeśli ta metoda zwraca wartość, jest to wartość skojarzona z określonym kluczem, o ile klucz zostanie znaleziony; w przeciwnym wypadku jest to wartość domyślna typu parametru <paramref name="value" />. Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości w słowniku.</summary>
      <returns>Kolekcja zawierająca wartości słownika stanu modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Zapewnia kontener dla wyniku sprawdzania poprawności.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Pobiera lub ustawia nazwę elementu członkowskiego.</summary>
      <returns>Nazwa elementu członkowskiego.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Pobiera lub ustawia komunikat o wyniku sprawdzania poprawności.</summary>
      <returns>Komunikat o wyniku sprawdzania poprawności.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Zapewnia klasę podstawową na potrzeby implementacji logiki sprawdzania poprawności.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Konstruktor wywoływany z konstruktorów w klasach pochodnych w celu zainicjowania klasy <see cref="T:System.Web.Mvc.ModelValidator" />.</summary>
      <param name="metadata">Metadane.</param>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Pobiera kontekst kontrolera.</summary>
      <returns>Kontekst kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>W przypadku zaimplementowania w klasie pochodnej zwraca metadane potrzebne do sprawdzenia poprawności po stronie klienta.</summary>
      <returns>Metadane potrzebne do sprawdzenia poprawności po stronie klienta.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Zwraca złożony moduł sprawdzania poprawności modelu dla modelu.</summary>
      <returns>Złożony moduł sprawdzania poprawności modelu dla modelu.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Pobiera lub ustawia wartość wskazującą, czy jest wymagana właściwość modelu.</summary>
      <returns>true, jeśli właściwość modelu jest wymagana; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Pobiera metadane dla modułu sprawdzania poprawności modelu.</summary>
      <returns>Metadane dla modułu sprawdzania poprawności modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>W przypadku zaimplementowania w klasie pochodnej sprawdza poprawność obiektu.</summary>
      <returns>Lista wyników sprawdzania poprawności.</returns>
      <param name="container">Typ kontenera.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Dostarcza listę modułów sprawdzania poprawności dla modułu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>W przypadku zaimplementowania w klasie pochodnej inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę modułów sprawdzania poprawności.</summary>
      <returns>Lista modułów sprawdzania poprawności.</returns>
      <param name="metadata">Metadane.</param>
      <param name="context">Kontekst.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Zapewnia kontener dla listy dostawców sprawdzania poprawności.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />, używając listy dostawców sprawdzania poprawności modelu.</summary>
      <param name="list">Lista dostawców sprawdzania poprawności modelu.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Zwraca listę modułów sprawdzania poprawności modelu.</summary>
      <returns>Lista modułów sprawdzania poprawności modelu.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Wstawia do kolekcji dostawcę modułów sprawdzania poprawności modelu.</summary>
      <param name="index">Zaczynający się od wartości zero indeks, który wskazuje miejsce wstawienia elementu.</param>
      <param name="item">Obiekt dostawcy modułów sprawdzania poprawności modelu, który ma zostać wstawiony.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Zastępuje element dostawcy modułów sprawdzania poprawności modelu w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Zaczynający się od wartości zero indeks, który wskazuje miejsce elementu dostawcy modułów sprawdzania poprawności modelu do zastąpienia.</param>
      <param name="item">Nowa wartość elementu dostawcy modułów sprawdzania poprawności modelu.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Zapewnia kontener dla bieżącego dostawcy sprawdzania poprawności.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Pobiera kolekcję dostawców modułów sprawdzania poprawności modelu.</summary>
      <returns>Kolekcja dostawców modułów sprawdzania poprawności modelu.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Reprezentuje listę elementów, z której użytkownicy mogą wybrać więcej niż jeden element.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" />, używając określonych elementów do uwzględnienia na liście.</summary>
      <param name="items">Element.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" />, używając określonych elementów do uwzględnienia na liście i wybranych wartości.</summary>
      <param name="items">Element.</param>
      <param name="selectedValues">Wybrane wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" />, używając elementów do uwzględnienia na liście, pola wartości danych i pola tekstowego danych.</summary>
      <param name="items">Element.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MultiSelectList" />, używając elementów do uwzględnienia na liście, pola wartości danych, pola tekstowego danych i wybranych wartości.</summary>
      <param name="items">Element.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
      <param name="selectedValues">Wybrane wartości.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="items" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Pobiera lub ustawia pole tekstowe danych.</summary>
      <returns>Pole tekstowe danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Pobiera lub ustawia pole wartości.</summary>
      <returns>Pole wartości danych.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Pobiera lub ustawia elementy listy.</summary>
      <returns>Elementy na liście.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Pobiera lub ustawia wybrane wartości.</summary>
      <returns>Wybrane wartości.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>W przypadku zaimplementowania w klasie pochodnej zapewnia klasę metadanych zawierającą odwołanie do implementacji jednego lub wielu interfejsów filtru, kolejności filtru i zakresu filtru.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcFilter" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcFilter" /> i określa kolejność filtrów oraz to, czy jest dozwolonych wiele filtrów.</summary>
      <param name="allowMultiple">true, aby określić, że użycie wielu filtrów tego samego typu jest dozwolone; w przeciwnym wypadku false.</param>
      <param name="order">Kolejność filtru.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Pobiera wartość wskazującą, czy można określić więcej niż jedno wystąpienie atrybutu filtru.</summary>
      <returns>true, jeśli jest dozwolone określenie więcej niż jednego wystąpienia atrybutu filtru; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Pobiera wartość wskazującą kolejność stosowania filtru.</summary>
      <returns>Wartość wskazująca kolejność stosowania filtru.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Wybiera kontroler, który obsłuży żądanie HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcHandler" />.</summary>
      <param name="requestContext">Kontekst żądania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Dodaje nagłówek wersji, używając określonego kontekstu HTTP.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu rozpoczęcia przetwarzania żądania asynchronicznego.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan obiektu asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu rozpoczęcia przetwarzania żądania asynchronicznego przy użyciu podstawowego kontekstu HTTP.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan obiektu asynchronicznego.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Pobiera lub ustawia wartość wskazującą, czy nagłówek odpowiedzi MVC jest wyłączony.</summary>
      <returns>true, jeśli nagłówek odpowiedzi MVC jest wyłączony; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez program ASP.NET z chwilą zakończenia przetwarzania żądania asynchronicznego.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Pobiera wartość wskazującą, czy inne żądanie może używać wystąpienia interfejsu <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>true, jeśli wystąpienie interfejsu <see cref="T:System.Web.IHttpHandler" /> nadaje się do wielokrotnego użytku; w przeciwnym wypadku false.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Zawiera nazwę nagłówka wersji platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Przetwarza żądanie, używając określonego kontekstu żądania HTTP.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Przetwarza żądanie, używając określonego podstawowego kontekstu żądania HTTP.</summary>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Pobiera kontekst żądania.</summary>
      <returns>Kontekst żądania.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu rozpoczęcia przetwarzania żądania asynchronicznego przy użyciu podstawowego kontekstu HTTP.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="context">Kontekst HTTP.</param>
      <param name="cb">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="extraData">Dane.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez program ASP.NET z chwilą zakończenia przetwarzania żądania asynchronicznego.</summary>
      <param name="result">Wynik asynchroniczny.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Pobiera wartość wskazującą, czy inne żądanie może używać wystąpienia interfejsu <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>true, jeśli wystąpienie interfejsu <see cref="T:System.Web.IHttpHandler" /> nadaje się do wielokrotnego użytku; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Włącza przetwarzanie żądań HTTP sieci Web przez niestandardową obsługę HTTP, która implementuje interfejs <see cref="T:System.Web.IHttpHandler" />.</summary>
      <param name="httpContext">Obiekt <see cref="T:System.Web.HttpContext" /> zapewniający odwołania do wewnętrznych obiektów serwera (na przykład Request, Response, Session i Server), które są używane do obsługi żądań HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Reprezentuje ciąg zakodowany w formacie HTML, który nie powinien być kodowany ponownie.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcHtmlString" />.</summary>
      <param name="value">Ciąg do utworzenia. Jeśli nie jest przypisana żadna wartość, obiekt jest tworzony przy użyciu wartości pustego ciągu.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Tworzy ciąg zakodowany w formacie HTML, używając określonej wartości tekstowej.</summary>
      <returns>Ciąg zakodowany w formacie HTML.</returns>
      <param name="value">Wartość ciągu do utworzenia.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Zawiera pusty ciąg HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Ustala, czy określony ciąg ma zawartość, ma wartość null czy jest pusty.</summary>
      <returns>true, jeśli ciąg ma wartość null lub jest pusty; w przeciwnym wypadku false.</returns>
      <param name="value">Ciąg.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Weryfikuje i przetwarza żądanie HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcHttpHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu rozpoczęcia przetwarzania żądania asynchronicznego.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu rozpoczęcia przetwarzania żądania asynchronicznego.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="httpContext">Podstawowy kontekst HTTP.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez program ASP.NET z chwilą zakończenia przetwarzania żądania asynchronicznego.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Metoda wywoływana przez program ASP.NET w celu rozpoczęcia przetwarzania żądania asynchronicznego.</summary>
      <returns>Stan wywołania asynchronicznego.</returns>
      <param name="context">Kontekst.</param>
      <param name="cb">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="extraData">Obiekt zawierający dane.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Metoda wywoływana przez program ASP.NET z chwilą zakończenia przetwarzania żądania asynchronicznego.</summary>
      <param name="result">Stan operacji asynchronicznych.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Weryfikuje i przetwarza żądanie HTTP.</summary>
      <param name="httpHandler">Obsługa HTTP.</param>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Tworzy obiekt, który implementuje interfejs IHttpHandler i przekazuje do niego kontekst żądania.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcRouteHandler" />, używając określonego obiektu kontrolera fabryki.</summary>
      <param name="controllerFactory">Fabryka kontrolerów.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Zwraca obsługę HTTP, używając określonego kontekstu HTTP.</summary>
      <returns>Obsługa HTTP.</returns>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Zwraca zachowanie sesji.</summary>
      <returns>Zachowanie sesji.</returns>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Zwraca obsługę HTTP, używając określonego kontekstu żądania.</summary>
      <returns>Obsługa HTTP.</returns>
      <param name="requestContext">Kontekst żądania.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Tworzy wystąpienia plików <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Tworzy hosta Razor.</summary>
      <returns>Host Razor.</returns>
      <param name="virtualPath">Ścieżka wirtualna do pliku docelowego.</param>
      <param name="physicalPath">Ścieżka fizyczna do pliku docelowego.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Rozszerza obiekt NameValueCollection, tak aby można było skopiować kolekcję do określonego słownika.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Kopiuje określoną kolekcję w określonym miejscu docelowym.</summary>
      <param name="collection">Kolekcja.</param>
      <param name="destination">Miejsce docelowe.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Kopiuje określoną kolekcję w określonym miejscu docelowym i opcjonalnie zastępuje poprzednie wpisy.</summary>
      <param name="collection">Kolekcja.</param>
      <param name="destination">Miejsce docelowe.</param>
      <param name="replaceEntries">true, aby zastąpić poprzednie wpisy; w przeciwnym wypadku false.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Reprezentuje klasę podstawową dla dostawców wartości, których wartości pochodzą z obiektu <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />, używając określonej kolekcji o niesprawdzonej poprawności.</summary>
      <param name="collection">Kolekcja zawierająca wartości używane do inicjowania dostawcy.</param>
      <param name="unvalidatedCollection">Kolekcja zawierająca wartości używane do inicjowania dostawcy. Poprawność tej kolekcji nie zostanie sprawdzona.</param>
      <param name="culture">Obiekt zawierający informacje o kulturze docelowej.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />.</summary>
      <param name="collection">Kolekcja zawierająca wartości używane do inicjowania dostawcy.</param>
      <param name="culture">Obiekt zawierający informacje o kulturze docelowej.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="collection" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Ustala, czy kolekcja zawiera określony prefiks.</summary>
      <returns>true, jeśli kolekcja zawiera określony prefiks; w przeciwnym wypadku false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="prefix" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Zwraca obiekt wartości, używając określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Zwraca obiekt wartości, używając określonego klucza i dyrektywy sprawdzania poprawności.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz.</param>
      <param name="skipValidation">true, jeśli sprawdzanie poprawności powinno zostać pominięte; w przeciwnym wypadku false.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Zapewnia wygodną otokę atrybutu <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Reprezentuje atrybut używany w celu wskazania, że metoda kontrolera nie jest metodą akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.NonActionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ustala, czy atrybut oznacza metodę, która nie jest metodą akcji, używając określonego kontekstu kontrolera.</summary>
      <returns>true, jeśli atrybut oznacza prawidłową metodę, która nie jest metodą akcji; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="methodInfo">Informacje o metodzie.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Reprezentuje atrybut używany do oznaczania metody akcji, której dane wyjściowe będą buforowane.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.OutputCacheAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Pobiera lub ustawia nazwę profilu pamięci podręcznej.</summary>
      <returns>Nazwa profilu pamięci podręcznej.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Pobiera lub ustawia pamięć podręczną akcji podrzędnych.</summary>
      <returns>Pamięć podręczna akcji podrzędnych.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Pobiera lub ustawia czas trwania buforowania w sekundach.</summary>
      <returns>Czas trwania buforowania.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca wartość wskazującą, czy jest aktywna pamięć podręczna akcji podrzędnych.</summary>
      <returns>true, jeśli jest aktywna pamięć podręczna akcji podrzędnych; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Pobiera lub ustawia lokalizację.</summary>
      <returns>Lokalizacja.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ma być przechowywana pamięć podręczna.</summary>
      <returns>true, jeśli pamięć podręczna ma być przechowywana; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> i obsługuje infrastrukturę ASP.NET MVC. Nie powinna być używana bezpośrednio z poziomu kodu użytkownika. </summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> i obsługuje infrastrukturę ASP.NET MVC. Nie powinna być używana bezpośrednio z poziomu kodu użytkownika.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> i obsługuje infrastrukturę ASP.NET MVC. Nie powinna być używana bezpośrednio z poziomu kodu użytkownika.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Ta metoda jest implementacją metody <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> i obsługuje infrastrukturę ASP.NET MVC. Nie powinna być używana bezpośrednio z poziomu kodu użytkownika.</summary>
      <param name="filterContext">Kontekst filtru.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Metoda wywoływana przed wykonaniem wyniku akcji.</summary>
      <param name="filterContext">Kontekst filtru, który hermetyzuje informacje dotyczące używania atrybutu <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Pobiera lub ustawia zależność SQL.</summary>
      <returns>Zależność SQL.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Pobiera lub ustawia kodowanie vary-by-content.</summary>
      <returns>Kodowanie vary-by-content.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Pobiera lub ustawia wartość vary-by-custom.</summary>
      <returns>Wartość vary-by-custom.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Pobiera lub ustawia wartość vary-by-header.</summary>
      <returns>Wartość vary-by-header.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Pobiera lub ustawia wartość vary-by-param.</summary>
      <returns>Wartość vary-by-param.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Hermetyzuje informacje służące do wiązania parametrów metody akcji z modelem danych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ParameterBindingInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Pobiera obiekt wiążący modelu.</summary>
      <returns>Obiekt wiążący modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Pobiera rozdzielaną przecinkami listę nazw właściwości, dla których jest wyłączone wiązanie.</summary>
      <returns>Lista wykluczania.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Pobiera rozdzielaną przecinkami listę nazw właściwości, dla których jest włączone wiązanie.</summary>
      <returns>Lista dołączania.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Pobiera prefiks używany, gdy platforma MVC wiąże wartość z parametrem akcji lub właściwością modelu.</summary>
      <returns>Prefiks.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Zawiera informacje opisujące parametr.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Pobiera deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Pobiera informacje o wiązaniu.</summary>
      <returns>Informacje o wiązaniu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Pobiera wartość domyślną parametru.</summary>
      <returns>Wartość domyślna parametru.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, określonych według typu.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Wskazuje, czy dla danego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień typu atrybutów niestandardowych.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano typ atrybutów niestandardowych; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="attributeType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Pobiera nazwę parametru.</summary>
      <returns>Nazwa parametru.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Pobiera typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Reprezentuje klasę podstawową używaną w celu wysłania widoku częściowego do odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.PartialViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ViewEngineResult" /> używany do renderowania widoku.</summary>
      <returns>Wynik aparatu widoków.</returns>
      <param name="context">Kontekst kontrolera.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas próby znalezienia widoku przez metodę.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Zapewnia punkt rejestracji dla kodu początkowego wywoływanego przed uruchomieniem aplikacji ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Rejestruje kod początkowy wywoływany przed uruchomieniem aplikacji Razor.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Reprezentuje dostawcę wartości dla ciągów zapytań zawartych w obiekcie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.QueryStringValueProvider" />.</summary>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Reprezentuje klasę odpowiedzialną za tworzenie nowego wystąpienia obiektu dostawcy wartości ciągu zapytania.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości ciągu zapytania.</returns>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Zapewnia adapter dla atrybutu <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut zakresu.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł sprawdzania poprawności zakresu po stronie klienta.</summary>
      <returns>Lista reguł sprawdzania poprawności zakresu po stronie klienta.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Reprezentuję klasę używaną do tworzenia widoków o składni Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RazorView" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="layoutPath">Układ lub strona wzorcowa.</param>
      <param name="runViewStartPages">Wartość wskazująca, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</param>
      <param name="viewStartFileExtensions">Zestaw rozszerzeń, który będzie używany podczas wyszukiwania plików początkowych widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RazorView" />, używając aktywatora strony widoku.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="layoutPath">Układ lub strona wzorcowa.</param>
      <param name="runViewStartPages">Wartość wskazująca, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</param>
      <param name="viewStartFileExtensions">Zestaw rozszerzeń, który będzie używany podczas wyszukiwania plików początkowych widoku.</param>
      <param name="viewPageActivator">Aktywator strony widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Pobiera układ lub stronę wzorcową.</summary>
      <returns>Układ lub strona wzorcowa.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Renderuje określony kontekst widoku, używając określonego składnika zapisywania i wystąpienia obiektu <see cref="T:System.Web.Mvc.WebViewPage" />.</summary>
      <param name="viewContext">Kontekst widoku.</param>
      <param name="writer">Składnik zapisywania używany do renderowania widoku w odpowiedzi.</param>
      <param name="instance">Wystąpienie obiektu <see cref="T:System.Web.Mvc.WebViewPage" />.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Pobiera wartość wskazującą, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</summary>
      <returns>Wartość wskazująca, czy pliki początkowe widoku powinny być wykonywane przed widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Pobiera lub ustawia zestaw rozszerzeń plików, który będzie używany podczas wyszukiwania plików początkowych widoku.</summary>
      <returns>Zestaw rozszerzeń plików, który będzie używany podczas wyszukiwania plików początkowych widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Reprezentuje aparat widoków używany do renderowania strony sieci Web o składni ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RazorViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)"></member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Tworzy widok częściowy, używając określonego kontekstu kontrolera i ścieżki częściowej.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialPath">Ścieżka do widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Tworzy widok, używając określonego kontekstu kontrolera oraz ścieżek widoku i widoku głównego.</summary>
      <returns>Widok.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka do widoku.</param>
      <param name="masterPath">Ścieżka do widoku głównego.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Steruje przetwarzaniem akcji aplikacji przez przekierowywanie pod określony identyfikator URI.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" />.</summary>
      <param name="url">Docelowy adres URL.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectResult" />, używając określonego adresu URL i flagi przekierowania stałego.</summary>
      <param name="url">Adres URL.</param>
      <param name="permanent">Wartość wskazująca, czy przekierowanie ma być stałe.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Pobiera wartość wskazującą, czy przekierowanie ma być stałe.</summary>
      <returns>true, jeśli przekierowanie powinno być stałe; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Pobiera lub ustawia docelowy adres URL.</summary>
      <returns>Docelowy adres URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Reprezentuje wynik, który przeprowadza przekierowanie, używając określonego słownika wartości trasy.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectToRouteResult" />, używając określonej nazwy trasy i wartości trasy.</summary>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectToRouteResult" />, używając określonej nazwy trasy, wartości trasy i flagi przekierowania stałego.</summary>
      <param name="routeName">Nazwa trasy.</param>
      <param name="routeValues">Wartości trasy.</param>
      <param name="permanent">Wartość wskazująca, czy przekierowanie ma być stałe.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RedirectToRouteResult" />, używając określonych wartości trasy.</summary>
      <param name="routeValues">Wartości trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Umożliwia przetworzenie wyniku metody akcji przez typ niestandardowy, który dziedziczy po klasie <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Pobiera wartość wskazującą, czy przekierowanie ma być stałe.</summary>
      <returns>true, jeśli przekierowanie powinno być stałe; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Pobiera lub ustawia nazwę trasy.</summary>
      <returns>Nazwa trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Pobiera lub ustawia wartości trasy.</summary>
      <returns>Wartości trasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Zawiera informacje opisujące metodę akcji odbitej.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />.</summary>
      <param name="methodInfo">Informacje o metodzie akcji.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="methodInfo" /> lub <paramref name="controllerDescriptor" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Pobiera nazwę akcji.</summary>
      <returns>Nazwa akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Pobiera deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wykonuje określony kontekst kontrolera, używając określonych parametrów metody akcji.</summary>
      <returns>Wartość zwracana akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="parameters" /> lub <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, określonych według typu.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Pobiera parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Pobiera selektory akcji.</summary>
      <returns>Selektory akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Wskazuje, czy dla danego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień typu atrybutów niestandardowych.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano typ atrybutów niestandardowych; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Pobiera lub ustawia informacje o metodzie akcji.</summary>
      <returns>Informacje o metodzie akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Pobiera unikatowy identyfikator deskryptora akcji odbitej, używając inicjowania z opóźnieniem.</summary>
      <returns>Unikatowy identyfikator.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Zawiera informacje opisujące odbity kontroler.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />.</summary>
      <param name="controllerType">Typ kontrolera.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerType" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Pobiera typ kontrolera.</summary>
      <returns>Typ kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Znajduje określoną akcję dla określonego kontekstu kontrolera.</summary>
      <returns>Informacje o akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Zwraca listę akcji dla kontrolera.</summary>
      <returns>Lista deskryptorów akcji dla kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, określonych według typu.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla danego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień typu atrybutów niestandardowych.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano typ atrybutów niestandardowych; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Zawiera informacje opisujące odbity parametr metody akcji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />.</summary>
      <param name="parameterInfo">Informacje o parametrze.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="parameterInfo" /> lub <paramref name="actionDescriptor" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Pobiera deskryptor akcji.</summary>
      <returns>Deskryptor akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Pobiera informacje o wiązaniu.</summary>
      <returns>Informacje o wiązaniu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Pobiera wartość domyślną parametru odbitego.</summary>
      <returns>Wartość domyślna parametru odbitego.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, określonych według typu.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
      <exception cref="T:System.TypeLoadException">Nie można załadować typu atrybutów niestandardowych.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Dla tego elementu członkowskiego zdefiniowano więcej niż jeden atrybut typu <paramref name="attributeType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla danego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień typu atrybutów niestandardowych.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano typ atrybutów niestandardowych; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Pobiera lub ustawia informacje o parametrze.</summary>
      <returns>Informacje o parametrze.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Pobiera nazwę parametru.</summary>
      <returns>Nazwa parametru.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Pobiera typ parametru.</summary>
      <returns>Typ parametru.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Zapewnia adapter dla atrybutu <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut wyrażenia regularnego.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł sprawdzania poprawności wyrażenia regularnego po stronie klienta.</summary>
      <returns>Lista reguł sprawdzania poprawności wyrażenia regularnego po stronie klienta.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Zapewnia atrybut używający zdalnego modułu sprawdzania poprawności dodatku plug-in sprawdzania poprawności z biblioteki jQuery. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />, używając określonej nazwy trasy.</summary>
      <param name="routeName">Nazwa trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />, używając określonej nazwy metody akcji i nazwy kontrolera.</summary>
      <param name="action">Nazwa metody akcji.</param>
      <param name="controller">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RemoteAttribute" />, używając określonej nazwy metody akcji, nazwy kontrolera i nazwy obszaru.</summary>
      <param name="action">Nazwa metody akcji.</param>
      <param name="controller">Nazwa kontrolera.</param>
      <param name="areaName">Nazwa obszaru.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>Pobiera lub ustawia pola dodatkowe wymagane przy sprawdzaniu poprawności.</summary>
      <returns>Pola dodatkowe wymagane przy sprawdzaniu poprawności.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>Zwraca rozdzielany przecinkami ciąg nazw pól sprawdzania poprawności.</summary>
      <returns>Rozdzielany przecinkami ciąg nazw pól sprawdzania poprawności.</returns>
      <param name="property">Nazwa właściwości sprawdzania poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Formatuje komunikat o błędzie wyświetlany w przypadku niepomyślnej operacji sprawdzania poprawności.</summary>
      <returns>Sformatowany komunikat o błędzie.</returns>
      <param name="name">Nazwa, która ma być wyświetlana z komunikatem o błędzie.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formatuje właściwość na potrzeby sprawdzania poprawności po stronie klienta, dołączając gwiazdkę (*) i kropkę.</summary>
      <returns>Ciąg „*”. Jest dołączany do właściwości.</returns>
      <param name="property">Właściwość.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Pobiera listę reguł sprawdzania poprawności właściwości po stronie klienta.</summary>
      <returns>Lista reguł sprawdzania poprawności właściwości po stronie klienta zdalnego.</returns>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Pobiera adres URL na potrzeby wywołania zdalnego sprawdzania poprawności.</summary>
      <returns>Adres URL na potrzeby wywołania zdalnego sprawdzania poprawności.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Pobiera lub ustawia metodę HTTP używaną do zdalnego sprawdzania poprawności.</summary>
      <returns>Metoda HTTP używana do zdalnego sprawdzania poprawności. Wartość domyślna to Get.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Ta metoda zawsze zwraca wartość true.</summary>
      <returns>true</returns>
      <param name="value">Cel sprawdzania poprawności.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Pobiera słownik danych trasy.</summary>
      <returns>Słownik danych trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Pobiera lub ustawia nazwę trasy.</summary>
      <returns>Nazwa trasy.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Pobiera kolekcję tras z tabeli tras.</summary>
      <returns>Kolekcja tras z tabeli tras.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Zapewnia adapter dla atrybutu <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Wymagany atrybut.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł sprawdzania poprawności wymaganej wartości po stronie klienta.</summary>
      <returns>Lista reguł sprawdzania poprawności wymaganej wartości po stronie klienta.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Reprezentuje atrybut wymuszający ponowne wysłanie niezabezpieczonego żądania HTTP za pośrednictwem protokołu HTTPS.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Obsługuje niezabezpieczone żądania HTTP wysyłane do metody akcji.</summary>
      <param name="filterContext">Obiekt, który hermetyzuje informacje wymagane do użycia atrybutu <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.InvalidOperationException">Żądanie HTTP zawiera nieprawidłowy zamiennik metody transferu danych. Wszystkie żądania GET są uważane za nieprawidłowe.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Ustala, czy żądanie jest zabezpieczone (HTTPS), a jeśli nie, wywołuje metodę <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Obiekt, który hermetyzuje informacje wymagane do użycia atrybutu <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Zapewnia kontekst dla metody <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="result">Obiekt wyniku.</param>
      <param name="canceled">true, aby anulować wykonywanie; w przeciwnym wypadku false.</param>
      <param name="exception">Obiekt wyjątku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="result" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy to wystąpienie obiektu <see cref="T:System.Web.Mvc.ResultExecutedContext" /> zostało anulowane.</summary>
      <returns>true, jeśli wystąpienie zostało anulowane; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Pobiera lub ustawia obiekt wyjątku.</summary>
      <returns>Obiekt wyjątku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy wyjątek został obsłużony.</summary>
      <returns>true, jeśli wyjątek został obsłużony; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Pobiera lub ustawia wynik akcji.</summary>
      <returns>Wynik akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Zapewnia kontekst dla metody <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> klasy <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ResultExecutingContext" />, używając określonego kontekstu kontrolera i wyniku akcji.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="result">Wynik akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="result" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Pobiera lub ustawia wartość wskazującą, czy tą wartością <see cref="T:System.Web.Mvc.ResultExecutingContext" /> jest „cancel”.</summary>
      <returns>true, jeśli tą wartością jest „cancel”; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Pobiera lub ustawia wynik akcji.</summary>
      <returns>Wynik akcji.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Rozszerza obiekt <see cref="T:System.Web.Routing.RouteCollection" /> na potrzeby routingu MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca obiekt zawierający informacje o trasie i ścieżce wirtualnej, które są wynikiem wygenerowania adresu URL w bieżącym obszarze.</summary>
      <returns>Obiekt zawierający informacje o trasie i ścieżce wirtualnej, które są wynikiem wygenerowania adresu URL w bieżącym obszarze.</returns>
      <param name="routes">Obiekt zawierający trasy dla aplikacji.</param>
      <param name="requestContext">Obiekt hermetyzujący informacje dotyczące żądanej trasy.</param>
      <param name="name">Nazwa trasy, która ma być używana podczas pobierania informacji o ścieżce URL.</param>
      <param name="values">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca obiekt zawierający informacje o trasie i ścieżce wirtualnej, które są wynikiem wygenerowania adresu URL w bieżącym obszarze.</summary>
      <returns>Obiekt zawierający informacje o trasie i ścieżce wirtualnej, które są wynikiem wygenerowania adresu URL w bieżącym obszarze.</returns>
      <param name="routes">Obiekt zawierający trasy dla aplikacji.</param>
      <param name="requestContext">Obiekt hermetyzujący informacje dotyczące żądanej trasy.</param>
      <param name="values">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Ignoruje określoną trasę URL dla danej listy dostępnych tras.</summary>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="url">Wzorzec URL, który trasa ma ignorować.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Ignoruje określoną trasę URL dla danej listy dostępnych tras i listy ograniczeń.</summary>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="url">Wzorzec URL, który trasa ma ignorować.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości parametru <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Mapuje określoną trasę URL.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy oraz ograniczenia.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości parametru <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy, ograniczenia oraz przestrzenie nazw.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="constraints">Zestaw wyrażeń określających wartości parametru <paramref name="url" />.</param>
      <param name="namespaces">Zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Mapuje określoną trasę URL i ustawia domyślne wartości trasy oraz przestrzenie nazw.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="defaults">Obiekt zawierający domyślne wartości trasy.</param>
      <param name="namespaces">Zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Mapuje określoną trasę URL i ustawia przestrzenie nazw.</summary>
      <returns>Odwołanie do zamapowanej trasy.</returns>
      <param name="routes">Kolekcja tras dla aplikacji.</param>
      <param name="name">Nazwa trasy do zamapowania.</param>
      <param name="url">Wzorzec URL dla trasy.</param>
      <param name="namespaces">Zestaw przestrzeni nazw dla aplikacji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="routes" /> lub <paramref name="url" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Reprezentuje dostawcę wartości dla danych trasy zawartych w obiekcie, który implementuj interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteDataValueProvider" />.</summary>
      <param name="controllerContext">Obiekt zawierający informacje dotyczące żądania HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Reprezentuje fabrykę służącą do tworzenia obiektów dostawców wartości danych trasy.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości.</returns>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Reprezentuje listę elementów, która umożliwia użytkownikom wybranie jednego elementu.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" />, używając określonych elementów dla listy.</summary>
      <param name="items">Element.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" />, używając określonych elementów dla listy i wybranej wartości.</summary>
      <param name="items">Element.</param>
      <param name="selectedValue">Wybrana wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" />, używając określonych elementów dla listy, pola wartości danych i pola tekstowego danych.</summary>
      <param name="items">Element.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectList" />, używając określonych elementów dla listy, pola wartości danych, pola tekstowego danych i wybranej wartości.</summary>
      <param name="items">Element.</param>
      <param name="dataValueField">Pole wartości danych.</param>
      <param name="dataTextField">Pole tekstowe danych.</param>
      <param name="selectedValue">Wybrana wartość.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Pobiera wartość listy wybraną przez użytkownika.</summary>
      <returns>Wybrana wartość.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Reprezentuje wybrany element w wystąpieniu klasy <see cref="T:System.Web.Mvc.SelectList" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ten element <see cref="T:System.Web.Mvc.SelectListItem" /> jest wybrany.</summary>
      <returns>true, jeśli element został wybrany; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Pobiera lub ustawia tekst wybranego elementu.</summary>
      <returns>Tekst.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Pobiera lub ustawia wartość wybranego elementu.</summary>
      <returns>Wartość.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>Specifies the session state of the controller.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.SessionStateAttribute" /> class</summary>
      <param name="behavior">The type of the session state.</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>Get the session state behavior for the controller.</summary>
      <returns>The session state behavior for the controller.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Dostarcza dane o stanie sesji bieżącemu obiektowi <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Ładuje dane tymczasowe, używając określonego kontekstu kontrolera.</summary>
      <returns>Dane tymczasowe.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas pobierania kontekstu sesji.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje określone wartości w słowniku danych tymczasowych, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="values">Wartości.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas pobierania kontekstu sesji.</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Zapewnia adapter dla atrybutu <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
      <param name="attribute">Atrybut długości ciągu.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Pobiera listę reguł sprawdzania poprawności długości ciągu po stronie klienta.</summary>
      <returns>Lista reguł sprawdzania poprawności długości ciągu po stronie klienta.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Reprezentuje zestaw danych, które są zachowywane tylko od jednego żądania do następnego.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Dodaje element o danym kluczu i wartości do obiektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element o tym samym kluczu już istnieje w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Usuwa wszystkie elementy z wystąpienia interfejsu <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Ustala, czy wystąpienie interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element o danym kluczu.</summary>
      <returns>true jeśli wystąpienie interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" /> zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz, który ma zostać zlokalizowany w wystąpieniu interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Ustala, czy słownik zawiera określoną wartość.</summary>
      <returns>true, jeśli słownik stanu modelu zawiera określoną wartość; w przeciwnym wypadku false.</returns>
      <param name="value">Wartość.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Pobiera liczbę elementów w obiekcie <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Liczba elementów w obiekcie <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Pobiera moduł wyliczający.</summary>
      <returns>Moduł wyliczający.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia obiekt o danym kluczu.</summary>
      <returns>Obiekt o danym kluczu.</returns>
      <param name="key">Klucz, do którego ma zostać uzyskany dostęp.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Oznacza wszystkie klucze w słowniku jako przeznaczone do przechowania.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Oznacza określony klucz w słowniku jako przeznaczony do przechowania.</summary>
      <param name="key">Klucz do zachowania w słowniku.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Pobiera obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> zawierający klucze elementów w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Klucze elementów w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Ładuje określony kontekst kontrolera, używając określonego dostawcy danych.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="tempDataProvider">Dostawca danych tymczasowych.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Zwraca obiekt zawierający element skojarzony z określonym kluczem, bez oznaczania tego klucza jako przeznaczonego do usunięcia.</summary>
      <returns>Obiekt zawierający element skojarzony z określonym kluczem.</returns>
      <param name="key">Klucz elementu do zwrócenia.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Usuwa element o danym kluczu z obiektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>true, jeśli element został pomyślnie usunięty; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli klucz określony przez parametr <paramref name="key" /> nie zostanie znaleziony w wystąpieniu interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Zapisuje określony kontekst kontrolera, używając określonego dostawcy danych.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="tempDataProvider">Dostawca danych tymczasowych.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Dodaje określoną parę klucz/wartość do słownika.</summary>
      <param name="keyValuePair">Para klucz/wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ustala, czy sekwencja zawiera określony element, używając domyślnego modułu porównującego równości.</summary>
      <returns>true, jeśli słownik stanu modelu zawiera określoną parę klucz/wartość; w przeciwnym wypadku false.</returns>
      <param name="keyValuePair">Para klucz/wartość do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiuje parę klucz/wartość do określonej tablicy, począwszy od określonego indeksu.</summary>
      <param name="array">Tablica docelowa.</param>
      <param name="index">Indeks.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy słownik jest tylko do odczytu.</summary>
      <returns>true, jeśli słownik jest tylko do odczytu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Usuwa określoną parę klucz/wartość ze słownika.</summary>
      <returns>true, jeśli para klucz/wartość została pomyślnie usunięta; w przeciwnym wypadku false.</returns>
      <param name="keyValuePair">Para klucz/wartość.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Obiekt <see cref="T:System.Collections.IEnumerator" />, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Pobiera wartość elementu o danym kluczu.</summary>
      <returns>true, jeśli obiekt, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />, zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Jeśli ta metoda zwraca wartość, jest to wartość skojarzona z określonym kluczem, o ile klucz zostanie znaleziony; w przeciwnym wypadku jest to wartość domyślna typu parametru <paramref name="value" />. Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Pobiera obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> zawierający wartości w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Wartości elementów w obiekcie, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Hermetyzuje informacje o bieżącym kontekście szablonu.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Pobiera lub ustawia sformatowaną wartość modelu.</summary>
      <returns>Sformatowana wartość modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Pobiera pełny identyfikator modelu DOM pola, używając określonego atrybutu HTML name.</summary>
      <returns>Pełny identyfikator modelu DOM.</returns>
      <param name="partialFieldName">Wartość atrybutu HTML name.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Pobiera w pełni kwalifikowaną nazwę (łącznie z prefiksem) pola, używając określonego atrybutu HTML name.</summary>
      <returns>Poprzedzona prefiksem nazwa pola.</returns>
      <param name="partialFieldName">Wartość atrybutu HTML name.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Pobiera lub ustawia prefiks pola HTML.</summary>
      <returns>Prefiks pola HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Zawiera liczbę obiektów odwiedzonych przez użytkownika.</summary>
      <returns>Liczba obiektów.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Ustala, czy szablon został odwiedzony przez użytkownika.</summary>
      <returns>true, jeśli szablon został odwiedzony przez użytkownika; w przeciwnym wypadku false.</returns>
      <param name="metadata">Obiekt hermetyzujący informacje, które opisują model.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Zawiera metody służące do konstruowania adresów URL dla kodu ASP.NET MVC w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.UrlHelper" />, używając określonego kontekstu żądania.</summary>
      <param name="requestContext">Obiekt zawierający informacje o bieżącym żądaniu i trasie, której ono odpowiada.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.UrlHelper" />, używając określonego kontekstu żądania i kolekcji tras.</summary>
      <param name="requestContext">Obiekt zawierający informacje o bieżącym żądaniu i trasie, której ono odpowiada.</param>
      <param name="routeCollection">Kolekcja tras.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="requestContext" /> lub <paramref name="routeCollection" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL metody akcji, używając określonej nazwy akcji.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL metody akcji, używając określonej nazwy akcji i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL metody akcji, używając określonej nazwy akcji i nazwy kontrolera.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL metody akcji, używając określonej nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL metody akcji, używając określonej nazwy akcji, nazwy kontrolera, wartości trasy i protokołu do użycia.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL metody akcji, używając określonej nazwy akcji, nazwy kontrolera i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla metody akcji, używając określonej nazwy akcji, nazwy kontrolera, wartości trasy, protokołu do użycia i nazwy hosta.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL metody akcji, używając określonej nazwy akcji i wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL metody akcji.</returns>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Konwertuje ścieżkę wirtualną (względną) na ścieżkę bezwzględną aplikacji.</summary>
      <returns>Ścieżka bezwzględna aplikacji.</returns>
      <param name="contentPath">Ścieżka wirtualna zawartości.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Koduje znaki specjalne w ciągu URL jako odpowiedniki jednostek znaków.</summary>
      <returns>Zakodowany ciąg URL.</returns>
      <param name="url">Tekst do zakodowania.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Zwraca ciąg zawierający adres URL zawartości.</summary>
      <returns>Ciąg zawierający adres URL zawartości.</returns>
      <param name="contentPath">Ścieżka zawartości.</param>
      <param name="httpContext">Kontekst HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Zwraca ciąg zawierający adres URL.</summary>
      <returns>Ciąg zawierający adres URL.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół HTTP.</param>
      <param name="hostName">Nazwa hosta.</param>
      <param name="fragment">Fragment.</param>
      <param name="routeValues">Wartości trasy.</param>
      <param name="routeCollection">Kolekcja tras.</param>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="includeImplicitMvcValues">true, aby były uwzględniane niejawne wartości MVC; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Zwraca ciąg zawierający adres URL.</summary>
      <returns>Ciąg zawierający adres URL.</returns>
      <param name="routeName">Nazwa trasy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Wartości trasy.</param>
      <param name="routeCollection">Kolekcja tras.</param>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="includeImplicitMvcValues">true, aby były uwzględniane niejawne wartości MVC; w przeciwnym wypadku. false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)"></member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Pobiera informacje o żądaniu HTTP odpowiadającym zdefiniowanej trasie.</summary>
      <returns>Kontekst żądania.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Pobiera kolekcję zawierającą trasy zarejestrowane dla aplikacji.</summary>
      <returns>Kolekcja tras.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonej nazwy trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używanej do wygenerowania adresu URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy, używając nazwy trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używanej do wygenerowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy, używając nazwy trasy i protokołu do użycia.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używanej do wygenerowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy, używając nazwy trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używanej do wygenerowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy, używając nazwy trasy, protokołu do użycia i nazwy hosta.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeName">Nazwa trasy używanej do wygenerowania adresu URL.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Generuje w pełni kwalifikowany adres URL dla określonych wartości trasy.</summary>
      <returns>W pełni kwalifikowany adres URL.</returns>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Reprezentuje parametr opcjonalny używany przez klasę <see cref="T:System.Web.Mvc.MvcHandler" /> podczas routingu.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Zawiera wartość tylko do odczytu parametru opcjonalnego.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>Zwraca pusty ciąg. Ta metoda obsługuje infrastrukturę ASP.NET MVC i nie powinna być używana bezpośrednio z poziomu kodu użytkownika.</summary>
      <returns>Pusty ciąg.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Zapewnia adapter obiektu, którego poprawność można sprawdzić.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />.</summary>
      <param name="metadata">Metadane modelu.</param>
      <param name="context">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Sprawdza poprawność określonego obiektu.</summary>
      <returns>Lista wyników sprawdzania poprawności.</returns>
      <param name="container">Typ kontenera.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Reprezentuje atrybut służący do wykrywania, czy żądanie serwera nie zostało naruszone.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana w przypadku, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Kontekst filtru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Pobiera lub ustawia ciąg salt.</summary>
      <returns>Ciąg salt.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Reprezentuje atrybut służący do oznaczania metod akcji, dla których musi być sprawdzana poprawność danych wejściowych.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValidateInputAttribute" />.</summary>
      <param name="enableValidation">true, aby włączyć sprawdzanie poprawności.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Pobiera lub ustawia wartość wskazującą, czy ma zostać włączone sprawdzanie poprawności.</summary>
      <returns>true, jeśli jest włączone sprawdzanie poprawności; w przeciwnym wypadku false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Metoda wywoływana w przypadku, gdy jest wymagana autoryzacja.</summary>
      <param name="filterContext">Kontekst filtru.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="filterContext" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Reprezentuje kolekcję obiektów dostawców wartości dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderCollection" /> i rejestruje określonych dostawców wartości.</summary>
      <param name="list">Lista dostawców wartości do zarejestrowania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Ustala, czy kolekcja zawiera określony prefiks.</summary>
      <returns>true, jeśli kolekcja zawiera określony prefiks; w przeciwnym wypadku false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Zwraca obiekt wartości, używając określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Zwraca obiekt wartości, używając określonego klucza i parametru pomijania sprawdzania poprawności.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do pobrania.</param>
      <param name="skipValidation">true, aby określić, że sprawdzanie poprawności powinno zostać pominięte; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Wstawia do kolekcji określony obiekt dostawcy wartości w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Miejsce, określone przez indeks zaczynający się od wartości zero, w którym ma zostać wstawiony do kolekcji dostawca wartości.</param>
      <param name="item">Obiekt dostawcy wartości, który ma zostać wstawiony.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Zastępuje dostawcę wartości nowym dostawcą wartości w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Zaczynający się od wartości zero indeks, który wskazuje miejsce elementu do zastąpienia.</param>
      <param name="item">Nowa wartość elementu w miejscu wskazanym przez określony indeks.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Reprezentuje słownik dostawców wartości dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderDictionary" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Dodaje określony element do kolekcji dostawców wartości.</summary>
      <param name="item">Obiekt, który ma zostać dodany do obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Dodaje element o danym kluczu i wartości do kolekcji dostawców wartości.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element o danym kluczu już istnieje w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Dodaje element o danym kluczu i wartości do kolekcji dostawców wartości.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element o danym kluczu już istnieje w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Usuwa wszystkie elementy z kolekcji dostawców wartości.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Ustala, czy kolekcja dostawców wartości zawiera określony element.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został znaleziony w kolekcji dostawców wartości; w przeciwnym wypadku false.</returns>
      <param name="item">Obiekt, który ma zostać zlokalizowany w wystąpieniu obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Ustala, czy kolekcja dostawców wartości zawiera element o danym kluczu.</summary>
      <returns>true, jeśli kolekcja dostawców wartości zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz elementu do znalezienia w wystąpieniu interfejsu <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Pobiera lub ustawia kontekst kontrolera.</summary>
      <returns>Kontekst kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Kopiuje elementy kolekcji do tablicy, począwszy od określonego indeksu.</summary>
      <param name="array">Tablica jednowymiarowa, która jest miejscem docelowym elementów skopiowanych z obiektu <see cref="T:System.Collections.Generic.ICollection`1" />. Indeksowanie tablicy musi zaczynać się od wartości zero.</param>
      <param name="arrayIndex">Zaczynający się od wartości zero indeks w parametrze <paramref name="array" /> określającym, odkąd zaczyna się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> jest mniejszy od 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.-lub-Parametr <paramref name="arrayIndex" /> jest równy długości parametru <paramref name="array" /> lub większy.-lub-Liczba elementów w kolekcji źródłowej jest większa niż miejsce dostępne od wartości <paramref name="arrayIndex" /> do końca docelowej wartości <paramref name="array" />.-lub-Typ <paramref name="T" /> nie może być rzutowany automatycznie na typ tablicy docelowej.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Pobiera liczbę elementów w kolekcji.</summary>
      <returns>Liczba elementów w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
      <returns>true, jeśli kolekcja jest tylko do odczytu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.ValueProviderResult" /> o danym kluczu.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.ValueProviderResult" />.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze wystąpienia obiektu <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Kolekcja zawierająca klucze obiektu, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Usuwa pierwsze wystąpienie określonego elementu z kolekcji dostawców wartości.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został pomyślnie usunięty z kolekcji; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli element określony przez parametr <paramref name="item" /> nie zostanie znaleziony w kolekcji.</returns>
      <param name="item">Obiekt, który ma zostać usunięty z wystąpienia obiektu <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Usuwa element o danym kluczu z kolekcji dostawców wartości.</summary>
      <returns>true, jeśli element został pomyślnie usunięty; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli klucz określony przez parametr <paramref name="key" /> nie zostanie znaleziony w kolekcji.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Ustala, czy kolekcja zawiera określony prefiks.</summary>
      <returns>true, jeśli kolekcja zawiera określony prefiks; w przeciwnym wypadku false.</returns>
      <param name="prefix">Prefiks do wyszukania.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Zwraca obiekt wartości, używając określonego klucza.</summary>
      <returns>Obiekt wartości dla określonego klucza.</returns>
      <param name="key">Klucz obiektu wartości do zwrócenia.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Pobiera wartość elementu o danym kluczu.</summary>
      <returns>true, jeśli obiekt, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />, zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz elementu do pobrania.</param>
      <param name="value">Jeśli ta metoda zwraca wartość, jest to wartość skojarzona z określonym kluczem, o ile klucz zostanie znaleziony; w przeciwnym wypadku jest to wartość domyślna typu parametru <paramref name="value" />. Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Kolekcja wartości w obiekcie, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Reprezentuje kontener dla obiektów fabryk dostawców wartości.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Pobiera kolekcję fabryk dostawców wartości dla aplikacji.</summary>
      <returns>Kolekcja obiektów fabryk dostawców wartości.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Reprezentuje fabrykę służącą do tworzenia obiektów dostawców wartości.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt dostawcy wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt dostawcy wartości.</returns>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Reprezentuje kolekcję fabryk dostawców wartości dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />, używając określonej listy fabryk dostawców wartości.</summary>
      <param name="list">Lista fabryk dostawców wartości, za pomocą której ma być zainicjowana kolekcja.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca fabrykę dostawców wartości dla określonego kontekstu kontrolera.</summary>
      <returns>Obiekt fabryki dostawców wartości dla określonego kontekstu kontrolera.</returns>
      <param name="controllerContext">Obiekt hermetyzujący informacje dotyczące bieżącego żądania HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Wstawia określony obiekt fabryki dostawców wartości w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Miejsce, określone przez indeks zaczynający się od wartości zero, w którym ma zostać wstawiony do kolekcji dostawca wartości.</param>
      <param name="item">Obiekt fabryki dostawców wartości, który ma zostać wstawiony.</param>
      <exception cref="ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Ustawia określony obiekt fabryki dostawców wartości w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Miejsce, określone przez indeks zaczynający się od wartości zero, w którym ma zostać wstawiony do kolekcji dostawca wartości.</param>
      <param name="item">Obiekt fabryki dostawców wartości, który ma zostać ustawiony.</param>
      <exception cref="ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Reprezentuje wynik powiązania wartości (pochodzącej na przykład z ogłoszenia formularza lub ciągu zapytania) z właściwością argumentu metody akcji lub samym argumentem.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ValueProviderResult" />, używając określonej wartości nieprzetworzonej, wartości próbowanej i informacji o kulturze.</summary>
      <param name="rawValue">Wartość nieprzetworzona.</param>
      <param name="attemptedValue">Wartość próbowana.</param>
      <param name="culture">Kultura.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Pobiera lub ustawia wartość nieprzetworzoną, która jest konwertowana na ciąg do wyświetlenia.</summary>
      <returns>Wartość nieprzetworzona.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Konwertuje na określony typ wartość zhermetyzowaną przez ten wynik.</summary>
      <returns>Wartość przekonwertowana.</returns>
      <param name="type">Typ miejsca docelowego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="type" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Konwertuje na określony typ wartość zhermetyzowaną przez ten wynik, używając określonych informacji o kulturze.</summary>
      <returns>Wartość przekonwertowana.</returns>
      <param name="type">Typ miejsca docelowego.</param>
      <param name="culture">Kultura do użycia w konwersji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="type" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Pobiera lub ustawia kulturę.</summary>
      <returns>Kultura.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Pobiera lub ustawia wartość nieprzetworzoną, która jest dostarczana przez dostawcę wartości.</summary>
      <returns>Wartość nieprzetworzona.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Hermetyzuje informacje związane z renderowaniem widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewContext" />, używając określonego kontekstu kontrolera, widoku, słownika danych widoku, słownika danych tymczasowych i składnika zapisywania tekstu.</summary>
      <param name="controllerContext">Hermetyzuje informacje dotyczące żądania HTTP.</param>
      <param name="view">Widok z zrenderowania.</param>
      <param name="viewData">Słownik zawierający dane wymagane do zrenderowania widoku.</param>
      <param name="tempData">Słownik zawierający dane tymczasowe dla widoku.</param>
      <param name="writer">Obiekt składnika zapisywania tekstu używany do zapisywania danych wyjściowych HTML.</param>
      <exception cref="T:System.ArgumentNullException">Jeden z parametrów ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Pobiera lub ustawia wartość wskazującą, czy jest włączone sprawdzanie poprawności po stronie klienta.</summary>
      <returns>true, jeśli jest włączone sprawdzanie poprawności po stronie klienta; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Pobiera lub ustawia obiekt hermetyzujący informacje wymagane do sprawdzenia poprawności i przetworzenia danych wejściowych z formularza HTML.</summary>
      <returns>Obiekt hermetyzujący informacje wymagane do sprawdzenia poprawności i przetworzenia danych wejściowych z formularza HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Zapisuje informacje sprawdzania poprawności po stronie klienta w odpowiedzi HTTP.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Pobiera dane, które są skojarzone z tym żądaniem i są dostępne tylko dla jednego żądania.</summary>
      <returns>Dane tymczasowe.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled"></member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Pobiera obiekt, który implementuje interfejs <see cref="T:System.Web.Mvc.IView" /> do zrenderowania w przeglądarce.</summary>
      <returns>Widok.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Pobiera dane widoku, które są przekazywane do widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Pobiera lub ustawia obiekt składnika zapisywania tekstu używany do zapisywania danych wyjściowych HTML.</summary>
      <returns>Obiekt używany do zapisywania danych wyjściowych HTML.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Reprezentuje kontener używany do przekazywania danych między kontrolerem a widokiem.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary" />, używając określonego modelu.</summary>
      <param name="model">Model.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary" />, używając określonego słownika.</summary>
      <param name="dictionary">Słownik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="dictionary" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Dodaje określony element do kolekcji.</summary>
      <param name="item">Obiekt, który ma zostać dodany do kolekcji.</param>
      <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Dodaje element do kolekcji, używając określonego klucza i wartości.</summary>
      <param name="key">Klucz elementu do dodania.</param>
      <param name="value">Wartość elementu do dodania.</param>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.IDictionary`2" /> jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Element o tym samym kluczu już istnieje w obiekcie <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Usuwa wszystkie właściwości z kolekcji.</summary>
      <exception cref="T:System.NotSupportedException">Obiekt <see cref="T:System.Collections.Generic.ICollection`1" /> jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ustala, czy kolekcja zawiera określony element.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został znaleziony w kolekcji; w przeciwnym wypadku false.</returns>
      <param name="item">Obiekt, który ma zostać zlokalizowany w kolekcji.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Ustala, czy kolekcja zawiera element o danym kluczu.</summary>
      <returns>true, jeśli kolekcja zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz elementu do zlokalizowania w kolekcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiuje elementy kolekcji do tablicy, począwszy od określonego indeksu.</summary>
      <param name="array">Tablica jednowymiarowa, która jest miejscem docelowym elementów skopiowanych z kolekcji. Indeksowanie tablicy musi zaczynać się od wartości zero.</param>
      <param name="arrayIndex">Zaczynający się od wartości zero indeks w parametrze <paramref name="array" /> określającym, odkąd zaczyna się kopiowanie.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="array" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="arrayIndex" /> jest mniejszy od 0.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="array" /> jest wielowymiarowy.-lub- Parametr <paramref name="arrayIndex" /> jest równy długości parametru <paramref name="array" /> lub większy.-lub- Liczba elementów w kolekcji źródłowej jest większa niż miejsce dostępne od wartości <paramref name="arrayIndex" /> do końca docelowej wartości <paramref name="array" />.-lub- Typ <paramref name="T" /> nie może być rzutowany automatycznie na typ docelowego parametru <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Pobiera liczbę elementów w kolekcji.</summary>
      <returns>Liczba elementów w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Oblicza określone wyrażenie.</summary>
      <returns>Wynik obliczenia.</returns>
      <param name="expression">Wyrażenie.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Oblicza określone wyrażenie, używając określonego formatu.</summary>
      <returns>Wynik obliczenia.</returns>
      <param name="expression">Wyrażenie.</param>
      <param name="format">Format.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Zwraca informacje o danych widoku zdefiniowane przez parametr <paramref name="expression" />.</summary>
      <returns>Obiekt zawierający informacje o danych widoku zdefiniowane przez parametr <paramref name="expression" />.</returns>
      <param name="expression">Zestaw par klucz/wartość definiujący informacje o danych widoku do zwrócenia.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</summary>
      <returns>true, jeśli kolekcja jest tylko do odczytu; w przeciwnym wypadku false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Pobiera lub ustawia element skojarzony z określonym kluczem.</summary>
      <returns>Wartość wybranego elementu.</returns>
      <param name="key">Klucz.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Pobiera kolekcję zawierającą klucze tego słownika.</summary>
      <returns>Kolekcja zawierająca klucze obiektu, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Pobiera lub ustawia model skojarzony z danymi widoku.</summary>
      <returns>Model skojarzony z danymi widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Pobiera lub ustawia informacje o modelu.</summary>
      <returns>Informacje o modelu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Pobiera stan modelu.</summary>
      <returns>Stan modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Usuwa pierwsze wystąpienie określonego obiektu z kolekcji.</summary>
      <returns>true, jeśli element określony przez parametr <paramref name="item" /> został pomyślnie usunięty z kolekcji; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli element określony przez parametr <paramref name="item" /> nie zostanie znaleziony w kolekcji.</returns>
      <param name="item">Obiekt, który ma zostać usunięty z kolekcji.</param>
      <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Usuwa element z kolekcji, używając określonego klucza.</summary>
      <returns>true, jeśli element został pomyślnie usunięty; w przeciwnym wypadku false. Ta metoda zwraca również wartość false, jeśli klucz określony przez parametr <paramref name="key" /> nie zostanie znaleziony w pierwotnej kolekcji.</returns>
      <param name="key">Klucz elementu do usunięcia.</param>
      <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Ustawia model danych do użycia dla widoku.</summary>
      <param name="value">Model danych do użycia dla widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Zwraca moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</summary>
      <returns>Moduł wyliczający, którego można użyć do wykonania iteracji w kolekcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Pobiera lub ustawia obiekt hermetyzujący informacje o bieżącym kontekście szablonu.</summary>
      <returns>Obiekt zawierający informacje o bieżącym szablonie.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Próbuje pobrać wartość skojarzoną z określonym kluczem.</summary>
      <returns>true, jeśli kolekcja zawiera element o danym kluczu; w przeciwnym wypadku false.</returns>
      <param name="key">Klucz wartości do pobrania.</param>
      <param name="value">Jeśli ta metoda zwraca wartość, jest to wartość skojarzona z określonym kluczem, o ile klucz zostanie znaleziony; w przeciwnym wypadku jest to wartość domyślna typu parametru <paramref name="value" />. Ten parametr jest przekazywany jako niezainicjowany.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Pobiera kolekcję zawierającą wartości w tym słowniku.</summary>
      <returns>Kolekcja zawierająca wartości obiektu, który implementuje interfejs <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Reprezentuje kontener używany do przekazywania silnie typizowanych danych między kontrolerem a widokiem.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, używając określonego słownika danych widoku.</summary>
      <param name="viewDataDictionary">Istniejący słownik danych widoku, który ma być skopiowany do tego wystąpienia.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />, używając określonego modelu.</summary>
      <param name="model">Model danych do użycia dla widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Pobiera lub ustawia model.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Pobiera lub ustawia informacje o modelu.</summary>
      <returns>Informacje o modelu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Ustawia model danych do użycia dla widoku.</summary>
      <param name="value">Model danych do użycia dla widoku.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas ustawiania modelu.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Hermetyzuje informacje o bieżącej zawartości szablonu używanej do opracowywania szablonów i o pomocnikach HTML, które wchodzą w interakcje z szablonami.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewDataInfo" /> i kojarzy delegata na potrzeby uzyskiwania dostępu do informacji o danych widoku.</summary>
      <param name="valueAccessor">Delegat definiujący sposób uzyskania dostępu do informacji o danych widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Pobiera lub ustawia obiekt zawierający wartości, które mają być wyświetlane przez szablon.</summary>
      <returns>Obiekt zawierający wartości, które mają być wyświetlane przez szablon.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Pobiera lub ustawia opis właściwości, która ma być wyświetlana przez szablon.</summary>
      <returns>Opis właściwości, która ma być wyświetlana przez szablon.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Pobiera lub ustawia bieżącą wartość, która ma być wyświetlana przez szablon.</summary>
      <returns>Bieżąca wartość, która ma być wyświetlana przez szablon.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Reprezentuje kolekcję aparatów widoków dostępnych dla aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineCollection" />, używając określonej listy aparatów widoków.</summary>
      <param name="list">Lista, której otoką jest nowa kolekcja.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="list" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Znajduje określony widok częściowy, używając określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Znajduje określony widok, używając określonego kontekstu kontrolera i widoku głównego.</summary>
      <returns>Widok.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewName">Nazwa widoku.</param>
      <param name="masterName">Nazwa widoku głównego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="viewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Wstawia element do kolekcji w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Zaczynający się od wartości zero indeks, który wskazuje miejsce wstawienia elementu określonego przez parametr <paramref name="item" />.</param>
      <param name="item">Obiekt do wstawienia. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="index" /> jest mniejszy od zera.-lub-Parametr <paramref name="index" /> jest większy niż liczba elementów w kolekcji.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Zastępuje element w miejscu wskazanym przez określony indeks.</summary>
      <param name="index">Zaczynający się od wartości zero indeks, który wskazuje miejsce elementu do zastąpienia.</param>
      <param name="item">Nowa wartość elementu w miejscu wskazanym przez określony indeks. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Parametr <paramref name="index" /> jest mniejszy od zera.-lub-Parametr <paramref name="index" /> jest większy niż liczba elementów w kolekcji.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="item" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Reprezentuje wynik lokalizowania aparatu widoków.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineResult" />, używając określonych lokalizacji przeszukiwanych.</summary>
      <param name="searchedLocations">Przeszukiwane lokalizacje.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="searchedLocations" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewEngineResult" />, używając określonego widoku i aparatu widoków.</summary>
      <param name="view">Widok.</param>
      <param name="viewEngine">Aparat widoków.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="view " /> lub <paramref name="viewEngine" /> ma wartość null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Pobiera lub ustawia przeszukiwane lokalizacje.</summary>
      <returns>Przeszukiwane lokalizacje.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Pobiera lub ustawia widok.</summary>
      <returns>Widok.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Pobiera lub ustawia aparat widoków.</summary>
      <returns>Aparat widoków.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Reprezentuje kolekcję aparatów widoków dostępnych dla aplikacji.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Pobiera aparaty widoków.</summary>
      <returns>Aparaty widoków.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Reprezentuje informacje potrzebne do skonstruowania strony widoku głównego.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewMasterPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Pobiera skrypt AJAX dla strony wzorcowej.</summary>
      <returns>Skrypt AJAX dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Pobiera kod HTML dla strony wzorcowej.</summary>
      <returns>Kod HTML dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Pobiera model.</summary>
      <returns>Model.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Pobiera dane tymczasowe.</summary>
      <returns>Dane tymczasowe.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Pobiera adres URL.</summary>
      <returns>Adres URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag"></member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Pobiera kontekst widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Pobiera dane widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Pobiera składnik zapisywania używany do renderowania strony wzorcowej.</summary>
      <returns>Składnik zapisywania używany do renderowania strony wzorcowej.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Reprezentuje informacje wymagane do skonstruowania silnie typizowanej strony widoku głównego.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewMasterPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Pobiera skrypt AJAX dla strony wzorcowej.</summary>
      <returns>Skrypt AJAX dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Pobiera kod HTML dla strony wzorcowej.</summary>
      <returns>Kod HTML dla strony wzorcowej.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Pobiera model.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Pobiera dane widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Reprezentuje właściwości i metody potrzebne do zrenderowania widoku jako strony formularzy sieci Web.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania kodu HTML w scenariuszach, w których jest wykorzystywana technologia Ajax.</summary>
      <returns>Obiekt pomocnika Ajax skojarzony z widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</summary>
      <returns>Obiekt pomocnika HTML skojarzony z widokiem.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Inicjuje właściwości <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> i <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Pobiera lub ustawia ścieżkę widoku głównego.</summary>
      <returns>Ścieżka widoku głównego.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Pobiera właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Wywołuje zdarzenie <see cref="E:System.Web.UI.Page.PreInit" /> na początku procesu inicjowania strony.</summary>
      <param name="e">Dane zdarzenia.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Umożliwia przetworzenie określonego żądania HTTP przez platformę ASP.NET MVC.</summary>
      <param name="context">Obiekt hermetyzujący informacje właściwe dla protokołu HTTP dotyczące bieżącego żądania HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Inicjuje obiekt <see cref="T:System.Web.UI.HtmlTextWriter" /> otrzymujący zawartość strony do zrenderowania.</summary>
      <param name="writer">Obiekt otrzymujący zawartość strony.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Renderuje stronę widoku jako odpowiedź, używając określonego kontekstu widoku.</summary>
      <param name="viewContext">Obiekt hermetyzujący informacje wymagane do zrenderowania widoku, które obejmują kontekst kontrolera, kontekst formularza, dane tymczasowe oraz dane widoku dla skojarzonego widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Ustawia składnik zapisywania tekstu używany do renderowania widoku w odpowiedzi.</summary>
      <param name="textWriter">Składnik zapisywania używany do renderowania widoku w odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia słownik danych widoku dla skojarzonego widoku.</summary>
      <param name="viewData">Słownik danych, które mają być przekazane do widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Pobiera dane tymczasowe, które mają być przekazane do widoku.</summary>
      <returns>Dane tymczasowe, które mają być przekazane do widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Pobiera lub ustawia adres URL renderowanej strony.</summary>
      <returns>Adres URL renderowanej strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag"></member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Pobiera lub ustawia informacje używane do renderowania widoku.</summary>
      <returns>Informacje używane do zrenderowania widoku, które obejmują kontekst formularza, dane tymczasowe oraz dane widoku dla skojarzonego widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Pobiera składnik zapisywania tekstu używany do renderowania widoku w odpowiedzi.</summary>
      <returns>Składnik zapisywania tekstu używany do renderowania widoku w odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Reprezentuje informacje wymagane do renderowania silnie typizowanego widoku jako strony formularzy sieci Web.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper`1" /> obsługujący renderowanie kodu HTML w scenariuszach, w których jest wykorzystywana technologia Ajax.</summary>
      <returns>Obiekt pomocnika Ajax skojarzony z widokiem.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" />, który zapewnia obsługę renderowania elementów.</summary>
      <returns>Obiekt pomocnika HTML skojarzony z widokiem.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Tworzy wystąpienia właściwości <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> oraz <see cref="P:System.Web.Mvc.ViewPage`1.Html" /> i je inicjuje.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Pobiera właściwość <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia słownik danych widoku dla skojarzonego widoku.</summary>
      <param name="viewData">Słownik danych, które mają być przekazane do widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Reprezentuje klasę używaną do renderowania widoku, używając wystąpienia obiektu <see cref="T:System.Web.Mvc.IView" /> zwróconego przez obiekt <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Wyszukuje zarejestrowane aparaty widoków i zwraca obiekt, który jest używany do renderowania widoku.</summary>
      <returns>Obiekt używany do renderowania widoku.</returns>
      <param name="context">Kontekst kontrolera.</param>
      <exception cref="T:System.InvalidOperationException">Wystąpił błąd podczas wyszukiwania widoku przez metodę.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Pobiera nazwę widoku głównego (takiego jak strona wzorcowa lub szablon) do użycia podczas renderowania widoku.</summary>
      <returns>Nazwa widoku głównego.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Reprezentuje klasę podstawową używaną w celu dostarczenia modelu do widoku, a następnie zrenderowania widoku w odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewResultBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>W przypadku wywołania przez źródło wywołania akcji renderuje widok w odpowiedzi.</summary>
      <param name="context">Kontekst, w jakim jest wykonywany wynik.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="context" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca obiekt <see cref="T:System.Web.Mvc.ViewEngineResult" /> używany do renderowania widoku.</summary>
      <returns>Aparat widoków.</returns>
      <param name="context">Kontekst.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model"></member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.TempDataDictionary" /> dla tego wyniku.</summary>
      <returns>Dane tymczasowe.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.IView" /> renderowany w odpowiedzi.</summary>
      <returns>Widok.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag"></member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.ViewDataDictionary" /> danych widoku dla tego wyniku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Pobiera lub ustawia kolekcję aparatów widoków skojarzonych z tym wynikiem.</summary>
      <returns>Kolekcja aparatów widoków.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Pobiera lub ustawia nazwę widoku do zrenderowania.</summary>
      <returns>Nazwa widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Zapewnia klasę abstrakcyjną, której można użyć do zaimplementowania strony początkowej (wzorcowej) widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>W przypadku zaimplementowania w klasie pochodnej inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewStartPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>W przypadku zaimplementowania w klasie pochodnej pobiera adiustację HTML dla strony początkowej widoku.</summary>
      <returns>Adiustacja HTML dla strony początkowej widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>W przypadku zaimplementowania w klasie pochodnej pobiera adres URL strony początkowej widoku.</summary>
      <returns>Adres URL strony początkowej widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>W przypadku zaimplementowania w klasie pochodnej pobiera kontekst widoku dla strony początkowej widoku.</summary>
      <returns>Kontekst widoku dla strony początkowej widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Zapewnia kontener dla obiektów <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Zapewnia kontener dla obiektów <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Pobiera wartość sformatowaną.</summary>
      <returns>Wartość sformatowana.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Reprezentuje typ widoku.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewType" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Pobiera lub ustawia nazwę typu.</summary>
      <returns>Nazwa typu.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Reprezentuje informacje potrzebne do skonstruowania formantu użytkownika.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewUserControl" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Pobiera skrypt AJAX dla widoku.</summary>
      <returns>Skrypt AJAX dla widoku.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Zapewnia, że dane widoku są dodawane do obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" /> formantu użytkownika, o ile istnieją.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Pobiera kod HTML dla widoku.</summary>
      <returns>Kod HTML dla widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Pobiera model.</summary>
      <returns>Model.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Renderuje widok, używając określonego kontekstu widoku.</summary>
      <param name="viewContext">Kontekst widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Ustawia składnik zapisywania tekstu używany do renderowania widoku w odpowiedzi.</summary>
      <param name="textWriter">Składnik zapisywania używany do renderowania widoku w odpowiedzi.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia słownik danych widoku, używając określonych danych widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Pobiera słownik danych tymczasowych.</summary>
      <returns>Słownik danych tymczasowych.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Pobiera adres URL widoku.</summary>
      <returns>Adres URL widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag"></member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Pobiera lub ustawia kontekst widoku.</summary>
      <returns>Kontekst widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Pobiera lub ustawia słownik danych widoku.</summary>
      <returns>Słownik danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Pobiera lub ustawia klucz danych widoku.</summary>
      <returns>Klucz danych widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Pobiera składnik zapisywania używany do renderowania widoku w odpowiedzi.</summary>
      <returns>Składnik zapisywania używany do renderowania widoku w odpowiedzi.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Reprezentuje informacje wymagane do skonstruowania silnie typizowanego formantu użytkownika.</summary>
      <typeparam name="TModel">Typ modelu.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.ViewUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Pobiera skrypt AJAX dla widoku.</summary>
      <returns>Skrypt AJAX dla widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Pobiera kod HTML dla widoku.</summary>
      <returns>Kod HTML dla widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Pobiera model.</summary>
      <returns>Odwołanie do modelu danych.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia dane widoku dla widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Pobiera lub ustawia dane widoku.</summary>
      <returns>Dane widoku.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Reprezentuje implementację abstrakcyjnej klasy podstawowej interfejsu <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji głównych z obsługą obszarów.</summary>
      <returns>Formaty lokalizacji głównych z obsługą obszarów.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoków częściowych z obsługą obszarów.</summary>
      <returns>Formaty lokalizacji widoków częściowych z obsługą obszarów.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoków z obsługą obszarów.</summary>
      <returns>Formaty lokalizacji widoków z obsługą obszarów.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Tworzy określony widok częściowy, używając określonego kontekstu kontrolera.</summary>
      <returns>Odwołanie do widoku częściowego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialPath">Ścieżka częściowa nowego widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Tworzy określony widok, używając kontekstu kontrolera, ścieżki widoku i ścieżki widoku głównego.</summary>
      <returns>Odwołanie do widoku.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka widoku głównego.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Zwraca wartość wskazującą, czy plik znajduje się w lokalizacji wskazywanej przez określoną ścieżkę, używając określonego kontekstu kontrolera.</summary>
      <returns>true, jeśli plik znajduje się w lokalizacji wskazywanej przez określoną ścieżkę; w przeciwnym wypadku false.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="virtualPath">Ścieżka wirtualna.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Pobiera lub ustawia rozszerzenia nazw plików używane do lokalizowania widoku.</summary>
      <returns>Rozszerzenia nazw plików używane do lokalizowania widoku.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Znajduje określony widok częściowy, używając określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="useCache">true, aby użyć zbuforowanego widoku częściowego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null (Nothing w języku Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="partialViewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Znajduje określony widok, używając określonego kontekstu kontrolera i nazwy widoku głównego.</summary>
      <returns>Widok strony.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewName">Nazwa widoku.</param>
      <param name="masterName">Nazwa widoku głównego.</param>
      <param name="useCache">true, aby użyć widoku zbuforowanego.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="controllerContext" /> ma wartość null (Nothing w języku Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="viewName" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji głównych.</summary>
      <returns>Formaty lokalizacji głównych.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoków częściowych.</summary>
      <returns>Formaty lokalizacji widoków częściowych.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Zwalnia określony widok, używając określonego kontekstu kontrolera.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="view">Widok do zwolnienia.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Pobiera lub ustawia pamięć podręczną lokalizacji widoków.</summary>
      <returns>Pamięć podręczna lokalizacji widoków.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Pobiera lub ustawia formaty lokalizacji widoków.</summary>
      <returns>Formaty lokalizacji widoków.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Pobiera lub ustawia dostawcę ścieżek wirtualnych.</summary>
      <returns>Dostawca ścieżek wirtualnych.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Reprezentuje informacje potrzebne do skonstruowania strony formularzy sieci Web za pomocą platformy ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormView" />, używając kontekstu kontrolera i ścieżki widoku.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormView" />, używając kontekstu kontrolera, ścieżki widoku i ścieżki do strony wzorcowej.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka do strony wzorcowej.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormView" />, używając kontekstu kontrolera, ścieżki widoku, ścieżki do strony wzorcowej i wystąpienia interfejsu <see cref="T:System.Web.Mvc.IViewPageActivator" />.</summary>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka do strony wzorcowej.</param>
      <param name="viewPageActivator">Wystąpienie interfejsu aktywatora strony widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Pobiera lub ustawia ścieżkę wzorca.</summary>
      <returns>Ścieżka wzorca.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Renderuje widok w odpowiedzi.</summary>
      <param name="viewContext">Obiekt hermetyzujący informacje wymagane do zrenderowania widoku, które obejmują kontekst kontrolera, kontekst formularza, dane tymczasowe oraz dane widoku dla skojarzonego widoku.</param>
      <param name="writer">Obiekt składnika zapisywania tekstu używany do zapisywania danych wyjściowych HTML.</param>
      <param name="instance">Wystąpienie strony widoku.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Reprezentuje aparat widoków używany do renderowania strony formularzy sieci Web w odpowiedzi.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebFormViewEngine" />, używając określonego aktywatora strony widoku.</summary>
      <param name="viewPageActivator">Wystąpienie klasy, która implementuje interfejs <see cref="T:System.Web.Mvc.IViewPageActivator" />.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Tworzy określony widok częściowy, używając określonego kontekstu kontrolera.</summary>
      <returns>Widok częściowy.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="partialPath">Ścieżka częściowa.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Tworzy określony widok, używając określonego kontekstu kontrolera oraz ścieżek widoku i widoku głównego.</summary>
      <returns>Widok.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="viewPath">Ścieżka widoku.</param>
      <param name="masterPath">Ścieżka widoku głównego.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Reprezentuje właściwości i metody potrzebne do zrenderowania widoku, dla którego jest używana składnia ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebViewPage" />. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania kodu HTML przy użyciu technologii Ajax. </summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania kodu HTML przy użyciu technologii Ajax.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Ustawia kontekst widoku i dane widoku dla strony.</summary>
      <param name="parentPage">Strona nadrzędna.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Pobiera obiekt <see cref="T:System.Web.HttpContext" /> skojarzony ze stroną.</summary>
      <returns>Obiekt <see cref="T:System.Web.HttpContext" /> skojarzony ze stroną.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Uruchamia hierarchię stron dla potoku wykonywania kodu ASP.NET Razor.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Inicjuje klasy <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> i <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Pobiera właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia dane widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Pobiera dane tymczasowe, które mają być przekazane do widoku.</summary>
      <returns>Dane tymczasowe, które mają być przekazane do widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Pobiera lub ustawia adres URL renderowanej strony.</summary>
      <returns>Adres URL renderowanej strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag"></member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Pobiera lub ustawia informacje używane do renderowania widoku.</summary>
      <returns>Informacje używane do zrenderowania widoku, które obejmują kontekst formularza, dane tymczasowe oraz dane widoku dla skojarzonego widoku.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Reprezentuje właściwości i metody potrzebne do zrenderowania widoku, dla którego jest używana składnia ASP.NET Razor.</summary>
      <typeparam name="TModel">Typ modelu danych widoku.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.WebViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania adiustacji HTML przy użyciu technologii Ajax.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.AjaxHelper" /> używany do renderowania adiustacji HTML przy użyciu technologii Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Pobiera lub ustawia obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</summary>
      <returns>Obiekt <see cref="T:System.Web.Mvc.HtmlHelper" /> używany do renderowania elementów HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Inicjuje klasy <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> i <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Pobiera właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <returns>Właściwość Model skojarzonego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Ustawia dane widoku.</summary>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Pobiera lub ustawia słownik zawierający dane do przekazania między kontrolerem a widokiem.</summary>
      <returns>Słownik zawierający dane do przekazania między kontrolerem a widokiem.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Reprezentuje obsługę technologii ASP.NET AJAX w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa kotwicy).</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa kotwicy).</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy zawierający adres URL określonej metody akcji; kliknięcie łącza akcji powoduje, że metoda akcji jest wywoływana asynchronicznie za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. </summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="actionName">Nazwa metoda akcji, która obsłuży żądanie.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi, używając określonych informacji o routingu.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi, używając określonych informacji o routingu.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi, używając określonych informacji o routingu.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi, używając określonych informacji o routingu.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi, używając określonych informacji o routingu.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Zwraca element HTML script zawierający odwołanie do skryptu globalizacji, który definiuje informacje o kulturze.</summary>
      <returns>Element script, w którym dla atrybutu src ustawiono skrypt globalizacji, jak w następującym przykładzie: &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Obiekt pomocnika AJAX rozszerzany przez tę metodę.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Zwraca element HTML script zawierający odwołanie do skryptu globalizacji, który definiuje określone informacje o kulturze.</summary>
      <returns>Parametr element skryptu HTML, w którym dla atrybutu src ustawiono skrypt globalizacji, jak w następującym przykładzie:&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Obiekt pomocnika AJAX rozszerzany przez tę metodę.</param>
      <param name="cultureInfo">Hermetyzuje informacje o kulturze docelowej, takie jak formaty daty.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="cultureInfo" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa kotwicy).</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy zawierający ścieżkę wirtualną do określonych wartości trasy; kliknięcie łącza powoduje asynchroniczne skierowanie żądania do tej ścieżki wirtualnej za pomocą kodu JavaScript.</summary>
      <returns>Element kotwicy.</returns>
      <param name="ajaxHelper">Pomocnik AJAX.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="ajaxOptions">Obiekt oferujący opcje dla żądania asynchronicznego.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Reprezentuje ustawienia opcji uruchamiania skryptów Ajax w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Pobiera lub ustawia komunikat do wyświetlenia w oknie potwierdzenia przed przesłaniem żądania.</summary>
      <returns>Komunikat do wyświetlenia w oknie potwierdzenia.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Pobiera lub ustawia metodę żądania HTTP (Get lub Post).</summary>
      <returns>Metoda żądania HTTP. Wartość domyślna to Post.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Pobiera lub ustawia tryb określający sposób wstawienia odpowiedzi do elementu docelowego DOM.</summary>
      <returns>Tryb wstawiania (InsertAfter, InsertBefore lub Replace). Wartość domyślna to Replace.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Pobiera lub ustawia wartość (w milisekundach) określającą czas trwania animacji w przypadku pokazywania lub ukrywania elementu ładowania.</summary>
      <returns>Wartość (w milisekundach) określająca czas trwania animacji w przypadku pokazywania lub ukrywania elementu ładowania.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Pobiera lub ustawia atrybut HTML id elementu HTML wyświetlanego podczas ładowania funkcji Ajax.</summary>
      <returns>Identyfikator elementu wyświetlanego podczas ładowania funkcji Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Pobiera lub ustawia nazwę funkcji JavaScript do wywołania bezpośrednio przed zaktualizowaniem strony.</summary>
      <returns>Nazwa funkcji JavaScript do wywołania przed zaktualizowaniem strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Pobiera lub ustawia funkcję JavaScript do wywołania po utworzeniu wystąpienia danych odpowiedzi, ale przed zaktualizowaniem strony.</summary>
      <returns>Funkcja JavaScript do wywołania po utworzeniu wystąpienia danych odpowiedzi.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Pobiera lub ustawia funkcję JavaScript do wywołania w przypadku nieudanej aktualizacji strony.</summary>
      <returns>Funkcja JavaScript do wywołania w przypadku nieudanej aktualizacji strony.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Pobiera lub ustawia funkcję JavaScript do wywołania po pomyślnym zaktualizowaniu strony.</summary>
      <returns>Funkcja JavaScript do wywołania po pomyślnym zaktualizowaniu strony.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Zwraca opcje Ajax jako kolekcję atrybutów HTML na potrzeby obsługi dyskretnego JavaScript.</summary>
      <returns>Opcje Ajax jako kolekcja atrybutów HTML na potrzeby obsługi dyskretnego JavaScript.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Pobiera lub ustawia identyfikator elementu DOM do aktualizacji za pomocą odpowiedzi z serwera.</summary>
      <returns>Identyfikator elementu DOM do aktualizacji.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Pobiera lub ustawia adres URL, pod który ma zostać skierowane żądanie.</summary>
      <returns>Adres URL, pod który ma zostać skierowane żądanie.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Wylicza tryby wstawiania skryptu AJAX.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Zastąp element.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Wstaw przed elementem.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Wstaw za elementem.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Dostarcza informacje o asynchronicznej metodzie akcji, takie jak jej nazwa, kontroler, parametry, atrybuty i filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji, używając określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Obiekt zawierający wynik wywołania asynchronicznego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego. Ten parametr może przyjmować wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Zwraca wynik operacji asynchronicznej.</summary>
      <returns>Wynik operacji asynchronicznej.</returns>
      <param name="asyncResult">Obiekt reprezentujący stan operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wykonuje asynchroniczną metodę akcji, używając określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Wynik wykonania asynchronicznej metody akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Reprezentuje klasę odpowiedzialną za wywoływanie metod akcji kontrolera asynchronicznego.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji, używając określonego kontekstu kontrolera, nazwy akcji, metody wywołania zwrotnego i stanu.</summary>
      <returns>Obiekt zawierający wynik operacji asynchronicznej.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego. Ten parametr może przyjmować wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji, używając określonego kontekstu kontrolera, deskryptora akcji, parametrów, metody wywołania zwrotnego i stanu.</summary>
      <returns>Obiekt zawierający wynik operacji asynchronicznej.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry asynchronicznej metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego. Ten parametr może przyjmować wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Wywołuje asynchroniczną metodę akcji, używając określonego kontekstu kontrolera, filtrów, deskryptora akcji, parametrów, metody wywołania zwrotnego i stanu.</summary>
      <returns>Obiekt zawierający wynik operacji asynchronicznej.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="filters">Filtry.</param>
      <param name="actionDescriptor">Deskryptor akcji.</param>
      <param name="parameters">Parametry asynchronicznej metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego. Ten parametr może przyjmować wartość null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Anuluje akcję.</summary>
      <returns>true, jeśli akcja została anulowana; w przeciwnym wypadku false.</returns>
      <param name="asyncResult">Zdefiniowany przez użytkownika obiekt, który określa lub zawiera informacje dotyczące operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Anuluje akcję.</summary>
      <returns>true, jeśli akcja została anulowana; w przeciwnym wypadku false.</returns>
      <param name="asyncResult">Zdefiniowany przez użytkownika obiekt, który określa lub zawiera informacje dotyczące operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Anuluje akcję.</summary>
      <returns>true, jeśli akcja została anulowana; w przeciwnym wypadku false.</returns>
      <param name="asyncResult">Zdefiniowany przez użytkownika obiekt, który określa lub zawiera informacje dotyczące operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Zwraca deskryptor kontrolera.</summary>
      <returns>Deskryptor kontrolera.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Zapewnia operacje asynchroniczne dla klasy <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.AsyncManager" />, używając kontekstu synchronizacji.</summary>
      <param name="syncContext">Kontekst synchronizacji.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Powiadamia program ASP.NET, że wszystkie operacje asynchroniczne są ukończone.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Występuje z chwilą wywołania metody <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Pobiera liczbę operacji oczekujących.</summary>
      <returns>Liczba operacji oczekujących.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Pobiera parametry przekazane do asynchronicznej metody ukończenia.</summary>
      <returns>Parametry przekazane do asynchronicznej metody ukończenia.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Wykonuje wywołanie zwrotne w bieżącym kontekście synchronizacji.</summary>
      <param name="action">Akcja asynchroniczna.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Pobiera lub ustawia wartość limitu czasu procesu asynchronicznego w milisekundach.</summary>
      <returns>Wartość limitu czasu procesu asynchronicznego w milisekundach.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Definiuje interfejs dla źródła wywołania akcji, które jest używane do wywołania akcji asynchronicznej w odpowiedzi na żądanie HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Wywołuje określoną akcję.</summary>
      <returns>Stan wyniku asynchronicznego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji asynchronicznej.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Anuluje akcję asynchroniczną.</summary>
      <returns>true, jeśli metodę asynchroniczną można anulować; w przeciwnym wypadku false.</returns>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Definiuje metody wymagane przez kontroler asynchroniczny.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Wykonuje określony kontekst żądania.</summary>
      <returns>Stan operacji asynchronicznej.</returns>
      <param name="requestContext">Kontekst żądania.</param>
      <param name="callback">Asynchroniczna metoda wywołania zwrotnego.</param>
      <param name="state">Stan.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Kończy operację asynchroniczną.</summary>
      <param name="asyncResult">Wynik asynchroniczny.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Zapewnia kontener dla obiektu menedżera asynchronicznego.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Pobiera obiekt menedżera asynchronicznego.</summary>
      <returns>Obiekt menedżera asynchronicznego.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Zapewnia kontener dla licznika oczekujących operacji asynchronicznych.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.OperationCounter" />.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Występuje z chwilą ukończenia działania metody asynchronicznej.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Pobiera liczbę operacji.</summary>
      <returns>Liczba operacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Zmniejsza liczbę operacji o jeden.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Zmniejsza liczbę operacji o określoną wartość.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
      <param name="value">Liczba operacji, o jaką ma się zmniejszać stan licznika.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Zwiększa liczbę operacji o jeden.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Zwiększa liczbę operacji o określoną wartość.</summary>
      <returns>Zaktualizowana liczba operacji.</returns>
      <param name="value">Liczba operacji, o jaką ma się zwiększać stan licznika.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Dostarcza informacje o asynchronicznej metodzie akcji, takie jak jej nazwa, kontroler, parametry, atrybuty i filtry.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />.</summary>
      <param name="asyncMethodInfo">Obiekt zawierający informacje o metodzie, która rozpoczyna operację asynchroniczną (metodzie, której nazwa kończy się wyrazem „Asynch”.</param>
      <param name="completedMethodInfo">Obiekt zawierający informacje o metodzie ukończenia (metodzie, której nazwa kończy się wyrazem „Completed”.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerDescriptor">Deskryptor kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Pobiera nazwę metody akcji.</summary>
      <returns>Nazwa metody akcji.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Pobiera informacje o metodzie dla asynchronicznej metody akcji.</summary>
      <returns>Informacje o metodzie dla asynchronicznej metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Rozpoczyna wykonywanie asynchronicznej metody akcji, używając określonych parametrów i kontekstu kontrolera.</summary>
      <returns>Obiekt zawierający wynik wywołania asynchronicznego.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="parameters">Parametry metody akcji.</param>
      <param name="callback">Metoda wywołania zwrotnego.</param>
      <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego. Ten parametr może przyjmować wartość null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Pobiera informacje o metodzie dla asynchronicznej metody ukończenia.</summary>
      <returns>Informacje o metodzie dla asynchronicznej metody ukończenia.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Pobiera deskryptor kontrolera dla asynchronicznej metody akcji.</summary>
      <returns>Deskryptor kontrolera dla asynchronicznej metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Zwraca wynik operacji asynchronicznej.</summary>
      <returns>Wynik operacji asynchronicznej.</returns>
      <param name="asyncResult">Obiekt reprezentujący stan operacji asynchronicznej.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca tablicę atrybutów niestandardowych zdefiniowanych dla danego elementu członkowskiego, określonych według typu.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe określonego typu.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych do zwrócenia.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Zwraca parametry metody akcji.</summary>
      <returns>Parametry metody akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Zwraca selektory metod akcji.</summary>
      <returns>Selektory metod akcji.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Ustala, czy dla danego elementu członkowskiego akcji zdefiniowano jedno lub więcej wystąpień określonego typu atrybutu.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano atrybut typu reprezentowanego przez parametr <paramref name="attributeType" />; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Pobiera inicjowany z opóźnieniem unikatowy identyfikator wystąpienia tej klasy.</summary>
      <returns>Inicjowany z opóźnieniem unikatowy identyfikator wystąpienia tej klasy.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Hermetyzuje informacje opisujące kontroler asynchroniczny, takie jak jego nazwa, typ i akcje.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />.</summary>
      <param name="controllerType">Typ kontrolera.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Pobiera typ kontrolera.</summary>
      <returns>Typ kontrolera.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Znajduje metodę akcji, używając określonej nazwy i kontekstu kontrolera.</summary>
      <returns>Informacje o metodzie akcji.</returns>
      <param name="controllerContext">Kontekst kontrolera.</param>
      <param name="actionName">Nazwa akcji.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Zwraca listę deskryptorów metod akcji w kontrolerze.</summary>
      <returns>Lista deskryptorów metod akcji w kontrolerze.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Zwraca atrybuty niestandardowe zdefiniowane dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Zwraca atrybuty niestandardowe określonego typu zdefiniowane dla danego elementu członkowskiego, z wykluczeniem atrybutów nazwanych.</summary>
      <returns>Tablica atrybutów niestandardowych lub pusta tablica, jeśli nie istnieją żadne atrybuty niestandardowe.</returns>
      <param name="attributeType">Typ atrybutów niestandardowych.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Zwraca wartość wskazującą, czy dla danego elementu członkowskiego zdefiniowano jedno lub więcej wystąpień określonego atrybutu niestandardowego.</summary>
      <returns>true, jeśli dla danego elementu członkowskiego zdefiniowano atrybut typu reprezentowanego przez parametr <paramref name="attributeType" />; w przeciwnym wypadku false.</returns>
      <param name="attributeType">Typ atrybutu niestandardowego.</param>
      <param name="inherit">true, aby dla odziedziczonego atrybutu niestandardowego był przeszukiwany łańcuch hierarchii; w przeciwnym wypadku false.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Reprezentuje wyjątek, który wystąpił podczas synchronicznego przetwarzania żądania HTTP w aplikacji ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, używając dostarczonego przez system komunikatu.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, używając określonego komunikatu.</summary>
      <param name="message">Komunikat opisujący wyjątek. Wywołując tego konstruktora, należy się upewnić, że ten ciąg został zlokalizowany dla bieżącej kultury systemy.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />, używając określonego komunikatu o błędzie i odwołania do wyjątku wewnętrznego, który jest przyczyną tego wyjątku.</summary>
      <param name="message">Komunikat opisujący wyjątek. Wywołując tego konstruktora, należy się upewnić, że ten ciąg został zlokalizowany dla bieżącej kultury systemy. </param>
      <param name="innerException">Wyjątek będący przyczyną bieżącego wyjątku. Jeśli parametr <paramref name="innerException" /> nie ma wartości null, bieżący wyjątek jest generowany w bloku catch, który obsługuje wyjątek wewnętrzny. </param>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Reprezentuje obsługę wywoływania podrzędnych metod akcji i renderowania wyniku w tekście w widoku nadrzędnym.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Wywołuje określoną podrzędną metodę akcji i zwraca wynik jako ciąg HTML.</summary>
      <returns>Wynik akcji podrzędnej jako ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji do wywołania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Wywołuje określoną podrzędną metodę akcji z określonymi parametrami i zwraca wynik jako ciąg HTML.</summary>
      <returns>Wynik akcji podrzędnej jako ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji do wywołania.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonej nazwy kontrolera, i zwraca wynik jako ciąg HTML.</summary>
      <returns>Wynik akcji podrzędnej jako ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji do wywołania.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonych parametrów i nazwy kontrolera, i zwraca wynik jako ciąg HTML.</summary>
      <returns>Wynik akcji podrzędnej jako ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji do wywołania.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonych parametrów i nazwy kontrolera, i zwraca wynik jako ciąg HTML.</summary>
      <returns>Wynik akcji podrzędnej jako ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji do wywołania.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Słownik zawierający parametry trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonych parametrów, i zwraca wynik jako ciąg HTML.</summary>
      <returns>Wynik akcji podrzędnej jako ciąg HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji do wywołania.</param>
      <param name="routeValues">Słownik zawierający parametry trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Wywołuje określoną podrzędną metodę akcji i renderuje wynik w tekście w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa podrzędnej metody akcji do wywołania.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonych parametrów, i renderuje wynik w tekście w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa podrzędnej metody akcji do wywołania.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonej nazwy kontrolera, i renderuje wynik w tekście w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa podrzędnej metody akcji do wywołania.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonych parametrów i nazwy kontrolera, i renderuje wynik w tekście w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa podrzędnej metody akcji do wywołania.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonych parametrów i nazwy kontrolera, i renderuje wynik w tekście w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa podrzędnej metody akcji do wywołania.</param>
      <param name="controllerName">Nazwa kontrolera zawierającego metodę akcji.</param>
      <param name="routeValues">Słownik zawierający parametry trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Wywołuje określoną podrzędną metodę akcji, używając określonych parametrów, i renderuje wynik w tekście w widoku nadrzędnym.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa podrzędnej metody akcji do wywołania.</param>
      <param name="routeValues">Słownik zawierający parametry trasy. Parametru <paramref name="routeValues" /> można użyć, aby zapewnić parametry, które są wiązane z parametrami metody akcji. Parametr <paramref name="routeValues" /> jest scalany z pierwotnymi wartościami trasy i zastępuje je.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="htmlHelper" /> ma wartość null.</exception>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="actionName" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.InvalidOperationException">Nie można odnaleźć wymaganych danych dotyczących ścieżki wirtualnej.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Reprezentuje obsługę renderowania wartości obiektów jako kodu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie ciągu.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie ciągu, używając dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i identyfikatora pola HTML.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu, identyfikatora pola HTML i dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca ciąg zawierający wartości poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca ciąg zawierający poszczególne wartości właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca ciąg zawierający wartości poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu i identyfikatora pola HTML.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając szablonu, identyfikatora pola HTML i dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w modelu.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w modelu, używając dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w modelu, używając określonego szablonu.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w modelu, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w modelu, używając określonego szablonu i identyfikatora pola HTML.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w modelu, używając określonego szablonu, identyfikatora pola HTML i dodatkowych danych widoku.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Zapewnia sposób renderowania wartości obiektu jako kodu HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca adiustację HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Adiustacja HTML dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TResult"></typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Reprezentuje obsługę elementu HTML input w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i nazwy pola HTML.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu, nazwy pola HTML i dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie <see cref="T:System.Linq.Expressions.Expression" />, używając określonego szablonu i nazwy pola HTML.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonego szablonu, nazwy pola HTML i dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do wyświetlenia.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TValue">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w modelu.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w modelu, używając dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w modelu, używając określonego szablonu.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w modelu i określonym szablonie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w modelu, używając określonego szablonu i dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w modelu, używając określonej nazwy szablonu i nazwy pola HTML.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w modelu i nazwanym szablonie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element HTML input dla poszczególnych właściwości w modelu, używając nazwy szablonu, nazwy pola HTML i dodatkowych danych widoku.</summary>
      <returns>Element HTML input dla poszczególnych właściwości w modelu.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="templateName">Nazwa szablonu używanego do renderowania obiektu.</param>
      <param name="htmlFieldName">Ciąg używany w celu ujednoznacznienia nazw elementów HTML input renderowanych dla właściwości, które mają tę samą nazwę.</param>
      <param name="additionalViewData">Obiekt anonimowy, który może zawierać dane dodatkowe do scalenia z wystąpieniem obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> tworzonym dla szablonu.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Reprezentuje obsługę kodu HTML w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;. </returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="actionName">Nazwa metody akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez metodę akcji.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeName">Nazwa trasy do użycia w celu uzyskania adresu URL ogłoszenia formularza.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="method">Metoda HTTP przetwarzania formularza, GET lub POST.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Zapisuje tag otwierający &lt;form&gt; w odpowiedzi. Gdy użytkownik prześle formularz, żądanie zostanie przetworzone przez miejsce docelowe trasy.</summary>
      <returns>Tag otwierający &lt;form&gt;.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Renderuje tag zamykający &lt;/form&gt; w odpowiedzi. </summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Reprezentuje obsługę formantów danych wejściowych HTML w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element input pola wyboru, używając określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „checkbox”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Zwraca element input pola wyboru, używając określonego pomocnika HTML, nazwy pola formularza i wartości wskazującej, czy pole wyboru jest zaznaczone.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „checkbox”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="isChecked">true, aby zaznaczyć pole wyboru; w przeciwnym wypadku false.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input pola wyboru, używając określonego pomocnika HTML, nazwy pola formularza, wartości wskazującej, czy pole wyboru jest zaznaczone, oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „checkbox”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="isChecked">true, aby zaznaczyć pole wyboru; w przeciwnym wypadku false.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Zwraca element input pola wyboru, używając określonego pomocnika HTML, nazwy pola formularza, wartości wskazującej, czy pole wyboru jest zaznaczone, oraz atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „checkbox”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="isChecked">true, aby zaznaczyć pole wyboru; w przeciwnym wypadku false.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input pola wyboru, używając określonego pomocnika HTML, nazwy pola formularza i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „checkbox”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input pola wyboru, używając określonego pomocnika HTML, nazwy pola formularza i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „checkbox”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Zwraca element input pola wyboru dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „checkbox” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input pola wyboru dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „checkbox” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, zwrócony przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>Zwraca element input pola wyboru dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „checkbox” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, zwrócony przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca ukryty element input, używając określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „hidden”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca ukryty element input, używając określonego pomocnika HTML, nazwy pola formularza i wartości.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „hidden”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość ukrytego elementu input. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca ukryty element input, używając określonego pomocnika HTML, nazwy pola formularza, wartości i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „hidden”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość ukrytego elementu input. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca ukryty element input, używając określonego pomocnika HTML, nazwy pola formularza, wartości i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „hidden”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość ukrytego elementu input. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca ukryty element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „hidden” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca ukryty element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „hidden” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca ukryty element HTML input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „hidden” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element input hasła, używając określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „password”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input hasła, używając określonego pomocnika HTML, nazwy pola formularza i wartości.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „password”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość elementu input hasła. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input hasła, używając określonego pomocnika HTML, nazwy pola formularza, wartości i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „password”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość elementu input hasła. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca element input hasła, używając określonego pomocnika HTML, nazwy pola formularza, wartości i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „password”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość elementu input hasła. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element input hasła dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „password” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input hasła dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „password” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, zwrócony przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element input hasła dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „password” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, zwrócony przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element input przycisku radiowego służący do prezentacji opcji wzajemnie się wykluczających.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „radio”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Zwraca element input przycisku radiowego służący do prezentacji opcji wzajemnie się wykluczających.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „radio”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <param name="isChecked">true, aby wybrać przycisk radiowy; w przeciwnym wypadku false.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input przycisku radiowego służący do prezentacji opcji wzajemnie się wykluczających.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „radio”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <param name="isChecked">true, aby wybrać przycisk radiowy; w przeciwnym wypadku false.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Zwraca element input przycisku radiowego służący do prezentacji opcji wzajemnie się wykluczających.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „radio”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <param name="isChecked">true, aby wybrać przycisk radiowy; w przeciwnym wypadku false.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input przycisku radiowego służący do prezentacji opcji wzajemnie się wykluczających.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „radio”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca element input przycisku radiowego służący do prezentacji opcji wzajemnie się wykluczających.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „radio”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element input przycisku radiowego dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „radio” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element input przycisku radiowego dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „radio” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, zwrócony przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>Zwraca element input przycisku radiowego dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „radio” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, zwrócony przy użyciu określonych atrybutów HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="value">Jeśli ten przycisk radiowy jest wybrany, wartość przycisku radiowego przesyłana z chwilą ogłoszenia formularza. Jeśli wartość wybranego przycisku radiowego w obiekcie <see cref="T:System.Web.Mvc.ViewDataDictionary" /> lub <see cref="T:System.Web.Mvc.ModelStateDictionary" /> odpowiada tej wartości, przycisk radiowy jest wybrany.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="value" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca tekstowy element input, używając określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „text”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca tekstowy element input, używając określonego pomocnika HTML, nazwy pola formularza i wartości.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „text”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość tekstowego elementu input. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca tekstowy element input, używając określonego pomocnika HTML, nazwy pola formularza, wartości i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „text”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość tekstowego elementu input. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca tekstowy element input, używając określonego pomocnika HTML, nazwy pola formularza, wartości i atrybutów HTML.</summary>
      <returns>Element input, którego atrybut type ma ustawioną wartość „text”.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza i klucz <see cref="T:System.Web.Mvc.ViewDataDictionary" /> używany do wyszukiwania wartości.</param>
      <param name="value">Wartość tekstowego elementu input. Jeśli ta wartość jest równa null, wartość elementu jest pobierana z obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Jeśli w tym obiekcie nie istnieje żadna wartość, wartość jest pobierana z obiektu <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca tekstowy element input dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „text” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca tekstowy element input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „text” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca tekstowy element input dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML input, którego atrybut type ma ustawioną wartość „text” dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="expression" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Reprezentuje obsługę elementu HTML label w widoku ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element HTML label i nazwę właściwości reprezentowanej przez określone wyrażenie.</summary>
      <returns>Element HTML label i nazwa właściwości reprezentowanej przez wyrażenie.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa właściwość do wyświetlenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <returns>Zwraca obiekt <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <returns>Zwraca obiekt <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns>
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca element HTML label i nazwę właściwości reprezentowanej przez model.</summary>
      <returns>Element HTML label i nazwa właściwości reprezentowanej przez model.</returns>
      <param name="html">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <returns>Zwraca obiekt <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Reprezentuje obsługę łączy HTML w aplikacji.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu. Atrybuty są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa kotwicy).</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa kotwicy).</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="controllerName">Nazwa kontrolera.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="actionName">Nazwa akcji.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa kotwicy).</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. Parametry są pobierane za pomocą odbicia, przez zbadanie właściwości obiektu. Ten obiekt jest zazwyczaj tworzony przy użyciu składni inicjatora.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="protocol">Protokół dla adresu URL, np. http lub https.</param>
      <param name="hostName">Nazwa hosta dla adresu URL.</param>
      <param name="fragment">Nazwa fragmentu adresu URL (nazwa kotwicy).</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeName">Nazwa trasy używanej do zwrócenia ścieżki wirtualnej.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy. </param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element kotwicy (element a) zawierający ścieżkę wirtualną określonej akcji.</summary>
      <returns>Element kotwicy (element a).</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="linkText">Tekst wewnętrzny elementu kotwicy.</param>
      <param name="routeValues">Obiekt zawierający parametry dla trasy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="linkText" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Reprezentuje element HTML form w widoku MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" />, używając określonego obiektu odpowiedzi HTTP.</summary>
      <param name="httpResponse">Obiekt odpowiedzi HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="httpResponse " /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" />, używając określonego kontekstu widoku.</summary>
      <param name="viewContext">Obiekt, który hermetyzuje informacje wymagane do zrenderowania widoku.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="viewContext" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Zwalnia zasoby niezarządzane i opcjonalnie zasoby zarządzane używane przez bieżące wystąpienie klasy <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
      <param name="disposing">true, aby zwolnić zarówno zasoby zarządzane, jak i niezarządzane; false, aby zwolnić tylko zasoby niezarządzane.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Kończy formularz i zwalnia wszystkie jego zasoby.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Reprezentuje funkcje służące do renderowania widoku częściowego jako ciągu zakodowanego w formacie HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Renderuje określony widok częściowy jako ciąg zakodowany w formacie HTML.</summary>
      <returns>Widok częściowy zrenderowany jako ciąg zakodowany w formacie HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="partialViewName">Nazwa widoku częściowego do zrenderowania.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Renderuje określony widok częściowy jako ciąg zakodowany w formacie HTML.</summary>
      <returns>Widok częściowy zrenderowany jako ciąg zakodowany w formacie HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="partialViewName">Nazwa widoku częściowego do zrenderowania.</param>
      <param name="model">Model widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderuje określony widok częściowy jako ciąg zakodowany w formacie HTML.</summary>
      <returns>Widok częściowy zrenderowany jako ciąg zakodowany w formacie HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="model">Model widoku częściowego.</param>
      <param name="viewData">Słownik danych widoku dla widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderuje określony widok częściowy jako ciąg zakodowany w formacie HTML.</summary>
      <returns>Widok częściowy zrenderowany jako ciąg zakodowany w formacie HTML.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="partialViewName">Nazwa widoku częściowego do zrenderowania.</param>
      <param name="viewData">Słownik danych widoku dla widoku częściowego.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Zapewnia obsługę renderowania widoku częściowego.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Renderuje określony widok częściowy, używając określonego pomocnika HTML.</summary>
      <param name="htmlHelper">Pomocnik HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Renderuje określony widok częściowy, przekazując mu kopię bieżącego obiektu <see cref="T:System.Web.Mvc.ViewDataDictionary" />, ale z ustawieniem określonego modelu dla właściwości Model.</summary>
      <param name="htmlHelper">Pomocnik HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="model">Model.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderuje określony widok częściowy, zastępując właściwość ViewData widoku częściowego określonym obiektem <see cref="T:System.Web.Mvc.ViewDataDictionary" /> i ustawiając określony model dla właściwości Model danych widoku.</summary>
      <param name="htmlHelper">Pomocnik HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="model">Model widoku częściowego.</param>
      <param name="viewData">Dane widoku dla widoku częściowego.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderuje określony widok częściowy, zastępując jego właściwość ViewData określonym obiektem <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
      <param name="htmlHelper">Pomocnik HTML.</param>
      <param name="partialViewName">Nazwa widoku częściowego.</param>
      <param name="viewData">Dane widoku.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Reprezentuje obsługę dokonywania wyboru z listy.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element HTML select.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML, nazwy pola formularza i określonych elementów listy.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i określonych atrybutów HTML.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i określonych atrybutów HTML.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i etykiety opcji.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu. Ten parametr może przyjmować wartość null.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy, etykiety opcji i określonych atrybutów HTML.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu. Ten parametr może przyjmować wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy, etykiety opcji i określonych atrybutów HTML.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu. Ten parametr może przyjmować wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca element select wyboru pojedynczego, używając określonego pomocnika HTML, nazwy pola formularza i etykiety opcji.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu. Ten parametr może przyjmować wartość null.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy i etykiety opcji.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu. Ten parametr może przyjmować wartość null.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy, etykiety opcji i atrybutów HTML.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu. Ten parametr może przyjmować wartość null.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy, etykiety opcji i atrybutów HTML.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="optionLabel">Tekst dla domyślnego pustego elementu. Ten parametr może przyjmować wartość null.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca element select wyboru wielokrotnego, używając określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element HTML select.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element select wyboru wielokrotnego, używając określonego pomocnika HTML, nazwy pola formularza i określonych elementów listy.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element select wyboru wielokrotnego, używając określonego pomocnika HTML, nazwy pola formularza, określonych elementów listy i określonych atrybutów HTML.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element select wyboru wielokrotnego, używając określonego pomocnika HTML, nazwy pola formularza i określonych elementów listy.</summary>
      <returns>Element HTML select z elementem podrzędnym option dla poszczególnych elementów na liście.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy rozwijanej.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <exception cref="T:System.ArgumentException">Parametr <paramref name="name" /> ma wartość null lub jest pusty.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Zwraca element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych elementów listy i atrybutów HTML.</summary>
      <returns>Element HTML select dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="selectList">Kolekcja obiektów <see cref="T:System.Web.Mvc.SelectListItem" /> używanych do wypełnienia listy.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Reprezentuje obsługę formantów HTML textarea.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML i nazwy pola formularza.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML, nazwy pola formularza i określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML i atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML, nazwy pola formularza i zawartości tekstowej.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="value">Zawartość tekstowa.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej i określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej, liczby wierszy i kolumn oraz określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej, liczby wierszy i kolumn oraz określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zwraca określony element textarea, używając określonego pomocnika HTML, nazwy pola formularza, zawartości tekstowej i określonych atrybutów HTML.</summary>
      <returns>Element textarea.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="name">Nazwa pola formularza do zwrócenia.</param>
      <param name="value">Zawartość tekstowa.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie.</summary>
      <returns>Element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych atrybutów HTML oraz liczby wierszy i kolumn.</summary>
      <returns>Element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>Zwraca element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych atrybutów HTML oraz liczby wierszy i kolumn.</summary>
      <returns>Element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="rows">Liczba wierszy.</param>
      <param name="columns">Liczba kolumn.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Zwraca element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez określone wyrażenie, używając określonych atrybutów HTML.</summary>
      <returns>Element HTML textarea dla poszczególnych właściwości w obiekcie reprezentowanym przez wyrażenie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML do ustawienia dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="expression" /> ma wartość null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Zapewnia obsługę sprawdzania poprawności danych wejściowych z formularza HTML.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Pobiera lub ustawia nazwę pliku zasobów (klucza klasy) zawierającego zlokalizowane wartości ciągów.</summary>
      <returns>Nazwa pliku zasobów (klucza klasy).</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Pobiera metadane sprawdzania poprawności dla określonego modelu i stosuje poszczególne reguły do pola danych.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="modelName">Nazwa właściwości lub obiektu modelu, którego poprawność jest sprawdzana.</param>
      <exception cref="T:System.ArgumentNullException">Parametr <paramref name="modelName" /> ma wartość null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Pobiera metadane sprawdzania poprawności i sprawdza poprawność każdego pola reprezentowanego przez określone wyrażenie.</summary>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności, jeśli występuje błąd dla określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, pusty ciąg; w przeciwnym wypadku element span zawiera komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="modelName">Nazwa właściwości lub obiektu modelu, którego poprawność jest sprawdzana.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności, jeśli występuje błąd dla określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, pusty ciąg; w przeciwnym wypadku element span zawiera komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="modelName">Nazwa właściwości lub obiektu modelu, którego poprawność jest sprawdzana.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności, jeśli występuje błąd dla określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, pusty ciąg; w przeciwnym wypadku element span zawiera komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="modelName">Nazwa właściwości lub obiektu modelu, którego poprawność jest sprawdzana.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności, jeśli występuje błąd dla określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, pusty ciąg; w przeciwnym wypadku element span zawiera komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="modelName">Nazwa właściwości lub obiektu modelu, którego poprawność jest sprawdzana.</param>
      <param name="validationMessage">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności, jeśli występuje błąd dla określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, pusty ciąg; w przeciwnym wypadku element span zawiera komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="modelName">Nazwa właściwości lub obiektu modelu, którego poprawność jest sprawdzana.</param>
      <param name="validationMessage">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Wyświetla komunikat dotyczący sprawdzania poprawności, jeśli występuje błąd dla określonego pola w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Jeśli właściwość lub obiekt są prawidłowe, pusty ciąg; w przeciwnym wypadku element span zawiera komunikat o błędzie.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="modelName">Nazwa właściwości lub obiektu modelu, którego poprawność jest sprawdzana.</param>
      <param name="validationMessage">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Zwraca adiustację HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez określone wyrażenie.</summary>
      <returns>Adiustacja HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez wyrażenie. Jeśli nie występują błędy sprawdzania poprawności lub sprawdzanie poprawności po stronie klienta jest wyłączone, ta metoda zwraca wartość null.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Zwraca adiustację HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez określone wyrażenie, używając określonego komunikatu.</summary>
      <returns>Adiustacja HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez wyrażenie. Jeśli nie występują błędy sprawdzania poprawności lub sprawdzanie poprawności po stronie klienta jest wyłączone, ta metoda zwraca wartość null.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="validationMessage">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca adiustację HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez określone wyrażenie, używając określonego komunikatu i atrybutów HTML.</summary>
      <returns>Adiustacja HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez wyrażenie. Jeśli nie występują błędy sprawdzania poprawności lub sprawdzanie poprawności po stronie klienta jest wyłączone, ta metoda zwraca wartość null.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="validationMessage">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Zwraca adiustację HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez określone wyrażenie, używając określonego komunikatu i atrybutów HTML.</summary>
      <returns>Adiustacja HTML komunikatu o błędzie sprawdzania poprawności dla poszczególnych pól danych reprezentowanych przez wyrażenie. Jeśli nie występują błędy sprawdzania poprawności lub sprawdzanie poprawności po stronie klienta jest wyłączone, ta metoda zwraca wartość null.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="expression">Wyrażenie, które określa obiekt zawierający właściwości do zrenderowania.</param>
      <param name="validationMessage">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
      <typeparam name="TModel">Typ modelu.</typeparam>
      <typeparam name="TProperty">Typ wartości.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności zawartych w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności zawartych w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="excludePropertyErrors">true, aby w podsumowaniu były wyświetlane tylko błędy na poziomie modelu, lub false, aby w podsumowaniu były wyświetlane wszystkie błędy.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności zawartych w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="excludePropertyErrors">true, aby w podsumowaniu były wyświetlane tylko błędy na poziomie modelu, lub false, aby w podsumowaniu były wyświetlane wszystkie błędy.</param>
      <param name="message">Komunikat do wyświetlenia z podsumowaniem sprawdzania poprawności.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności zawartych w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="excludePropertyErrors">true, aby w podsumowaniu były wyświetlane tylko błędy na poziomie modelu, lub false, aby w podsumowaniu były wyświetlane wszystkie błędy.</param>
      <param name="message">Komunikat do wyświetlenia z podsumowaniem sprawdzania poprawności.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności zawartych w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" /> i opcjonalnie wyświetla tylko błędy na poziomie modelu.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="excludePropertyErrors">true, aby w podsumowaniu były wyświetlane tylko błędy na poziomie modelu, lub false, aby w podsumowaniu były wyświetlane wszystkie błędy.</param>
      <param name="message">Komunikat do wyświetlenia z podsumowaniem sprawdzania poprawności.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności zawartych w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HMTL rozszerzane przez tę metodę.</param>
      <param name="message">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności zawartych w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="message">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Słownik zawierający atrybuty HTML dla elementu.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zwraca nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności w obiekcie <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Ciąg zawierający nieuporządkowaną listę (element ul) komunikatów dotyczących sprawdzania poprawności.</returns>
      <param name="htmlHelper">Wystąpienie pomocnika HTML rozszerzane przez tę metodę.</param>
      <param name="message">Komunikat do wyświetlenia, jeśli określone pole zawiera błąd.</param>
      <param name="htmlAttributes">Obiekt zawierający atrybuty HTML dla elementu. </param>
    </member>
    <member name="T:System.Web.Mvc.Razor.ModelSpan">
      <summary>Provides a model-aware <see cref="T:System.Web.Razor.Parser.SyntaxTree.Span" /> class for ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.ModelSpan.#ctor(System.Web.Razor.Text.SourceLocation,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.Razor.ModelSpan" /> class.</summary>
      <param name="start">The start of the span.</param>
      <param name="content">The content.</param>
      <param name="modelTypeName">The type name of the model.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.ModelSpan.Equals(System.Object)">
      <summary>Gets a value that indicates whether the current <see cref="T:System.Web.Mvc.Razor.ModelSpan" /> object is identical to the specified object.</summary>
      <returns>true if the current <see cref="T:System.Web.Mvc.Razor.ModelSpan" /> object is identical to the specified object; otherwise, false.</returns>
      <param name="obj">The model span object.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.ModelSpan.GetHashCode">
      <summary>Returns the hash code of the <see cref="T:System.Web.Mvc.Razor.ModelSpan" /> object.</summary>
      <returns>The hash code of the <see cref="T:System.Web.Mvc.Razor.ModelSpan" /> object.</returns>
    </member>
    <member name="P:System.Web.Mvc.Razor.ModelSpan.ModelTypeName">
      <summary>Gets the type name of the model.</summary>
      <returns>The type name of the model.</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeGenerator">
      <summary>Compiles ASP.NET Razor views into classes.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeGenerator.#ctor(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeGenerator" /> class.</summary>
      <param name="className">The class name.</param>
      <param name="rootNamespaceName">The root namespace.</param>
      <param name="sourceFileName">The name of the source file.</param>
      <param name="host">The ASP.NET Razor engine host.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeGenerator.TryVisitSpecialSpan(System.Web.Razor.Parser.SyntaxTree.Span)">
      <summary>Returns a value that indicates whether the specified model span is an instance of <see cref="T:System.Web.Mvc.Razor.ModelSpan" />.</summary>
      <returns>true if the value of the <paramref name="span" /> parameter is an instance of <see cref="T:System.Web.Mvc.Razor.ModelSpan" />; otherwise, false.</returns>
      <param name="span">The model span.</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser"></member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor"></member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ParseInheritsStatement(System.Web.Razor.Parser.CodeBlockInfo)"></member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeGenerator">
      <summary>Compiles ASP.NET Razor views into classes.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeGenerator.#ctor(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)"></member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeGenerator.TryVisitSpecialSpan(System.Web.Razor.Parser.SyntaxTree.Span)"></member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>Extends the VBCodeParser class by adding support for the @model keyword.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" /> class.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ParseInheritsStatement(System.Web.Razor.Parser.CodeBlockInfo)"></member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>Configures the ASP.NET Razor parser and code generator for a specified file.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" /> class. </summary>
      <param name="virtualPath">The virtual path of the ASP.NET Razor file.</param>
      <param name="physicalPath">The physical path of the ASP.NET Razor file.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)"></member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)"></member>
  </members>
</doc>